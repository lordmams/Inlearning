version: '3.8'

services:
  # PostgreSQL principal
  db:
    image: postgres:13
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-elearning_db}
      POSTGRES_USER: ${POSTGRES_USER:-elearning_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-elearning_password}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-elearning_user} -d ${POSTGRES_DB:-elearning_db}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis principal
  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # PgAdmin
  pgadmin:
    image: dpage/pgadmin4:latest
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL:-admin@example.com}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD:-admin}
    ports:
      - "8080:80"
    depends_on:
      - db

  # Flask API
  flask_api:
    build: ./learning_platform
    environment:
      - FLASK_ENV=development
      - FLASK_DEBUG=1
      - POSTGRES_HOST=db
      - POSTGRES_DB=${POSTGRES_DB:-elearning_db}
      - POSTGRES_USER=${POSTGRES_USER:-elearning_user}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-elearning_password}
      - REDIS_URL=redis://redis:6379/0
    ports:
      - "5000:5000"
    volumes:
      - ./learning_platform:/app
      - ./ingest:/app/ingest
    depends_on:
      - db
      - redis

  # Django App
  app:
    build: ./elearning
    command: sh -c "python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    environment:
      - DEBUG=1
      - POSTGRES_HOST=db
      - POSTGRES_DB=${POSTGRES_DB:-elearning_db}
      - POSTGRES_USER=${POSTGRES_USER:-elearning_user}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-elearning_password}
      - REDIS_URL=redis://redis:6379/0
      - FLASK_API_URL=http://flask_api:5000
    ports:
      - "8000:8000"
    volumes:
      - ./elearning:/app
      - ./ingest:/app/ingest
    depends_on:
      - db
      - redis
      - flask_api

  # Consumer
  consumer:
    build: ./elearning
    command: python start_consumer.py
    environment:
      - POSTGRES_HOST=db
      - POSTGRES_DB=${POSTGRES_DB:-elearning_db}
      - POSTGRES_USER=${POSTGRES_USER:-elearning_user}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-elearning_password}
      - FLASK_API_URL=http://flask_api:5000
    volumes:
      - ./elearning:/app
      - ./ingest:/app/ingest
    depends_on:
      - db
      - flask_api

  # Spark Master
  spark-master:
    image: bitnami/spark:3.5
    container_name: spark-master
    environment:
      - SPARK_MODE=master
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
    ports:
      - "8090:8080"
      - "7077:7077"
    volumes:
      - ./learning_platform/spark:/opt/bitnami/spark/jobs
      - ./learning_platform/data:/opt/bitnami/spark/data
      - ./ingest:/opt/bitnami/spark/ingest

  # Spark Worker 1
  spark-worker-1:
    image: bitnami/spark:3.5
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
      - SPARK_WORKER_MEMORY=1G
      - SPARK_WORKER_CORES=1
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
    volumes:
      - ./learning_platform/spark:/opt/bitnami/spark/jobs
      - ./learning_platform/data:/opt/bitnami/spark/data
      - ./ingest:/opt/bitnami/spark/ingest
    depends_on:
      - spark-master

  # Spark Worker 2  
  spark-worker-2:
    image: bitnami/spark:3.5
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
      - SPARK_WORKER_MEMORY=1G
      - SPARK_WORKER_CORES=1
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
    volumes:
      - ./learning_platform/spark:/opt/bitnami/spark/jobs
      - ./learning_platform/data:/opt/bitnami/spark/data
      - ./ingest:/opt/bitnami/spark/ingest
    depends_on:
      - spark-master

volumes:
  postgres_data: 