[
    {
        "url": "https://www.w3schools.com/php/default.asp",
        "cours": {
            "titre": "PHPTutorial",
            "description": "Learn PHPPHP is a server scripting language, and a powerful tool for making dynamic and interactive Web pages.PHP is a widely-used, free, and efficient alternative to competitors such as Microsoft's ASP.Start learning PHP now »",
            "lien": "https://www.w3schools.com/php/default.asp",
            "contenus": {
                "paragraphs": [
                    "PHP is a server scripting language, and a powerful tool for making dynamic and interactive Web pages.",
                    "PHP is a widely-used, free, and efficient alternative to competitors such as Microsoft's ASP.",
                    "With our online \"PHP Tryit\" editor, you can edit the PHP code, and click \non a button to view the result.",
                    "Click on the \"Try it Yourself\" button to see how it works.",
                    "Many chapters in this tutorial end with an exercise where you can check your level of knowledge.",
                    "See all PHP Exercises",
                    "Learn by examples! This tutorial supplements all explanations with clarifying examples.",
                    "See All PHP Examples",
                    "Learn by taking a quiz! This quiz will give you a signal of how much you know, or do not know, about PHP.",
                    "Start PHP Quiz!",
                    "Track your progress with the free \"My Learning\" program here at W3Schools.",
                    "Log in to your account, and start earning points!",
                    "This is an optional feature. You can study at W3Schools without using My Learning.",
                    "W3Schools' PHP reference contains different categories of all PHP functions, keywords and constants, along with examples.",
                    "Get certified by completingthecourse"
                ],
                "lists": [],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/php/php_intro.asp",
        "cours": {
            "titre": "PHPIntroduction",
            "description": "",
            "lien": "https://www.w3schools.com/php/php_intro.asp",
            "contenus": {
                "paragraphs": [
                    "PHP code is executed on the server.",
                    "Before you continue you should have a basic understanding of the following:",
                    "If you want to study these subjects first, find the tutorials on ourHome page.",
                    "PHP is an amazing and popular language!",
                    "It is powerful enough to be at the core of the biggest \nblogging system on the web (WordPress)!It is deep enough to run large social networks!It is also easy enough to be a beginner's first server side \nlanguage!",
                    "With PHP you are not limited to output HTML. You can output images or PDF \nfiles. You can also output any text, such as XHTML and \nXML."
                ],
                "lists": [
                    [
                        "HTML",
                        "CSS",
                        "JavaScript"
                    ],
                    [
                        "PHP is an acronym for \"PHP: Hypertext Preprocessor\"",
                        "PHP is a widely-used, open source scripting language",
                        "PHP scripts are executed on the server",
                        "PHP is free to download and use"
                    ],
                    [
                        "PHP files can contain text, HTML, CSS, JavaScript, and PHP code",
                        "PHP code is executed on the server, and the result is returned to the browser as plain HTML",
                        "PHP files have extension \".php\""
                    ],
                    [
                        "PHP can generate dynamic page content",
                        "PHP can create, open, read, write, delete, and close files on the server",
                        "PHP can collect form data",
                        "PHP can send and receive cookies",
                        "PHP can add, delete, modify data in your database",
                        "PHP can be used to control user-access",
                        "PHP can encrypt data"
                    ],
                    [
                        "PHP runs on various platforms (Windows, Linux, Unix, Mac OS X, etc.)",
                        "PHP is compatible with almost all servers used today (Apache, IIS, etc.)",
                        "PHP supports a wide range of databases",
                        "PHP is free. Download it from the official PHP resource:www.php.net",
                        "PHP is easy to learn and runs efficiently on the server side"
                    ],
                    [
                        "PHP 7 is much faster than the previous popular stable release (PHP 5.6)",
                        "PHP 7 has improved Error Handling",
                        "PHP 7 supports stricter Type Declarations for function arguments",
                        "PHP 7 supports new operators (like the spaceship operator:<=>)"
                    ]
                ],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/php/php_install.asp",
        "cours": {
            "titre": "PHPInstallation",
            "description": "",
            "lien": "https://www.w3schools.com/php/php_install.asp",
            "contenus": {
                "paragraphs": [
                    "To start using PHP, you can:",
                    "If your server has activated support for PHP you do not \nneed to do anything.",
                    "Just create some.phpfiles, place them in your web directory, and the server \nwill automatically parse them for you.",
                    "You do not need to compile anything or install any extra tools.",
                    "Because PHP is free, most web hosts \noffer PHP support.",
                    "However, if your server does not support PHP, you must:",
                    "The official PHP website (PHP.net) has installation instructions for PHP:http://php.net/manual/en/install.php",
                    "With w3schools' online PHP compiler, you can edit PHP code, and view the result in your browser.",
                    "Click on the \"Try it Yourself\" button to see how it works.",
                    "To check your php version you can use thephpversion()function:",
                    "Display the PHP version:"
                ],
                "lists": [
                    [
                        "Find a web host with PHP and MySQL support",
                        "Install a web server on your own PC, and then install PHP and MySQL"
                    ],
                    [
                        "install a web server",
                        "install PHP",
                        "install a database, such as MySQL"
                    ]
                ],
                "examples": [
                    "<?php$txt = \"PHP\";echo \"I love$txt!\";?>"
                ]
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/php/php_syntax.asp",
        "cours": {
            "titre": "PHPSyntax",
            "description": "",
            "lien": "https://www.w3schools.com/php/php_syntax.asp",
            "contenus": {
                "paragraphs": [
                    "A PHP script is executed on the server, and the plain HTML result is sent back to the browser.",
                    "A PHP script can be placed anywhere in the document.",
                    "A PHP script starts with<?phpand ends with?>:",
                    "The default file extension for PHP files is \".php\".",
                    "A PHP file normally contains HTML tags, and some PHP scripting code.",
                    "Below, we have an example of a simple PHP file, with a PHP script that uses a \nbuilt-in PHP function \"echo\" to output the text\n\"Hello World!\" on a web page:",
                    "A simple.phpfile with both HTML code and PHP code:",
                    "Note:PHP statements end with a semicolon (;).",
                    "In PHP, keywords (e.g.if,else,while,echo, etc.), classes, functions, \nand user-defined functions are not case-sensitive.",
                    "In the example below, all three echo statements below are equal and legal:",
                    "ECHOis the same asecho:",
                    "Note:However; all variable names are case-sensitive!",
                    "Look at the example below; only the first statement will display the value of the$colorvariable! This is because$color,$COLOR, and$coLORare treated as three \ndifferent variables:",
                    "$COLORisnotsame as$color:"
                ],
                "lists": [],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/php/php_comments.asp",
        "cours": {
            "titre": "PHPComments",
            "description": "",
            "lien": "https://www.w3schools.com/php/php_comments.asp",
            "contenus": {
                "paragraphs": [
                    "A comment in PHP code is a line that is not executed as a part of the \nprogram. Its only purpose is to be read by someone who is looking at the code.",
                    "Comments can be used to:",
                    "PHP supports several ways of commenting:",
                    "Syntax for comments in PHP code:",
                    "Single line comments start with//.",
                    "Any text between//and the end of the line will be ignored (will not be executed).",
                    "You can also use#for single line comments,\nbut in this tutorial we will use//.",
                    "The following examples uses a single-line comment as an explanation:",
                    "A comment before the code:",
                    "A comment at the end of a line:",
                    "We can use comments to prevent code lines from being executed:",
                    "Do not display a welcome message:"
                ],
                "lists": [
                    [
                        "Let others understand your code",
                        "Remind yourself of what you did - Most programmers have experienced coming back to their own work a year or two later and having to re-figure out what they did. Comments can remind you of what you were thinking when you wrote the code",
                        "Leave out some parts of your code"
                    ]
                ],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/php/php_comments_multiline.asp",
        "cours": {
            "titre": "PHPMultiline Comments",
            "description": "",
            "lien": "https://www.w3schools.com/php/php_comments_multiline.asp",
            "contenus": {
                "paragraphs": [
                    "Multi-line comments start with/*and end with*/.",
                    "Any text between/*and*/will be ignored.",
                    "The following example uses a multi-line comment as an explanation:",
                    "Multi-line comment as an explanation:",
                    "We can use multi-line comments to prevent blocks of code from being executed:",
                    "Multi-line comment to ignore code:",
                    "The multi-line comment syntax can also be used to prevent execution of parts \ninside a code-line:",
                    "The+ 15part will be ignored in the \ncalculation:"
                ],
                "lists": [],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/php/php_variables.asp",
        "cours": {
            "titre": "PHPVariables",
            "description": "",
            "lien": "https://www.w3schools.com/php/php_variables.asp",
            "contenus": {
                "paragraphs": [
                    "Variables are \"containers\" for storing information.",
                    "In PHP, a variable starts with the$sign, followed by the name of the variable:",
                    "In the example above, the variable$xwill hold the value5, and the variable$ywill hold the value\"John\".",
                    "Note:When you assign a text value to a variable, put quotes around the value.",
                    "Note:Unlike other programming languages, PHP has no command \nfor declaring a variable. It is created the moment you first assign a value to \nit.",
                    "Think of variables as containers for storing data.",
                    "A variable can have a short name (like$xand$y) or a more descriptive name ($age,$carname,$total_volume).",
                    "Rules for PHP variables:",
                    "Remember that PHP variable names are case-sensitive!",
                    "The PHPechostatement is often used to output data to the screen.",
                    "The following example will show how to output text and a variable:",
                    "The following example will produce the same output as the example above:",
                    "The following example will output the sum of two variables:",
                    "Note:You will learn more about theechostatement and how \nto output data to the screen in thePHP Echo/Print chapter.",
                    "In the example above, notice that we did not have to tell PHP which data type the variable is.",
                    "PHP automatically associates a data type to the variable, depending on its value. \nSince the data types are not set in a strict sense, you can do things like \nadding a string to an integer without causing an error.",
                    "In PHP 7, type declarations were added. This gives an option to specify \nthe data type expected when declaring a function, and by enabling the strict requirement, it will throw a \"Fatal \nError\" on a type mismatch.",
                    "You will learn more aboutstrictandnon-strictrequirements, and  \ndata type declarations in thePHP Functionschapter.",
                    "PHP has no command for declaring a variable, and the data type depends on the value of the variable.",
                    "PHP supports the following data types:",
                    "To get the data type of a variable, use thevar_dump()function.",
                    "Thevar_dump()function returns the data type and the value:",
                    "See whatvar_dump()returns for other data types:",
                    "Assigning a string to a variable is done with the variable name followed by an equal sign and the string:",
                    "String variables can be declared either by using double or single quotes, but you should\nbe aware of the differences. Learn more about the differences in thePHP Strings chapter.",
                    "You can assign the same value to multiple variables in one line:",
                    "All three variables get the value \"Fruit\":"
                ],
                "lists": [
                    [
                        "A variable starts with the$sign, followed by the name of the variable",
                        "A variable name must start with a letter or the underscore character",
                        "A variable name cannot start with a number",
                        "A variable name can only contain alpha-numeric characters and underscores (A-z, 0-9, and _ )",
                        "Variable names are case-sensitive ($ageand$AGEare two different variables)"
                    ],
                    [
                        "String",
                        "Integer",
                        "Float (floating point numbers - also called double)",
                        "Boolean",
                        "Array",
                        "Object",
                        "NULL",
                        "Resource"
                    ]
                ],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/php/php_variables_scope.asp",
        "cours": {
            "titre": "PHPVariables Scope",
            "description": "",
            "lien": "https://www.w3schools.com/php/php_variables_scope.asp",
            "contenus": {
                "paragraphs": [
                    "In PHP, variables can be declared anywhere in the script.",
                    "The scope of a variable is the part of the script where the variable can be referenced/used.",
                    "PHP has three different variable scopes:",
                    "A variable declaredoutsidea function has a GLOBAL SCOPE and can only \nbe accessed outside a function:",
                    "Variable with global scope:",
                    "A variable declaredwithina function has a LOCAL SCOPE and can only \nbe accessed within that function:",
                    "Variable with local scope:",
                    "You can have local variables with the same name in different functions, \nbecause local variables are only recognized by the function in which they are \ndeclared.",
                    "Theglobalkeyword is used to access a global variable from within a function.",
                    "To do this, use theglobalkeyword before the variables (inside the \nfunction):",
                    "PHP also stores all global variables in an array called$GLOBALS[index]. \nTheindexholds the name of the variable. This array is also accessible from \nwithin functions and can be used to update global variables directly.",
                    "The example above can be rewritten like this:",
                    "Normally, when a function is completed/executed, all of its variables are deleted. \nHowever, sometimes we want a local variable NOT to be deleted. We need it for a \nfurther job.",
                    "To do this, use thestatickeyword when you first declare the \nvariable:",
                    "Then, each time the function is called, that variable will still have the \ninformation it contained from the last time the function was called.",
                    "Note:The variable is still local to the function."
                ],
                "lists": [
                    [
                        "local",
                        "global",
                        "static"
                    ]
                ],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/php/php_echo_print.asp",
        "cours": {
            "titre": "PHPecho and print Statements",
            "description": "",
            "lien": "https://www.w3schools.com/php/php_echo_print.asp",
            "contenus": {
                "paragraphs": [
                    "With PHP, there are two basic ways to get output:echoandprint.",
                    "In this tutorial we useechoorprintin almost every \nexample. So, this chapter contains a little more info about those two output \nstatements.",
                    "echoandprintare more or less the same. They are both used to output data \nto the screen.",
                    "The differences are small:echohas no return value whileprinthas a return value of 1 so it can be used in \nexpressions.echocan take multiple parameters (although such usage is rare) \nwhileprintcan take one argument.echois marginally \nfaster thanprint.",
                    "Theechostatement can be used with or without parentheses:echoorecho().",
                    "The following example shows how to output text with theechocommand (notice that the text can contain HTML markup):",
                    "The following example shows how to output text and variables with theechostatement:",
                    "Strings are surrounded by quotes, but there is a difference between single \nand double quotes in PHP.",
                    "When using double quotes, variables can be inserted to the string as in the \nexample above.",
                    "When using single quotes, variables have to be inserted using the.operator, like this:",
                    "Theprintstatement can be used with or without \nparentheses:printorprint().",
                    "The following example shows how to output text with theprintcommand (notice that the text can contain HTML markup):",
                    "The following example shows how to output text and variables with theprintstatement:",
                    "Strings are surrounded by quotes, but there is a difference between single \nand double quotes in PHP.",
                    "When using double quotes, variables can be inserted to the string as in the \nexample above.",
                    "When using single quotes, variables have to be inserted using the.operator, like this:"
                ],
                "lists": [],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/php/php_datatypes.asp",
        "cours": {
            "titre": "PHPData Types",
            "description": "",
            "lien": "https://www.w3schools.com/php/php_datatypes.asp",
            "contenus": {
                "paragraphs": [
                    "Variables can store data of different types, and different data types can do \ndifferent things.",
                    "PHP supports the following data types:",
                    "You can get the data type of any object by using thevar_dump()function.",
                    "Thevar_dump()function returns the data type and the value:",
                    "A string is a sequence of characters, like \"Hello world!\".",
                    "A string can be any text inside quotes. You can use single or double quotes:",
                    "An integer data type is a non-decimal number between -2,147,483,648 and \n2,147,483,647.",
                    "Rules for integers:",
                    "In the following example$xis an integer. The PHPvar_dump()function returns the data type and value:",
                    "A float (floating point number) is a number with a decimal point or a number in exponential form.",
                    "In the following example$xis a float. The PHPvar_dump()function returns the data type and value:",
                    "A Boolean represents two possible states: TRUE or FALSE.",
                    "Booleans are often used in conditional testing.",
                    "You will learn more about \nconditional testing in thePHP If...Else chapter.",
                    "An array stores multiple values in one single variable.",
                    "In the following example$carsis an array. The PHPvar_dump()function returns the data type and value:",
                    "You will learn a lot more about arrays in later chapters of this tutorial.",
                    "Classes and objects are the two main aspects of object-oriented programming.",
                    "A class is a template for objects, and an object is an instance of a class.",
                    "When the individual objects are created, they inherit all the properties and \nbehaviors from the class, but each object will have different values for the \nproperties.",
                    "Let's assume we have a class namedCarthat \ncan have properties like model, \ncolor, etc. We can define variables like$model,$color, and so on, to hold the \nvalues of these properties.",
                    "When the individual objects (Volvo, BMW, Toyota, etc.) are created, they \ninherit all the properties and behaviors from the class, but each object will \nhave different values for the properties.",
                    "If you create a__construct()function, PHP will automatically call this \nfunction when you create an object from a class.",
                    "Do not worry if you do not understand the PHP Object syntax, you will learn more about that in thePHP Classes/Objects chapter.",
                    "Null is a special data type which can have only one value: NULL.",
                    "A variable of data type NULL is a variable that has no value assigned to it.",
                    "Tip:If a variable is created without a value, it is \nautomatically assigned a value of NULL.",
                    "Variables can also be emptied by setting the value to NULL:",
                    "If you assign an integer value to a variable, the type will automatically be an integer.",
                    "If you assign a string to the same variable, the type will change to a string:",
                    "If you want to change the data type of an existing variable, but not by \nchanging the value, you can use casting.",
                    "Casting allows you to change data type on variables:",
                    "You will learn more about casting in thePHP Casting Chapter.",
                    "The special resource type is not an actual data type. It is the storing of a \nreference to functions and resources external to PHP.",
                    "A common example of \nusing the resource data type is a database call.",
                    "We will not talk about the resource type here, since it is an advanced topic."
                ],
                "lists": [
                    [
                        "String",
                        "Integer",
                        "Float (floating point numbers - also called double)",
                        "Boolean",
                        "Array",
                        "Object",
                        "NULL",
                        "Resource"
                    ],
                    [
                        "An integer must have at least one digit",
                        "An integer must not have a decimal point",
                        "An integer can be either positive or negative",
                        "Integers can be specified in: decimal (base 10), hexadecimal (base 16), octal (base \n  8), or binary (base 2) notation"
                    ]
                ],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/php/php_string.asp",
        "cours": {
            "titre": "PHPStrings",
            "description": "",
            "lien": "https://www.w3schools.com/php/php_string.asp",
            "contenus": {
                "paragraphs": [
                    "A string is a sequence of characters, like \"Hello world!\".",
                    "Strings in PHP are surrounded by either double quotation marks, or single quotation marks.",
                    "NoteThere is a big difference between double quotes and \nsingle quotes in PHP.",
                    "Double quotes process special characters, single quotes does not.",
                    "You can use double or single quotes, but you should be aware of the \ndifferences between the two.",
                    "Double quoted strings perform action on special characters.",
                    "E.g. when there is a variable in the string, it returns thevalueof \nthe variable:",
                    "Double quoted string literals perform operations for special characters:",
                    "Single quoted strings does not perform such actions, it returns the string like it was written, with the variable name:",
                    "Single quoted string literals returns the string as it is:",
                    "The PHPstrlen()function returns the length of a string.",
                    "Return the length of the string \"Hello world!\":",
                    "The PHPstr_word_count()function counts the \nnumber of words in a string.",
                    "Count the number of word in the string \"Hello world!\":",
                    "The PHPstrpos()function searches for a specific text within a string.",
                    "If a match is found, the function returns the character position of the first match. If no match is found, it will return FALSE.",
                    "Search for the text \"world\" in the string \"Hello world!\":",
                    "Tip:The first character position in a string is 0 (not 1).",
                    "For a complete reference of all string functions, go to our completePHP String Reference.",
                    "The PHP string reference contains description and example of use, for each function!"
                ],
                "lists": [],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/php/php_string_modify.asp",
        "cours": {
            "titre": "PHP -Modify Strings",
            "description": "",
            "lien": "https://www.w3schools.com/php/php_string_modify.asp",
            "contenus": {
                "paragraphs": [
                    "PHP has a set of built-in functions that you can use to modify strings.",
                    "Thestrtoupper()function returns the string in upper case:",
                    "Thestrtolower()function returns the string in lower case:",
                    "The PHPstr_replace()function replaces some characters with some other \ncharacters in a string.",
                    "Replace the text \"World\" with \"Dolly\":",
                    "The PHPstrrev()function reverses a string.",
                    "Reverse the string \"Hello World!\":",
                    "Whitespace is the space before and/or after the actual text, and very often you want to remove this space.",
                    "Thetrim()removes any whitespace from the beginning or the end:",
                    "Learn more in ourtrim() Function Reference.",
                    "The PHPexplode()function splits a string into an array.",
                    "The first parameter of theexplode()function represents the \"separator\". \nThe \"separator\" specifies where to split the string.",
                    "Note:The separator is required.",
                    "Split the string into an array. Use the space character as separator:",
                    "For a complete reference of all string functions, go to our completePHP String Reference."
                ],
                "lists": [],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/php/php_string_concatenate.asp",
        "cours": {
            "titre": "PHP -Concatenate Strings",
            "description": "",
            "lien": "https://www.w3schools.com/php/php_string_concatenate.asp",
            "contenus": {
                "paragraphs": [
                    "To concatenate, or combine, two strings you can use the.operator:",
                    "The result of the example above isHelloWorld, without a \nspace between the \ntwo words.",
                    "You can add a space character like this:",
                    "An easier and better way is by using the power of double quotes.",
                    "By surrounding the two variables in double quotes with a white space between them, \nthe white space will also be present in the result:",
                    "For a complete reference of all string functions, go to our completePHP String Reference."
                ],
                "lists": [],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/php/php_string_slicing.asp",
        "cours": {
            "titre": "PHP -Slicing Strings",
            "description": "",
            "lien": "https://www.w3schools.com/php/php_string_slicing.asp",
            "contenus": {
                "paragraphs": [
                    "You can return a range of characters by using thesubstr()function.",
                    "Specify the start index and the number of characters you want to return.",
                    "Start the slice at index 6 and end the slice 5 positions later:",
                    "NoteThe first character has index 0.",
                    "By leaving out thelengthparameter, the range will go to the end:",
                    "Start the slice at index 6 and go all the way to the end:",
                    "Use negative indexes to start the slice from the end of the string:",
                    "Get the 3 characters, starting from the \"o\" in world (index -5):",
                    "NoteThe last character has index -1.",
                    "Use negativelengthto specify how many characters to omit, starting from the end of the string:",
                    "From the string \"Hi, how are you?\", get the characters starting from index 5, and continue \nuntil you reach the 3. character from the end (index -3).",
                    "Should end up with \"ow are y\":",
                    "For a complete reference of all string functions, go to our completePHP String Reference."
                ],
                "lists": [],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/php/php_string_escape.asp",
        "cours": {
            "titre": "PHP -Escape Characters",
            "description": "",
            "lien": "https://www.w3schools.com/php/php_string_escape.asp",
            "contenus": {
                "paragraphs": [
                    "To insert characters that are illegal in a string, use an escape character.",
                    "An escape character is a backslash\\followed by the character you want to insert.",
                    "An example of an illegal character is a double quote inside a string that is surrounded by double quotes:",
                    "To fix this problem, use the escape character\\\":",
                    "Other escape characters used in PHP:"
                ],
                "lists": [],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/php/php_numbers.asp",
        "cours": {
            "titre": "PHPNumbers",
            "description": "",
            "lien": "https://www.w3schools.com/php/php_numbers.asp",
            "contenus": {
                "paragraphs": [
                    "In this chapter we will look in depth into Integers, Floats, and \nNumber Strings.",
                    "There are three main numeric types in PHP:",
                    "In addition, PHP has two more data types used for numbers:",
                    "Variables of numeric types are created when you assign a value to them:",
                    "To verify the type of any object in PHP, use thevar_dump()function:",
                    "2, 256, -256, 10358, -179567 are all integers.",
                    "An integer is a number without any decimal part.",
                    "An integer data type is a non-decimal number between -2147483648 and \n2147483647 in 32 bit systems, and between -9223372036854775808 and \n9223372036854775807 in 64 bit systems. A value greater (or lower) than this, will be stored as float, \nbecause it exceeds the limit of an integer.",
                    "Note:Another important thing to know is that even if 4 * 2.5 is 10, the result is \nstored as float, because one of the operands is a float (2.5).",
                    "Here are some rules for integers:",
                    "PHP has the following predefined constants for integers:",
                    "PHP has the following functions to check if the type of a variable is \ninteger:",
                    "Check if the type of a variable is integer:",
                    "A float is a number with a decimal point or a number in exponential form.",
                    "2.0, 256.4, 10.358, 7.64E+5, 5.56E-5 are all floats.",
                    "The float data type can commonly store a value up to 1.7976931348623E+308 \n(platform dependent), and have a maximum precision of 14 digits.",
                    "PHP has the following predefined constants for floats (from PHP 7.2):",
                    "PHP has the following functions to check if the type of a variable is \nfloat:",
                    "Check if the type of a variable is float:",
                    "A numeric value that is larger thanPHP_FLOAT_MAXis considered infinite.",
                    "PHP has the following functions to check if a numeric value is finite or \ninfinite:",
                    "However, the PHPvar_dump()function returns the data type and value:",
                    "Check if a numeric value is finite or infinite:",
                    "NaNstands for Not a Number.",
                    "NaNis used for impossible mathematical operations.",
                    "PHP has the following functions to check if a value is not a number:",
                    "However, the PHPvar_dump()function returns the data type and value:",
                    "Invalid calculation will return aNaNvalue:",
                    "The PHPis_numeric()function can be used to find whether a variable is \nnumeric. The function returns true if the variable is a number or a numeric \nstring, false otherwise.",
                    "Check if the variable is numeric:",
                    "Note:From PHP 7.0: Theis_numeric()function will return \nFALSE for numeric strings in hexadecimal form (e.g. 0xf4c3b00c), as they are no \nlonger considered as numeric strings.",
                    "Sometimes you need to cast a numerical value into another data type.",
                    "The(int),(integer), andintval()functions are often used to convert a value \nto an integer.",
                    "Cast float and string to integer:",
                    "Learn more about casting in thePHP Casting chapter."
                ],
                "lists": [
                    [
                        "Integer",
                        "Float",
                        "Number Strings"
                    ],
                    [
                        "Infinity",
                        "NaN"
                    ],
                    [
                        "An integer must have at least one digit",
                        "An integer must NOT have a decimal point",
                        "An integer can be either positive or negative",
                        "Integers can be specified in three formats: decimal (base 10), hexadecimal (base \n  16 - prefixed with 0x), octal (base 8 - prefixed with 0) or binary (base 2 - \n  prefixed with 0b)"
                    ],
                    [
                        "PHP_INT_MAX- The largest integer supported",
                        "PHP_INT_MIN- The smallest integer supported",
                        "PHP_INT_SIZE-  The size of an integer in bytes"
                    ],
                    [
                        "is_int()",
                        "is_integer()- alias ofis_int()",
                        "is_long()- alias ofis_int()"
                    ],
                    [
                        "PHP_FLOAT_MAX- The largest representable floating point number",
                        "PHP_FLOAT_MIN- The smallest representable positive floating point number",
                        "PHP_FLOAT_DIG- The number of decimal digits that can be rounded into a \n  float and back without precision loss",
                        "PHP_FLOAT_EPSILON- The smallest representable positive number x, so that \n  x + 1.0 != 1.0"
                    ],
                    [
                        "is_float()",
                        "is_double()- alias ofis_float()"
                    ],
                    [
                        "is_finite()",
                        "is_infinite()"
                    ],
                    [
                        "is_nan()"
                    ]
                ],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/php/php_casting.asp",
        "cours": {
            "titre": "PHPCasting",
            "description": "",
            "lien": "https://www.w3schools.com/php/php_casting.asp",
            "contenus": {
                "paragraphs": [
                    "Sometimes you need to change a variable from one data type into another,\nand sometimes you want a variable to have a specific data type. This can be done with casting.",
                    "Casting in PHP is done with these statements:",
                    "To cast to string, use the(string)statement:",
                    "To cast to integer, use the(int)statement:",
                    "To cast to float, use the(float)statement:",
                    "To cast to boolean, use the(bool)statement:",
                    "If a value is 0, NULL, false, or empty, the (bool) converts it into false, otherwise true.",
                    "Even -1 converts to true.",
                    "To cast to array, use the(array)statement:",
                    "When converting into arrays, most data types converts into an indexed array with one element.",
                    "NULL values converts to an empty array object.",
                    "Objects converts into associative arrays where the property names becomes the keys and the property values becomes the values:",
                    "Converting Objects into Arrays:",
                    "To cast to object, use the(object)statement:",
                    "When converting into objects, most data types converts into a object with one property, named \"scalar\", with the corresponding value.",
                    "NULL values converts to an empty object.",
                    "Indexed arrays converts into objects with the index number as property name and the value as property value.",
                    "Associative arrays converts into objects with the keys as property names and values as property values.",
                    "Converting Arrays into Objects:",
                    "To cast to NULL, use the(unset)statement:"
                ],
                "lists": [
                    [
                        "(string)- Converts to data type String",
                        "(int)- Converts to data type Integer",
                        "(float)- Converts to data type Float",
                        "(bool)- Converts to data type Boolean",
                        "(array)- Converts to data type Array",
                        "(object)- Converts to data type Object",
                        "(unset)- Converts to data type NULL"
                    ]
                ],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/php/php_math.asp",
        "cours": {
            "titre": "PHP Math",
            "description": "",
            "lien": "https://www.w3schools.com/php/php_math.asp",
            "contenus": {
                "paragraphs": [
                    "PHP has a set of math functions that allows you to perform mathematical tasks on numbers.",
                    "Thepi()function returns the value of PI:",
                    "Themin()andmax()functions can be used to find the lowest or highest value in a list of arguments:",
                    "Theabs()function returns the absolute (positive) value of a number:",
                    "Thesqrt()function returns the square root of a number:",
                    "Theround()function rounds a floating-point number \nto its nearest integer:",
                    "Therand()function generates a random number:",
                    "To get more control over the random number, you can add the optionalminandmaxparameters to specify the lowest integer and the highest integer to be returned.",
                    "For example, if you want a random integer between 10 and 100 (inclusive), userand(10, 100):",
                    "For a complete reference of all math functions, go to our completePHP Math Reference.",
                    "The PHP math reference contains description and example of use, for each function."
                ],
                "lists": [],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/php/php_constants.asp",
        "cours": {
            "titre": "PHPConstants",
            "description": "",
            "lien": "https://www.w3schools.com/php/php_constants.asp",
            "contenus": {
                "paragraphs": [
                    "Constants are like variables, except that once they are defined \nthey cannot be changed or undefined.",
                    "A constant is an identifier (name) for a simple value. The value cannot be \nchanged during the script.",
                    "A valid constant name starts with a letter or underscore (no $ sign before \nthe constant name).",
                    "Note:Unlike variables, constants are automatically global across \nthe entire script.",
                    "To create a constant, use thedefine()function.",
                    "Parameters:",
                    "Create a constant with acase-sensitivename:",
                    "You can also create a constant by using theconstkeyword.",
                    "Create acase-sensitiveconstant with theconstkeyword:",
                    "constvs.define()",
                    "From PHP7, you can create an Array constant using thedefine()function.",
                    "Create an Array constant:",
                    "Constants are automatically global and can be used across \nthe entire script.",
                    "This example uses a constant inside a function, even if it is defined outside the function:"
                ],
                "lists": [
                    [
                        "name: Specifies the name of the constant",
                        "value: Specifies the value of the constant"
                    ],
                    [
                        "constcannot be created inside another block scope, \nlike inside a function or inside anifstatement.",
                        "definecan be created inside another block scope."
                    ]
                ],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/php/php_magic_constants.asp",
        "cours": {
            "titre": "PHPMagic Constants",
            "description": "",
            "lien": "https://www.w3schools.com/php/php_magic_constants.asp",
            "contenus": {
                "paragraphs": [
                    "PHP has nine predefined constants that change value depending on where they are used, and therefor they are called\n\"magic constants\".",
                    "These magic constants are written with a double underscore at the start and the end,\nexcept for the ClassName::class constant.",
                    "Here are the magic constants, with descriptions and examples:",
                    "Note:",
                    "The magic constants are case-insensitive, meaning__LINE__returns the same as__line__."
                ],
                "lists": [],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/php/php_operators.asp",
        "cours": {
            "titre": "PHPOperators",
            "description": "",
            "lien": "https://www.w3schools.com/php/php_operators.asp",
            "contenus": {
                "paragraphs": [
                    "Operators are used to perform operations on variables and values.",
                    "PHP divides the operators in the following groups:",
                    "The PHP arithmetic operators are used with numeric values to perform common arithmetical operations, \nsuch as addition, subtraction, multiplication etc.",
                    "The PHP assignment operators are used with numeric values to write a value to a variable.",
                    "The basic assignment operator in PHP is \"=\". It means that the left operand \ngets set to the value of the assignment expression on the right.",
                    "The PHP comparison operators are used to compare two values (number or string):",
                    "The PHP increment operators are used to increment a variable's value.",
                    "The PHP decrement operators are used to decrement a variable's value.",
                    "The PHP logical operators are used to combine conditional statements.",
                    "PHP has two operators that are specially designed for strings.",
                    "The PHP array operators are used to compare arrays.",
                    "The PHP conditional assignment operators are used to set a value depending on conditions:"
                ],
                "lists": [
                    [
                        "Arithmetic operators",
                        "Assignment operators",
                        "Comparison operators",
                        "Increment/Decrement operators",
                        "Logical operators",
                        "String operators",
                        "Array operators",
                        "Conditional assignment operators"
                    ]
                ],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/php/php_if_else.asp",
        "cours": {
            "titre": "PHPifStatements",
            "description": "",
            "lien": "https://www.w3schools.com/php/php_if_else.asp",
            "contenus": {
                "paragraphs": [
                    "Conditional statements are used to perform different actions based on different conditions.",
                    "Very often when you write code, you want to perform different actions for \ndifferent conditions. You can use conditional statements in your code to do this.",
                    "In PHP we have the following conditional statements:",
                    "Theifstatement executes some code if one condition is true.",
                    "Output \"Have a good day!\" if 5 is larger than 3:",
                    "We can also use variables in theifstatement:",
                    "Output \"Have a good day!\" if$tis less than 20:"
                ],
                "lists": [
                    [
                        "ifstatement - executes some code if one condition is true",
                        "if...elsestatement - executes some code if a condition is true and another code if that condition is false",
                        "if...elseif...elsestatement  - executes different codes for more than two conditions",
                        "switchstatement - selects one of many blocks of code to be executed"
                    ]
                ],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/php/php_if_operators.asp",
        "cours": {
            "titre": "PHPif Operators",
            "description": "",
            "lien": "https://www.w3schools.com/php/php_if_operators.asp",
            "contenus": {
                "paragraphs": [
                    "Ifstatements usually contain conditions that compare two values.",
                    "Check if$tis equal to 14:",
                    "To compare two values, we need to use a comparison operator.",
                    "Here are the PHP comparison operators to use inifstatements:",
                    "To check more than one condition, we can use logical operators, like the&&operator:",
                    "Check if$ais greater than$b, \nAND if$ais less than$c:",
                    "Here are the PHP logical operators to use inifstatements:",
                    "We can compare as many conditions as we like in oneifstatement:",
                    "Check if$ais either 2, 3, 4, 5, 6, or 7:"
                ],
                "lists": [],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/php/php_if_else_if.asp",
        "cours": {
            "titre": "PHPif...elseStatements",
            "description": "",
            "lien": "https://www.w3schools.com/php/php_if_else_if.asp",
            "contenus": {
                "paragraphs": [
                    "Theif...elsestatement executes some code if a condition is true and \nanother code if that condition is false.",
                    "Output \"Have a good day!\" if the current time is less than 20, and \"Have a \ngood night!\" otherwise:",
                    "Theif...elseif...elsestatement executes different codes for more than two \nconditions.",
                    "Output \"Have a good morning!\" if the current time is less than 10, and \n\"Have a good day!\" if the current time is less than 20. Otherwise it will \noutput \"Have a good night!\":"
                ],
                "lists": [],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/php/php_if_shorthand.asp",
        "cours": {
            "titre": "PHPShorthand ifStatements",
            "description": "",
            "lien": "https://www.w3schools.com/php/php_if_shorthand.asp",
            "contenus": {
                "paragraphs": [
                    "To write shorter code, you can writeifstatements on one line.",
                    "One-lineifstatement:",
                    "if...elsestatements can also be written in one line, but the syntax is a bit different.",
                    "One-lineif...elsestatement:",
                    "This technique is known asTernary Operators, orConditional \n  Expressions."
                ],
                "lists": [],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/php/php_if_nested.asp",
        "cours": {
            "titre": "PHPNested ifStatement",
            "description": "",
            "lien": "https://www.w3schools.com/php/php_if_nested.asp",
            "contenus": {
                "paragraphs": [
                    "You can haveifstatements insideifstatements, this is callednestedifstatements.",
                    "Anifinside anif:"
                ],
                "lists": [],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/php/php_switch.asp",
        "cours": {
            "titre": "PHPswitchStatement",
            "description": "",
            "lien": "https://www.w3schools.com/php/php_switch.asp",
            "contenus": {
                "paragraphs": [
                    "Theswitchstatement is used to perform different actions based on different conditions.",
                    "Use theswitchstatement toselect one of many blocks \nof code to be executed.",
                    "This is how it works:",
                    "When PHP reaches abreakkeyword, it breaks out of the switch block.",
                    "This will stop the execution of more code, and no more cases are tested.",
                    "The last block does not need a break, the block breaks (ends) there anyway.",
                    "Warning:If you omit thebreakstatement in a case that \nis not the last,\nand that case gets a match,\nthe next case will also be executed even if the evaluation does not match the case!",
                    "What happens if we remove thebreakstatement \nfrom case \"red\"?",
                    "$favcoloris red, so the code block from case \"red\" is executed,\nbut since it has nobreakstatement, the code block from case \"blue\"\nwill also be executed:",
                    "Thedefaultkeyword specifies the code to run if there is no \ncase match:",
                    "If no cases get a match, thedefaultblock \n  is executed:",
                    "Thedefaultcase does not have to be the last case in a switch \nblock:",
                    "Putting  thedefaultblock elsewhere than \nat the end of theswitchblock is allowed, but not recommended.",
                    "Note:Ifdefaultis not the last \nblock in theswitchblock,\nremember to end thedefaultblock with abreakstatement.",
                    "If you want multiple cases to use the same code block, you can specify the cases like this:",
                    "More than one case for each code block:"
                ],
                "lists": [
                    [
                        "Theexpressionis evaluated once",
                        "The value of the expression is compared with the values of each case",
                        "If there is a match, the associated block of code is executed",
                        "Thebreakkeyword breaks out of the switch block",
                        "Thedefaultcode block is executed if there is no match"
                    ]
                ],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/php/php_looping.asp",
        "cours": {
            "titre": "PHPLoops",
            "description": "",
            "lien": "https://www.w3schools.com/php/php_looping.asp",
            "contenus": {
                "paragraphs": [
                    "In the following chapters you will learn how to repeat code by \nusing loops in PHP.",
                    "Often when you write code, you want the same block of code to run over and \nover again a certain number of times. So, instead of adding several almost equal code-lines in a script, we \ncan use loops.",
                    "Loops are used to execute the same block of code again and again, as long as \na certain condition is true.",
                    "In PHP, we have the following loop types:",
                    "The following chapters will explain and give examples of each loop type."
                ],
                "lists": [
                    [
                        "while- loops through a block of code as long as the specified condition is true",
                        "do...while- loops through a block of code once, and then repeats the loop \n  as long as the specified condition is true",
                        "for- loops through a block of code a specified number of times",
                        "foreach- loops through a block of code for each element in an \n  array"
                    ]
                ],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/php/php_looping_while.asp",
        "cours": {
            "titre": "PHPwhileLoop",
            "description": "",
            "lien": "https://www.w3schools.com/php/php_looping_while.asp",
            "contenus": {
                "paragraphs": [
                    "Thewhileloop - Loops through \na block of code as long as the specified condition is true.",
                    "Thewhileloop executes a block of code as long as the specified condition is true.",
                    "Print$ias long as$iis less than 6:",
                    "Note:remember to increment$i, or else the loop will continue forever.",
                    "Thewhileloop does not run a specific number of times, but \nchecks after each iteration if the condition is still true.",
                    "The condition does not have to be a counter, it could be the status of an operation\nor any condition that evaluates to either true or false.",
                    "With thebreakstatement we can stop the loop even if the condition is still true:",
                    "Stop the loop when$iis 3:",
                    "With thecontinuestatement we can stop the current iteration, and continue with the next:",
                    "Stop, and jump to the next iteration if$iis 3:",
                    "Thewhileloop syntax can also be written with theendwhilestatement like this",
                    "Print$ias long as$iis less than 6:",
                    "If you want thewhileloop\ncount to 100, but only by each 10, you can increase the counter by 10 instead 1 in each iteration:",
                    "Count to 100 by tens:"
                ],
                "lists": [],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/php/php_looping_do_while.asp",
        "cours": {
            "titre": "PHPdo whileLoop",
            "description": "",
            "lien": "https://www.w3schools.com/php/php_looping_do_while.asp",
            "contenus": {
                "paragraphs": [
                    "Thedo...whileloop - Loops \nthrough a block of code once, and then repeats the loop as long as the specified \ncondition is true.",
                    "Thedo...whileloop will always execute the block of code at least once, it \nwill then check the condition, and repeat the loop while the specified condition is true.",
                    "Print$ias long as$iis less than 6:",
                    "Note:In ado...whileloop the condition is tested AFTER executing \nthe statements within the loop. This means that thedo...whileloop will execute \nits statements at least once, even if the condition is false. See example below.",
                    "Let us see what happens if we set the$ivariable to 8 instead of 1,\nbefore execute the samedo...whileloop again:",
                    "Set$i = 8, then print$ias long as$iis less than 6:",
                    "The code will be executed once, even if the condition is never true.",
                    "With thebreakstatement we can stop the loop even if the condition is still true:",
                    "Stop the loop when$iis 3:",
                    "With thecontinuestatement we can stop the current iteration, and continue with the next:",
                    "Stop, and jump to the next iteration if$iis 3:"
                ],
                "lists": [],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/php/php_looping_for.asp",
        "cours": {
            "titre": "PHPforLoop",
            "description": "",
            "lien": "https://www.w3schools.com/php/php_looping_for.asp",
            "contenus": {
                "paragraphs": [
                    "Theforloop - Loops through a block of code a specified number of times.",
                    "Theforloop is used when you know\nhow many times the script should run.",
                    "This is how it works:",
                    "Print the numbers from 0 to 10:",
                    "With thebreakstatement we can stop the loop even if the condition is still true:",
                    "Stop the loop when$xis 3:",
                    "With thecontinuestatement we can stop the current iteration, and continue with the next:",
                    "Stop, and jump to the next iteration if$xis 3:",
                    "This example counts to 100 by tens:"
                ],
                "lists": [
                    [
                        "expression1is evaluated once",
                        "expression2is evaluated before each iteration",
                        "expression3is evaluated after each iteration"
                    ],
                    [
                        "The first expression,$x = 0;, is evaluated once and\nsets a counter to 0.",
                        "The second expression,$x <= 10;, is evaluatedbeforeeach iteration,\nand the code block is only executed if this expression evaluates to true. In this example the expression\nis true as long as$xis less than, or equal to, 10.",
                        "The third expression,$x++;, is evaluatedaftereach iteration,\nand in this example, the expression increases the value of$xby\none at each iteration."
                    ]
                ],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/php/php_looping_foreach.asp",
        "cours": {
            "titre": "PHPforeachLoop",
            "description": "",
            "lien": "https://www.w3schools.com/php/php_looping_foreach.asp",
            "contenus": {
                "paragraphs": [
                    "Theforeachloop - Loops \nthrough a block of code for each element in an array or each property in an object.",
                    "The most common use of theforeachloop, is \nto loop through the items of an array.",
                    "Loop through the items of an indexed array:",
                    "For every loop iteration, the value of the current array element is assigned to\nthe variabe$x.\nThe iteration continues until it reaches the last array element.",
                    "The array above is anindexedarray, where the first item has the key 0, the second has the key 1, and so on.",
                    "Associativearrays are different,\nassociative arrays use named keys that you assign to them, and when looping through associative arrays, \nyou might want to keep the key as well as the value.",
                    "This can be done by specifying both the key and value in theforeachdefintition, like this:",
                    "Print both the key and the value from the$membersarray:",
                    "You will learn more about arrays in thePHP Arrayschapter.",
                    "Theforeachloop can also be used to loop through properties of an object:",
                    "Print the property names and values of the$myCarobject:",
                    "You will learn more about objects in thePHP Objects and Classeschapter.",
                    "With thebreakstatement we can stop the loop even if it has not reached the end:",
                    "Stop the loop if$xis \"blue\":",
                    "With thecontinuestatement we can stop the current iteration, and continue with the next:",
                    "Stop, and jump to the next iteration if$xis \"blue\":",
                    "When looping through the array items,\nany changes done to the array item will, by default, NOT affect the original array:",
                    "By default, changing an array item will not affect the original array:",
                    "BUT, by using the&character in theforeachdeclaration, the array item is assignedby reference,\nwhich results in any changes done to the array item will also be done to the original array:",
                    "By assigning the array itemsby reference, changes will affect the original array:",
                    "Theforeachloop syntax can also be written with theendforeachstatement like this",
                    "Loop through the items of an indexed array:"
                ],
                "lists": [],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/php/php_looping_break.asp",
        "cours": {
            "titre": "PHPBreak",
            "description": "",
            "lien": "https://www.w3schools.com/php/php_looping_break.asp",
            "contenus": {
                "paragraphs": [
                    "Thebreakstatement can be used to jump out of different kind of loops.",
                    "Thebreakstatement can be used to jump out of aforloop.",
                    "Jump out of the loop when$xis4:",
                    "Thebreakstatement can be used to jump out of awhileloop.",
                    "Thebreakstatement can be used to jump out of ado...whileloop.",
                    "Stop the loop when$iis 3:",
                    "Thebreakstatement can be used to jump out of aforeachloop.",
                    "Stop the loop if$xis \"blue\":"
                ],
                "lists": [],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/php/php_looping_continue.asp",
        "cours": {
            "titre": "PHPContinue",
            "description": "",
            "lien": "https://www.w3schools.com/php/php_looping_continue.asp",
            "contenus": {
                "paragraphs": [
                    "Thecontinuestatement can be used to jump out of\nthe current iteration of a loop, and continue with the next.",
                    "Thecontinuestatement stops the current iteration in theforloop and continue with the next.",
                    "Move to next iteration if$x= 4:",
                    "Thecontinuestatement stops the current iteration in thewhileloop and continue with the next.",
                    "Move to next iteration if$x= 4:",
                    "Thecontinuestatement stops the current iteration in thedo...whileloop and continue with the next.",
                    "Stop, and jump to the next iteration if$iis 3:",
                    "Thecontinuestatement stops the current iteration in theforeachloop and continue with the next.",
                    "Stop, and jump to the next iteration if$xis \"blue\":"
                ],
                "lists": [],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/php/php_functions.asp",
        "cours": {
            "titre": "PHPFunctions",
            "description": "",
            "lien": "https://www.w3schools.com/php/php_functions.asp",
            "contenus": {
                "paragraphs": [
                    "The real power of PHP comes from its functions.",
                    "PHP has more \nthan 1000 built-in functions, and in addition you can create your own custom \nfunctions.",
                    "PHP has over 1000 built-in functions that can be called directly, from within \na script, to perform \na specific task.",
                    "Please check out our PHP reference for a complete overview of thePHP built-in functions.",
                    "Besides the built-in PHP functions, it is possible to create your own functions.",
                    "A user-defined function declaration starts with the keywordfunction,\nfollowed by the name of the function:",
                    "Note:A function name must start with a letter or an underscore. Function names are NOT case-sensitive.",
                    "Tip:Give the function a name that reflects what the \nfunction does!",
                    "To call the function, just write its name followed by parentheses():",
                    "In our example, we create a function namedmyMessage().",
                    "The opening \ncurly brace{indicates the beginning of the function code, and the closing \ncurly brace}indicates the end of the function.",
                    "The function outputs \"Hello \nworld!\".",
                    "Information can be passed to functions through arguments. An argument is just \nlike a variable.",
                    "Arguments are specified after the function name, inside the parentheses. You \ncan add as many arguments as you want, just separate them with a comma.",
                    "The following example has a function with one argument($fname). When thefamilyName()function is called,\nwe also pass along a name, e.g.(\"Jani\"), and the \nname is used inside the function, which outputs several different first names, \nbut an equal last name:",
                    "The following example has a function with two arguments($fname, $year):",
                    "The following example shows how to use a default parameter. If we call the \nfunctionsetHeight()without arguments it takes the default value as argument:",
                    "To let a function return a value, use thereturnstatement:",
                    "In PHP, arguments are usually passed by value, which means that a copy of the value is\nused in the function and the variable that was passed into the function cannot be changed.",
                    "When a function argument is passed by reference, changes to the argument also change\nthe variable that was passed in. To turn a function argument into a reference, the&operator is used:",
                    "Use a pass-by-reference argument to update a variable:",
                    "By using the...operator in front of the function parameter, the function \naccepts an unknown number of arguments. This is also called a variadic function.",
                    "The variadic function argument becomes an array.",
                    "A function that do not know how many arguments it will get:",
                    "You can only have one argument with variable length, and it has to be the last argument.",
                    "The variadic argument must be the last argument:",
                    "If the variadic argument is not the last argument, you will get an error.",
                    "Having the...operator on the first of two arguments, will raise an error:",
                    "In the examples above, notice that we did not have to tell PHP which data type the variable is.",
                    "PHP automatically associates a data type to the variable, depending on its value. \nSince the data types are not set in a strict sense, you can do things like \nadding a string to an integer without causing an error.",
                    "In PHP 7, type declarations were added. This gives us an option to specify \nthe expected data type when declaring a function, and by adding thestrictdeclaration, it will throw a \"Fatal \nError\" if the data type mismatches.",
                    "In the following example we try to send both a number and a string to the \nfunction without usingstrict:",
                    "To specifystrictwe need to setdeclare(strict_types=1);. \nThis must be on the very first line of the PHP file.",
                    "In the following example we try to send both a number and a string to the \nfunction, but here we have added thestrictdeclaration:",
                    "Thestrictdeclaration forces things to be used in the intended way.",
                    "PHP 7 also supports Type Declarations for thereturnstatement. Like with the type declaration for function arguments, by enabling the strict requirement, it will throw a \"Fatal \nError\" on a type mismatch.",
                    "To declare a type for the function return, add a colon (:) and the type right before the opening curly \n({)bracket when declaring the function.",
                    "In the following example we specify the return type for the function:",
                    "You can specify a different return type, than the argument types, but make \nsure the return is the correct type:"
                ],
                "lists": [
                    [
                        "A function is a block of statements that can be used repeatedly in a program.",
                        "A function will not execute automatically when a page loads.",
                        "A function will be executed by a call to the function."
                    ]
                ],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/php/php_arrays.asp",
        "cours": {
            "titre": "PHPArrays",
            "description": "",
            "lien": "https://www.w3schools.com/php/php_arrays.asp",
            "contenus": {
                "paragraphs": [
                    "An array stores multiple values in one single variable:",
                    "An array is a special variable that can hold many values under a single name,\nand you can access the values by referring to an index number or name.",
                    "In PHP, there are three types of arrays:",
                    "In this tutorial you will learn how to work with arrays, including:",
                    "Array items can be of any data type.",
                    "The most common are strings and numbers (int, float), but array items can also be objects, functions or\neven arrays.",
                    "You can have different data types in the same array.",
                    "Array items of four different data types:",
                    "The real strength of PHP arrays are the built-in array functions, like thecount()function for counting array items:",
                    "How many items are in the$carsarray:",
                    "For a complete reference of all array functions, go to our completePHP Array Reference."
                ],
                "lists": [
                    [
                        "Indexed arrays- Arrays with a numeric index",
                        "Associative arrays- Arrays with named keys",
                        "Multidimensional arrays- Arrays containing one or more arrays"
                    ],
                    [
                        "Create Arrays",
                        "Access Arrays",
                        "Update Arrays",
                        "Add Array Items",
                        "Remove Array Items",
                        "Sort Arrays"
                    ]
                ],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/php/php_arrays_indexed.asp",
        "cours": {
            "titre": "PHPIndexed Arrays",
            "description": "",
            "lien": "https://www.w3schools.com/php/php_arrays_indexed.asp",
            "contenus": {
                "paragraphs": [
                    "In indexed arrays each item has an index number.",
                    "By default, the first item has index 0, the second item has item 1, etc.",
                    "Create and display an indexed array:",
                    "To access an array item you can refer to the index number.",
                    "Display the first array item:",
                    "To change the value of an array item, use the index number:",
                    "Change the value of the second item:",
                    "To loop through and print all the values of an indexed array, you could use aforeachloop, like this:",
                    "Display all array items:",
                    "For a complete reference of all array functions, go to our completePHP Array Reference.",
                    "The key of an indexed array is a number, by default the first item is 0 and the second is 1 etc., but there are exceptions.",
                    "New items get the next index number, meaning one higher than thehighest existing index.",
                    "So if you have an array like this:",
                    "And if you use thearray_push()function to add a new item, \nthe new item will get the index 3:",
                    "But if you have an array with random index numbers, like this:",
                    "And if you use thearray_push()function to add a new item, \nwhat will be the index number of the new item?"
                ],
                "lists": [],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/php/php_arrays_associative.asp",
        "cours": {
            "titre": "PHPAssociative Arrays",
            "description": "",
            "lien": "https://www.w3schools.com/php/php_arrays_associative.asp",
            "contenus": {
                "paragraphs": [
                    "Associative arrays are arrays that use named keys that you assign to them.",
                    "To access an array item you can refer to the key name.",
                    "Display the model of the car:",
                    "To change the value of an array item, use the key name:",
                    "Change theyearitem:",
                    "To loop through and print all the values of an associative array, you could use aforeachloop, like this:",
                    "Display all array items, keys and values:",
                    "For a complete reference of all array functions, go to our completePHP Array Reference."
                ],
                "lists": [],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/php/php_arrays_create.asp",
        "cours": {
            "titre": "PHPCreate Arrays",
            "description": "",
            "lien": "https://www.w3schools.com/php/php_arrays_create.asp",
            "contenus": {
                "paragraphs": [
                    "You can create arrays by using thearray()function:",
                    "You can also use a shorter syntax by using the[]brackets:",
                    "Line breaks are not important, so an array declaration can span multiple lines:",
                    "A comma after the last item is allowed:",
                    "When creating indexed arrays the keys are given automatically, starting at 0 and increased by 1 for each item,\nso the array above could also be created with keys:",
                    "As you can see, indexed arrays are the same as associative arrays, but associative arrays have names instead of numbers:",
                    "You can declare an empty array first, and add items to it later:",
                    "The same goes for associative arrays, you can declare the array first, and then add items to it:",
                    "You can have arrays with both indexed and named keys:"
                ],
                "lists": [],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/php/php_arrays_access.asp",
        "cours": {
            "titre": "PHPAccess Arrays",
            "description": "",
            "lien": "https://www.w3schools.com/php/php_arrays_access.asp",
            "contenus": {
                "paragraphs": [
                    "To access an array item, you can refer to the index number for indexed arrays,\nand the key name for associative arrays.",
                    "Access an item by referring to its index number:",
                    "Note:The first item has index 0.",
                    "To access items from anassociative array, use the key name:",
                    "Access an item by referring to its key name:",
                    "You can use both double and single quotes when accessing an array:",
                    "Array items can be of any data type, including function.",
                    "To execute such a function, use the index number followed by parentheses():",
                    "Execute a function item:",
                    "Use the key name when the function is an item in a associative array:",
                    "Execute function by referring to the key name:",
                    "To loop through and print all the values of an associative array, you can use aforeachloop, like this:",
                    "Display all array items, keys and values:",
                    "To loop through and print all the values of an indexed array, you can use aforeachloop, like this:",
                    "Display all array items:"
                ],
                "lists": [],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/php/php_arrays_update.asp",
        "cours": {
            "titre": "PHPUpdate Array Items",
            "description": "",
            "lien": "https://www.w3schools.com/php/php_arrays_update.asp",
            "contenus": {
                "paragraphs": [
                    "To update an existing array item, you can refer to the index number for indexed arrays,\nand the key name for associative arrays.",
                    "Change the second array item from \"BMW\" to \"Ford\":",
                    "Note:The first item has index 0.",
                    "To update items from anassociative array, use the key name:",
                    "Update the year to 2024:",
                    "There are different techniques to use when changing item values in aforeachloop.",
                    "One way is to insert the&character in the assignment to assign the \nitem value by reference, and thereby making sure that \nany changes done with the array item inside the loop will be done to the \noriginal array:",
                    "Change ALL item values to \"Ford\":",
                    "Note:Remember to add theunset()function after the loop.",
                    "Without theunset($x)function,\nthe$xvariable will remain as a reference to the last array item.",
                    "To demonstrate this, see what happens when we change the value of$xafter theforeachloop:",
                    "Demonstrate the consequence of forgetting theunset()function:"
                ],
                "lists": [],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/php/php_arrays_add.asp",
        "cours": {
            "titre": "PHPAdd Array Items",
            "description": "",
            "lien": "https://www.w3schools.com/php/php_arrays_add.asp",
            "contenus": {
                "paragraphs": [
                    "To add items to an existing array, you can use the bracket[]syntax.",
                    "Add one more item to thefruitsarray:",
                    "To add items to an associative array, or key/value array, use brackets[]for the key, and assign value with the=operator.",
                    "Add one item to thecararray:",
                    "To add multiple items to an existing array, use thearray_push()function.",
                    "Add three item to thefruitsarray:",
                    "To add multiple items to an existing array, you can use the+=operator.",
                    "Add two items to thecarsarray:"
                ],
                "lists": [],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/php/php_arrays_remove.asp",
        "cours": {
            "titre": "PHPDelete Array Items",
            "description": "",
            "lien": "https://www.w3schools.com/php/php_arrays_remove.asp",
            "contenus": {
                "paragraphs": [
                    "To remove an existing item from an array, you can use thearray_splice()function.",
                    "With thearray_splice()function you specify the index (where to start)\nand how many items you want to delete.",
                    "Remove the second item:",
                    "After the deletion, the array gets reindexed automatically, starting at index 0.",
                    "You can also use theunset()function to delete existing array items.",
                    "Note:Theunset()function does not re-arrange the indexes,\nmeaning that after deletion the array will no longer contain the missing indexes.",
                    "Remove the second item:",
                    "To remove multiple items, thearray_splice()function takes a length parameter\nthat allows you to specify the number of items to delete.",
                    "Remove 2 items, starting a the second item (index 1):",
                    "Theunset()function takes a unlimited number of arguments, and \ncan therefore be used to delete multiple array items:",
                    "Remove the first and the second item:",
                    "To remove items from an associative array, you can use theunset()function.",
                    "Specify the key of the item you want to delete.",
                    "Remove the \"model\":",
                    "You can also use thearray_diff()function to remove items from an\nassociative array.",
                    "This function returns a new array, without the specified items.",
                    "Create a new array, without \"Mustang\" and \"1964\":",
                    "Note:Thearray_diff()function takesvaluesas parameters, and notkeys.",
                    "Thearray_pop()function removes the last item of an array.",
                    "Remove the last item:",
                    "Thearray_shift()function removes the first item of an array.",
                    "Remove the first item:"
                ],
                "lists": [],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/php/php_arrays_sort.asp",
        "cours": {
            "titre": "PHPSorting Arrays",
            "description": "",
            "lien": "https://www.w3schools.com/php/php_arrays_sort.asp",
            "contenus": {
                "paragraphs": [
                    "The elements in an array can be sorted in alphabetical or numerical order, descending or ascending.",
                    "In this chapter, we will go through the following PHP array sort functions:",
                    "The following example sorts the elements of the$carsarray in ascending alphabetical order:",
                    "The following example sorts the elements of the$numbersarray in ascending \nnumerical order:",
                    "The following example sorts the elements of the$carsarray in descending alphabetical order:",
                    "The following example sorts the elements of the$numbersarray in descending \nnumerical order:",
                    "The following example sorts an associative array in ascending order, \naccording to the value:",
                    "The following example sorts an associative array in ascending order, \naccording to the key:",
                    "The following example sorts an associative array in descending order, \naccording to the value:",
                    "The following example sorts an associative array in descending order, \naccording to the key:",
                    "For a complete reference of all array functions, go to our completePHP Array Reference.",
                    "The reference contains a brief description, and examples of use, for each function!"
                ],
                "lists": [
                    [
                        "sort()- sort arrays in ascending order",
                        "rsort()- sort arrays in descending order",
                        "asort()- sort associative arrays in ascending order, according to the value",
                        "ksort()- sort associative arrays in ascending order, according to the key",
                        "arsort()- sort associative arrays in descending order, according to the value",
                        "krsort()- sort associative arrays in descending order, according to the key"
                    ]
                ],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/php/php_arrays_multidimensional.asp",
        "cours": {
            "titre": "PHPMultidimensional Arrays",
            "description": "",
            "lien": "https://www.w3schools.com/php/php_arrays_multidimensional.asp",
            "contenus": {
                "paragraphs": [
                    "In the previous pages, we have described arrays that are a \nsingle list of key/value pairs.",
                    "However, sometimes you want to store values with more than one \nkey. For this, we have multidimensional arrays.",
                    "A multidimensional array is an array containing one or more arrays.",
                    "PHP supports multidimensional arrays that are two, three, four, five, or \nmore levels deep. However, arrays more than three levels deep are hard to manage for most people.",
                    "The dimension of an array indicates the number of indices you need to select an element.",
                    "A two-dimensional array is an array of arrays (a three-dimensional array is an array of arrays of arrays).",
                    "First, take a look at the following table:",
                    "We can store the data from the table above in a two-dimensional array, like this:",
                    "Now the two-dimensional $cars array contains four arrays, and it has two indices: row and column.",
                    "To get access to the elements of the $cars array we must point to the two \nindices (row and column):",
                    "We can also put aforloop inside anotherforloop to get the elements of the \n$cars array (we still have to point to the two indices):",
                    "For a complete reference of all array functions, go to our completePHP Array Reference.",
                    "The reference contains a brief description, and examples of use, for each function!"
                ],
                "lists": [
                    [
                        "For a two-dimensional array you need two indices to select an element",
                        "For a three-dimensional array you need three indices to select an element"
                    ]
                ],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/php/php_arrays_functions.asp",
        "cours": {
            "titre": "PHPArrayFunctions",
            "description": "",
            "lien": "https://www.w3schools.com/php/php_arrays_functions.asp",
            "contenus": {
                "paragraphs": [
                    "PHP has a set of built-in functions that you can use on arrays."
                ],
                "lists": [],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/php/php_superglobals.asp",
        "cours": {
            "titre": "PHPGlobal Variables- Superglobals",
            "description": "",
            "lien": "https://www.w3schools.com/php/php_superglobals.asp",
            "contenus": {
                "paragraphs": [
                    "Superglobals were introduced in PHP 4.1.0, and are built-in \nvariables that are always available in all scopes.",
                    "Some predefined variables in PHP are \"superglobals\", which means that they \nare always accessible, regardless of scope - and you can access them from any \nfunction, class or file without having to do anything special.",
                    "The PHP superglobal variables are:",
                    "The next chapters will explain some of the superglobals, and the rest will be \nexplained in later chapters."
                ],
                "lists": [
                    [
                        "$GLOBALS",
                        "$_SERVER",
                        "$_REQUEST",
                        "$_POST",
                        "$_GET",
                        "$_FILES",
                        "$_ENV",
                        "$_COOKIE",
                        "$_SESSION"
                    ]
                ],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/php/php_superglobals_globals.asp",
        "cours": {
            "titre": "PHP $GLOBALS",
            "description": "",
            "lien": "https://www.w3schools.com/php/php_superglobals_globals.asp",
            "contenus": {
                "paragraphs": [
                    "$GLOBALSis an array that contains all global \nvariables.",
                    "Global variables are variables that can be accessed from any scope.",
                    "Variables of the outer most scope are automatically global variables, and can be used \nby any scope, e.g. inside a function.",
                    "To use a global variable inside a function you have to either define them as global with\ntheglobalkeyword, or refer to them by using the$GLOBALSsyntax.",
                    "Refer to the global variable$xinside a function:",
                    "This is different from other programming languages where global variables are available without specifically \nreferring to them as global.",
                    "In PHP you get nothing (or an error) when referring to a global variable without the$GLOBALSsyntax:",
                    "You can also refer to global variables inside functions by defining them as global with theglobalkeyword.",
                    "Define$xas global inside a function:",
                    "Variables created in the outer most scope are global variables either if they are created using the$GLOBALSsyntax or not:",
                    "Variables created inside a function belongs only to that function, but you can create global variables inside a function\nby using the$GLOBALSsyntax:",
                    "Create a global variable from inside a function, and use it outside of the function:"
                ],
                "lists": [],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/php/php_superglobals_server.asp",
        "cours": {
            "titre": "PHP - $_SERVER",
            "description": "",
            "lien": "https://www.w3schools.com/php/php_superglobals_server.asp",
            "contenus": {
                "paragraphs": [
                    "$_SERVERis a PHP super global variable which holds information about headers, \npaths, and script locations.",
                    "The example below shows how to use some of the elements in$_SERVER:",
                    "The following table lists the most important elements that can go inside$_SERVER:"
                ],
                "lists": [],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/php/php_superglobals_request.asp",
        "cours": {
            "titre": "PHP - $_REQUEST",
            "description": "",
            "lien": "https://www.w3schools.com/php/php_superglobals_request.asp",
            "contenus": {
                "paragraphs": [
                    "$_REQUESTis a PHP super global variable which \ncontains submitted form data, and all cookie data.",
                    "In other words,$_REQUESTis an array \ncontaining data from$_GET,$_POST, and$_COOKIE.",
                    "You can access this data with the$_REQUESTkeyword followed by the name of the form field, or cookie, like this:",
                    "POST request are usually data submitted from an HTML form.",
                    "Here is an example of how a HTML form could look like:",
                    "HTML form",
                    "When a user clicks the submit button, the form data is sent to a PHP file specified in theactionattribute of the<form>tag.",
                    "In the action file we can use the$_REQUESTvariable\nto collect the value of the input field.",
                    "PHP file",
                    "In the example below we have put the HTML form and PHP code in the same PHP file.",
                    "We have also added some extra lines for security.",
                    "GET request can be form submissions as in the example above, with themethodattribute of the HTML<form>element set toGET.",
                    "GET requests can also be data from a query string (information added after a URL address).",
                    "Here is an example of how an HTML hyperlink, with a query string could look like:",
                    "HTML link",
                    "When a user clicks the link, the query string data is sent todemo_phpfile.php.",
                    "In the PHP file we can use the$_REQUESTvariable\nto collect the value of the query string.",
                    "The PHP filedemo_phpfile.php:"
                ],
                "lists": [],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/php/php_superglobals_post.asp",
        "cours": {
            "titre": "PHP - $_POST",
            "description": "",
            "lien": "https://www.w3schools.com/php/php_superglobals_post.asp",
            "contenus": {
                "paragraphs": [
                    "$_POST contains an array of variables received via the HTTP POST method.",
                    "There are two main ways to send variables via the HTTP Post method:",
                    "A HTML form submits information via the HTTP POST method if\nthe form'smethodattribute is set to\"POST\".",
                    "To demonstrate this, we start by creating a simple HTML form:",
                    "HTML Form",
                    "When a user clicks the submit button, the form data is sent to a PHP file specified in theactionattribute of the<form>tag.",
                    "In the action file we can use the$_POSTvariable\nto collect the value of the input field.",
                    "PHP file",
                    "In the example below we have put the HTML form and PHP code in the same PHP file.",
                    "We have also added some extra lines for security.",
                    "When sending a HTTP request in JavaScript, you can specify that the HTTP method is POST.",
                    "To demonstrate this we start by creating a JavaScript function containing a HTTP request:",
                    "JavaScript function",
                    "The code above will:",
                    "Look at the function that will be executed when the request is done:",
                    "It will try to write a response from the operation in a HTML element withid=\"demo\".",
                    "Let us make a HTML page with such element, and also a button that executes the function.",
                    "If we also add the the JavaScript, the page looks like this:",
                    "How to post and receive data from a HTTP request:",
                    "In the PHP file that receive this HTTP request (demo_ajax.php), we simply use the$_POSTvariable\nto retrieve thefnamevariable, and writes it as a response.",
                    "PHP file"
                ],
                "lists": [
                    [
                        "HTML forms",
                        "JavaScript HTTP requests"
                    ],
                    [
                        "Intiate a HTTP request",
                        "Set the HTTP method to POST",
                        "Set a valid request header",
                        "Create a function to execute when the request is done",
                        "Send the HTTP request with a variablefnameset toMary"
                    ]
                ],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/php/php_superglobals_get.asp",
        "cours": {
            "titre": "PHP Superglobal - $_GET",
            "description": "",
            "lien": "https://www.w3schools.com/php/php_superglobals_get.asp",
            "contenus": {
                "paragraphs": [
                    "$_GET contains an array of variables received via the HTTP GET method.",
                    "There are two main ways to send variables via the HTTP GET method:",
                    "A query string is data added at the end of a URL. In the link below, everything after the?sign is part of the query string:",
                    "The query string above contains two key/value pairs:",
                    "In the PHP file we can use the$_GETvariable\nto collect the value of the query string.",
                    "The PHP filedemo_phpfile.php:",
                    "A HTML form submits information via the HTTP GET method if\nthe form'smethodattribute is set to\"GET\".",
                    "To demonstrate this, we start by creating a simple HTML form:",
                    "HTML Form",
                    "When a user clicks the submit button, the form data is sent to a PHP file specified in theactionattribute of the<form>tag.",
                    "The form fields are sent to the PHP file, with your input, as query strings:",
                    "In the action file we can use the$_GETvariable\nto collect the value of the input fields.",
                    "PHP code inside thewelcome_get.phppage:",
                    "Think SECURITY when processing PHP forms!",
                    "The example above does not contain any form validation, it just shows how you can \nsend and retrieve form data.",
                    "Learn more about processing PHP forms with security in mind in theForm Validationchapter.",
                    "Proper validation of form data is important to protect your form from hackers and spammers!"
                ],
                "lists": [
                    [
                        "Query strings in the URL",
                        "HTML Forms"
                    ]
                ],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/php/php_regex.asp",
        "cours": {
            "titre": "PHPRegular Expressions",
            "description": "",
            "lien": "https://www.w3schools.com/php/php_regex.asp",
            "contenus": {
                "paragraphs": [
                    "A regular expression is a sequence of characters that forms a search pattern.\nWhen you search for data in a text, you can use this search pattern to describe what you\nare searching for.",
                    "A regular expression can be a single character, or a more complicated pattern.",
                    "Regular expressions can be used to perform all types of text search and text replace\noperations.",
                    "In PHP, regular expressions are strings composed of delimiters, a pattern and optional\nmodifiers.",
                    "In the example above,/is thedelimiter,w3schoolsis thepatternthat is being searched for,\nandiis amodifierthat makes the search case-insensitive.",
                    "The delimiter can be any character that is not a letter, number, backslash or space. The\nmost common delimiter is the forward slash (/), but when your pattern contains forward\nslashes it is convenient to choose other delimiters such as # or ~.",
                    "PHP provides a variety of functions that allow you to use regular expressions.",
                    "The most common functions are:",
                    "Thepreg_match()function will tell you whether a string contains matches of a pattern.",
                    "Use a regular expression to do a case-insensitive search for \"w3schools\" in a string:",
                    "Thepreg_match_all()function will tell you how many matches were found for a pattern in a\nstring.",
                    "Use a regular expression to do a case-insensitive count of the number of\noccurrences of \"ain\" in a string:",
                    "Thepreg_replace()function will replace all of the matches of the pattern in a string with\nanother string.",
                    "Use a case-insensitive regular expression to replace Microsoft with\nW3Schools in a string:",
                    "Modifiers can change how a search is performed.",
                    "Brackets are used to find a range of characters:",
                    "Metacharacters are characters with a special meaning:",
                    "Quantifiers define quantities:",
                    "Note:If your expression needs to search for one of the special characters you can use a\nbackslash ( \\ ) to escape them.\nFor example, to search for one or more question marks you can use the following\nexpression: $pattern = '/\\?+/';",
                    "You can use parentheses( )to apply quantifiers to entire patterns. They also can be used\nto select parts of the pattern to be used as a match.",
                    "Use grouping to search for the word \"banana\" by looking forbafollowed by\ntwo instances ofna:",
                    "For a complete reference, go to ourComplete PHP Regular Expression Reference.",
                    "The reference contains descriptions and examples of all Regular Expression functions."
                ],
                "lists": [],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/php/php_forms.asp",
        "cours": {
            "titre": "PHPForm Handling",
            "description": "",
            "lien": "https://www.w3schools.com/php/php_forms.asp",
            "contenus": {
                "paragraphs": [
                    "The PHP superglobals$_GETand$_POSTare used to collect form-data.",
                    "The example below displays a simple HTML form with two input fields and a submit button:",
                    "When the user fills out the form above and clicks the submit button, the form data is sent \nfor processing to a PHP file named \"welcome.php\". The form data is sent with \nthe HTTP POST method.",
                    "To display the submitted data you could simply echo all the variables.",
                    "The \"welcome.php\" looks like this:",
                    "The output could be something like this:",
                    "The same result could also be achieved using the HTTP GET method:",
                    "Same example, but the method is set to GET instead of POST:",
                    "and \"welcome_get.php\" looks like this:",
                    "The code above is quite simple, and it does not include any validation.",
                    "You need to validate form data to protect your script from malicious code.",
                    "Think SECURITY when processing PHP forms!",
                    "This page does not contain any form validation, it just shows how you can \nsend and retrieve form data.",
                    "However, the next pages will show how to process PHP forms with security in mind! Proper validation of form data is important \nto protect your form from hackers and spammers!",
                    "Both GET and POST create an array (e.g. array( key1 => value1, \nkey2 => value2, key3 => value3, ...)). This array holds key/value pairs, where \nkeys are the names of the form controls and values are the input data from the user.",
                    "Both GET and POST are treated as $_GET and $_POST. These are superglobals, \nwhich means that they are always accessible, regardless of scope - and you can access them from any function,\nclass or file without having to do anything special.",
                    "$_GET is an array of variables passed to the current script via the URL parameters.",
                    "$_POST is an array of variables passed to the current script via the HTTP POST method.",
                    "Information sent from a form with the GET method isvisible to everyone(all \nvariable names and values are displayed in the URL). GET also has limits on the amount of \ninformation to send. The limitation is about 2000 characters. However, \nbecause the variables are displayed in the URL, it is possible to bookmark the \npage. This can be useful in some cases.",
                    "GET may be used for sending non-sensitive data.",
                    "Note:GET should NEVER be used for sending passwords or other sensitive information!",
                    "Information sent from a form with the POST method isinvisible to others(all names/values are embedded within the body of the HTTP request) and \nhasno limitson the amount of information to send.",
                    "Moreover POST supports advanced functionality such as support for multi-part \nbinary input while uploading files to server.",
                    "However, because the variables are not displayed in the URL, it is not possible to bookmark the page.",
                    "Developers prefer POST for sending form data.",
                    "Next, lets see how we can process PHP forms the secure way!"
                ],
                "lists": [],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/php/php_form_validation.asp",
        "cours": {
            "titre": "PHPForm Validation",
            "description": "",
            "lien": "https://www.w3schools.com/php/php_form_validation.asp",
            "contenus": {
                "paragraphs": [
                    "This and the next chapters show how to use PHP to validate form data.",
                    "Think SECURITY when processing PHP forms!These pages will show how to process PHP forms with security in mind. Proper validation of form data is important \nto protect your form from hackers and spammers!",
                    "Think SECURITY when processing PHP forms!",
                    "These pages will show how to process PHP forms with security in mind. Proper validation of form data is important \nto protect your form from hackers and spammers!",
                    "The HTML form we will be working at in these chapters, contains various input fields: \nrequired and optional text fields, radio buttons, and a submit button:",
                    "The validation rules for the form above are as follows:",
                    "First we will look at the plain HTML code for the form:",
                    "The name, email, and website fields are text input elements, and the comment \nfield is a textarea.",
                    "The HTML code looks like this:",
                    "The gender fields are radio buttons and the HTML code looks like this:",
                    "The HTML code of the form looks like this:",
                    "When the form is submitted, the form data is sent with method=\"post\".",
                    "What is the$_SERVER[\"PHP_SELF\"]variable?The$_SERVER[\"PHP_SELF\"]is a super global variable that returns the filename of the \ncurrently executing script.",
                    "So, the$_SERVER[\"PHP_SELF\"]sends the submitted form data to the page itself, instead of jumping to a different page. \nThis way, the user will get error messages on the same page as the form.",
                    "What is thehtmlspecialchars()function?Thehtmlspecialchars()function converts special characters into HTML entities. \nThis means that it will replace HTML characters like<and>with&lt;and&gt;. \nThis prevents attackers from exploiting the code by injecting HTML or Javascript code\n(Cross-site Scripting attacks) in forms.",
                    "The$_SERVER[\"PHP_SELF\"]variable can be used by hackers!",
                    "If PHP_SELF is used in your page then a user can enter a slash/and then\nsome Cross Site Scripting (XSS) commands to execute.",
                    "Cross-site scripting (XSS) is a type of computer security vulnerability \ntypically found in Web applications. XSS enables attackers to inject client-side \nscript into Web pages viewed by other users.",
                    "Assume we have the following form in a page named \"test_form.php\":",
                    "Now, if a user enters the normal URL in the address bar like \n\"http://www.example.com/test_form.php\", the above code will be translated to:",
                    "So far, so good.",
                    "However, consider that a user enters the following URL in the address bar:",
                    "In this case, the above code will be translated to:",
                    "This code adds a script tag and an alert command. And when the page loads, the \nJavaScript code will be executed (the user will see an alert box). This is just a simple \nand harmless example how the PHP_SELF variable can be exploited.",
                    "Be aware of thatany JavaScript code can be added inside the  \n<script> tag!A hacker can redirect the user to a file on another server, \nand that file can hold malicious code \nthat can alter the global variables or submit the form to another \naddress to save the user data, for example.",
                    "$_SERVER[\"PHP_SELF\"]exploits can be avoided by using thehtmlspecialchars()function.",
                    "The form code should look like this:",
                    "Thehtmlspecialchars()function converts special characters to HTML entities.\nNow if the user tries to exploit the PHP_SELF variable, it will result in the following output:",
                    "The exploit attempt fails, and no harm is done!",
                    "The first thing we will do is to pass all variables through PHP'shtmlspecialchars()function.",
                    "When we use thehtmlspecialchars()function;\nthen if a user tries to submit the following in a text field:",
                    "- this would not be executed, because it would be saved as HTML escaped code, like this:",
                    "The code is now safe to be displayed on a page or inside an e-mail.",
                    "We will also do two more things when the user submits the form:",
                    "The next step is to create a function that will do all the checking for us \n(which is much more convenient than writing the same code over and over again).",
                    "We will name the functiontest_input().",
                    "Now, we can \ncheck each$_POSTvariable with thetest_input()function, and the script looks like this:",
                    "Notice that at the start of the script, we check whether the form has been \nsubmitted using$_SERVER[\"REQUEST_METHOD\"].\nIf theREQUEST_METHODisPOST, then \nthe form has been submitted - and it \nshould be validated. If it has not been submitted, skip the validation and \ndisplay a blank form.",
                    "However, in the example above, all input fields are optional. The script \nworks fine even if the user does not enter any data.",
                    "The next step is to make input fields required and create error messages if \nneeded."
                ],
                "lists": [
                    [
                        "Strip unnecessary characters (extra space, tab, newline) from the user input data (with the PHPtrim()function)",
                        "Remove backslashes\\from the user input data (with the PHPstripslashes()function)"
                    ]
                ],
                "examples": [
                    "http://www.example.com/test_form.php/%22%3E%3Cscript%3Ealert('hacked')%3C/script%3E",
                    "<script>location.href('http://www.hacked.com')</script>"
                ]
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/php/php_form_required.asp",
        "cours": {
            "titre": "PHPForms - Required Fields",
            "description": "",
            "lien": "https://www.w3schools.com/php/php_form_required.asp",
            "contenus": {
                "paragraphs": [
                    "This chapter shows how to make input fields required and create error messages if needed.",
                    "From the validation rules table on the previous page, we see that the \"Name\", \"E-mail\", and \n\"Gender\" fields are required. These fields cannot be empty and must be filled out in the \nHTML form.",
                    "In the previous chapter, all input fields were optional.",
                    "In the following code we have added some new variables:$nameErr,$emailErr,$genderErr, and$websiteErr. These error variables will hold error messages for the \nrequired fields. We have also added anif elsestatement for each$_POSTvariable. This \nchecks if the$_POSTvariable is empty (with the PHPempty()function). If it is empty, an error message is stored in the different error variables, \nand if it is not empty, it sends the user input data through thetest_input()function:",
                    "Then in the HTML form, we add a little script after each required field, \nwhich generates the correct error message if needed (that is if the user tries to submit \nthe form without filling out the required fields):",
                    "The next step is to validate the input data, that is \"Does the Name field \ncontain only letters and whitespace?\", and \"Does the E-mail field contain a \nvalid e-mail address syntax?\", and if filled out, \"Does the Website field contain \na valid URL?\"."
                ],
                "lists": [],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/php/php_form_url_email.asp",
        "cours": {
            "titre": "PHPForms - Validate E-mail and URL",
            "description": "",
            "lien": "https://www.w3schools.com/php/php_form_url_email.asp",
            "contenus": {
                "paragraphs": [
                    "This chapter shows how to validate names, e-mails, and URLs.",
                    "The code below shows a simple way to check if the name field only contains \nletters, dashes, apostrophes and whitespaces. If the value of the name field is not valid, then store \nan error message:",
                    "Thepreg_match()function searches a string for pattern, returning true if \nthe pattern exists, and false otherwise.",
                    "Thepreg_match()function searches a string for pattern, returning true if \nthe pattern exists, and false otherwise.",
                    "The easiest and safest way to check whether an email address is well-formed \nis to use PHP'sfilter_var()function.",
                    "In the code below, if the e-mail address is not well-formed, then store an error message:",
                    "The code below shows a way to check if a URL address syntax is \nvalid (this regular expression also allows dashes in the URL). If the URL address syntax is not valid, then store an error message:",
                    "Now, the script looks like this:",
                    "The next step is to show how to prevent the form from emptying all the input \nfields when the user submits the form."
                ],
                "lists": [],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/php/php_form_complete.asp",
        "cours": {
            "titre": "PHPComplete Form Example",
            "description": "",
            "lien": "https://www.w3schools.com/php/php_form_complete.asp",
            "contenus": {
                "paragraphs": [
                    "This chapter shows how to keep the values in the input fields \nwhen the user hits the submit button.",
                    "To show the values in the input fields after the user hits the submit button, \nwe add a little PHP script inside the value attribute of the following input \nfields: name, email, and website. In the comment textarea field, we put the \nscript between the<textarea>and</textarea>tags. The little script outputs the \nvalue of the$name,$email,$website, and$commentvariables.",
                    "Then, we also need to show which radio button that was checked. For this, we \nmust manipulate the checked attribute (not the value attribute for radio \nbuttons):",
                    "Here is the complete code for the PHP Form Validation Example:"
                ],
                "lists": [],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/php/php_date.asp",
        "cours": {
            "titre": "PHPDate and Time",
            "description": "",
            "lien": "https://www.w3schools.com/php/php_date.asp",
            "contenus": {
                "paragraphs": [
                    "The PHPdate()function is used to format a date and/or a time.",
                    "The PHPdate()function formats a timestamp to a more readable date and time.",
                    "A timestamp is a sequence of \ncharacters, denoting the date and/or time at which a certain event occurred.",
                    "A timestamp is a sequence of \ncharacters, denoting the date and/or time at which a certain event occurred.",
                    "The requiredformatparameter of the date() function specifies how to format the date \n(or time).",
                    "Here are some characters that are commonly used for dates:",
                    "Other characters, like\"/\", \".\", or \"-\" can also be inserted between the \ncharacters to add additional formatting.",
                    "The example below formats today's date in three different ways:",
                    "Use thedate()function to automatically update the copyright year on your \nwebsite:",
                    "Here are some characters that are commonly used for times:",
                    "The example below outputs the current time in the specified format:",
                    "Note that the PHP date() function will return the current date/time of the \nserver!",
                    "Note that the PHP date() function will return the current date/time of the \nserver!",
                    "If the time you got back from the code is not correct, it's probably because your server is in another country or set up \nfor a different timezone.",
                    "So, if you need the time to be correct according to a specific \nlocation, you can set the timezone you want to use.",
                    "The example below sets the timezone to \"America/New_York\", then outputs the current time in the specified format:",
                    "The optionaltimestampparameter in the date() function specifies a timestamp. If \nomitted, the current date and time will be used (as in the \nexamples above).",
                    "The PHPmktime()function returns the Unix timestamp for a date. The Unix timestamp contains the number of seconds between the Unix Epoch \n(January 1 1970 00:00:00 GMT) and the time specified.",
                    "The example below creates a date and time with thedate()function from a number of parameters in themktime()function:",
                    "The PHPstrtotime()function is used to convert a human readable \ndate string into a \nUnix timestamp (the number of seconds since January 1 1970 00:00:00 GMT).",
                    "The example below creates a date and time from thestrtotime()function:",
                    "PHP is quite clever about converting a string to a date, so you can put in \nvarious values:",
                    "However,strtotime()is not perfect, so remember to check the strings you put in there.",
                    "The example below outputs the dates for the next six Saturdays:",
                    "The example below outputs the number of days until 4th of July:",
                    "For a complete reference of all date functions, go to our completePHP Date Reference.",
                    "The reference contains a brief description, and examples of use, for each function!"
                ],
                "lists": [
                    [
                        "d - Represents the day of the month (01 to 31)",
                        "m - Represents a month (01 to 12)",
                        "Y - Represents a year (in four digits)",
                        "l (lowercase 'L') - Represents the day of the week"
                    ],
                    [
                        "H - 24-hour format of an hour (00 to 23)",
                        "h - 12-hour format of an hour with leading zeros (01 to 12)",
                        "i - Minutes with leading zeros (00 to 59)",
                        "s - Seconds with leading zeros (00 to 59)",
                        "a - Lowercase Ante meridiem and Post meridiem (am or pm)"
                    ]
                ],
                "examples": [
                    "date(format,timestamp)",
                    "<?phpecho \"Today is \" . date(\"Y/m/d\") . \"<br>\";echo \"Today is \" . date(\"Y.m.d\") . \"<br>\";echo \"Today is \" . date(\"Y-m-d\") . \"<br>\";echo \"Today is \" . date(\"l\");?>",
                    "&copy; 2010-<?php echo date(\"Y\");?>",
                    "<?phpecho \"The time is \" . date(\"h:i:sa\");?>",
                    "<?phpdate_default_timezone_set(\"America/New_York\");echo \"The time is \" . date(\"h:i:sa\");?>",
                    "mktime(hour, minute, second, month, day, year)",
                    "<?php$d=mktime(11, 14, 54, 8, 12, 2014);echo \"Created date is \" . date(\"Y-m-d h:i:sa\", $d);?>",
                    "strtotime(time, now)",
                    "<?php$d=strtotime(\"10:30pm April 15 2014\");echo \"Created date is \" . date(\"Y-m-d h:i:sa\", $d);?>",
                    "<?php$d=strtotime(\"tomorrow\");echo date(\"Y-m-d h:i:sa\", $d) . \"<br>\";$d=strtotime(\"next Saturday\");echo date(\"Y-m-d h:i:sa\", $d) . \"<br>\";$d=strtotime(\"+3 Months\");echo date(\"Y-m-d h:i:sa\", $d) . \"<br>\";?>",
                    "<?php$startdate = strtotime(\"Saturday\");$enddate = strtotime(\"+6 weeks\", $startdate);while ($startdate < $enddate) {echo date(\"M d\", $startdate) . \"<br>\";$startdate = strtotime(\"+1 week\", $startdate);}?>",
                    "<?php$d1=strtotime(\"July 04\");$d2=ceil(($d1-time())/60/60/24);echo \"There are \" . $d2 .\" days until 4th of July.\";?>"
                ]
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/php/php_includes.asp",
        "cours": {
            "titre": "PHPInclude Files",
            "description": "",
            "lien": "https://www.w3schools.com/php/php_includes.asp",
            "contenus": {
                "paragraphs": [
                    "Theinclude(orrequire) statement takes all the text/code/markup that exists in the specified file and copies it into\nthe file that uses the include statement.",
                    "Including files is very useful when you want to include the same PHP,\nHTML, or text on multiple pages of a website.",
                    "It is possible to insert the content of one PHP file into another PHP file (before the \nserver executes it), with the include or require statement.",
                    "The include and require statements are identical, except upon failure:",
                    "So, if you want the execution to go on and show users the output, even if the \ninclude file is missing, use the include statement. Otherwise, in case of FrameWork, CMS, or a \ncomplex PHP application coding, always use the require statement to include a key file to the \nflow of execution. This will help avoid compromising your application's security \nand integrity, just in-case one key file is accidentally missing.",
                    "Including files saves a lot of work. This means that \nyou can create a standard header, footer, or menu file for all your web pages. \nThen, when the header needs to be updated, you can only \nupdate the header include file.",
                    "Assume we have a standard footer file called \"footer.php\", that looks like this:",
                    "To include the footer file in a page, use theincludestatement:",
                    "Assume we have a standard menu file called \"menu.php\":",
                    "All pages in the Web site should use this menu file. Here is how it can be done \n(we are using a <div> element so that the menu easily can be styled with CSS later):",
                    "Assume we have a file called \"vars.php\", with some variables defined:",
                    "Then, if we include the \"vars.php\" file, the variables can be used in the calling file:",
                    "Therequirestatement is also used to include a file into the PHP code.",
                    "However, there is one big difference between include and require; when a \nfile is included with theincludestatement and PHP cannot find it, the script \nwill continue to execute:",
                    "If we do the same example using therequirestatement, the \necho statement will not be executed because the script execution dies after therequirestatement returned a fatal error:",
                    "Userequirewhen the file is required by the application.",
                    "Useincludewhen the file is not required and application should continue when file is not found."
                ],
                "lists": [
                    [
                        "requirewill produce a fatal error (E_COMPILE_ERROR) and stop the script",
                        "includewill only produce a warning (E_WARNING) and the script will continue"
                    ]
                ],
                "examples": [
                    "include 'filename';orrequire 'filename';",
                    "<?phpecho \"<p>Copyright &copy; 1999-\" . date(\"Y\") . \" W3Schools.com</p>\";?>",
                    "<html><body><h1>Welcome to my home page!</h1><p>Some text.</p><p>Some more text.</p><?php include 'footer.php';?></body></html>",
                    "<?phpecho '<a href=\"/default.asp\">Home</a> -<a href=\"/html/default.asp\">HTML Tutorial</a> -<a href=\"/css/default.asp\">CSS Tutorial</a> -<a href=\"/js/default.asp\">JavaScript Tutorial</a> -<a href=\"default.asp\">PHP Tutorial</a>';?>",
                    "<html><body><div class=\"menu\"><?php include 'menu.php';?></div><h1>Welcome to my home page!</h1><p>Some text.</p><p>Some more text.</p></body></html>",
                    "<?php$color='red';$car='BMW';?>",
                    "<html><body><h1>Welcome to my home page!</h1><?php include 'vars.php';echo \"I have a $color $car.\";?></body></html>",
                    "<html><body><h1>Welcome to my home page!</h1><?php include 'noFileExists.php';echo \"I have a $color $car.\";?></body></html>",
                    "<html><body><h1>Welcome to my home page!</h1><?php require 'noFileExists.php';echo \"I have a $color $car.\";?></body></html>"
                ]
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/php/php_file.asp",
        "cours": {
            "titre": "PHPFile Handling",
            "description": "",
            "lien": "https://www.w3schools.com/php/php_file.asp",
            "contenus": {
                "paragraphs": [
                    "File handling is an important part of any web application. You \noften need to open and process a file for different tasks.",
                    "PHP has several functions for creating, reading, uploading, and editing files.",
                    "Be careful when manipulating files!When you are manipulating files you must be very careful.You can do a \nlot of damage if you do something wrong. Common errors are: editing the wrong \nfile, filling a hard-drive with garbage data, and deleting the content of a file \nby accident.",
                    "Be careful when manipulating files!",
                    "You can do a \nlot of damage if you do something wrong. Common errors are: editing the wrong \nfile, filling a hard-drive with garbage data, and deleting the content of a file \nby accident.",
                    "Thereadfile()function reads a file and writes it to the output buffer.",
                    "Assume we have a text file called \"webdictionary.txt\", stored on the \nserver, that looks like this:",
                    "The PHP code to read the file and write it to the output buffer is as follows \n(thereadfile()function returns the number of bytes read on success):",
                    "Thereadfile()function is useful if all you want to do is open up a file and read its contents.",
                    "The next chapters will teach you more about file handling."
                ],
                "lists": [],
                "examples": [
                    "AJAX = Asynchronous JavaScript and XMLCSS = Cascading Style SheetsHTML = Hyper Text Markup LanguagePHP = PHP Hypertext PreprocessorSQL = Structured Query LanguageSVG = Scalable Vector GraphicsXML = EXtensible Markup Language",
                    "<?phpecho readfile(\"webdictionary.txt\");?>"
                ]
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/php/php_file_open.asp",
        "cours": {
            "titre": "PHPFile Open/Read/Close",
            "description": "",
            "lien": "https://www.w3schools.com/php/php_file_open.asp",
            "contenus": {
                "paragraphs": [
                    "In this chapter we will teach you how to open, read, and close a file \non the server.",
                    "A better method to open files is with thefopen()function. This function gives you more \noptions than thereadfile()function.",
                    "We will use the text file, \"webdictionary.txt\", during the lessons:",
                    "The first parameter offopen()contains the name of the file to be opened and the \nsecond parameter specifies in which mode the file should be opened. The following example \nalso generates a message if the fopen() function is unable to open the specified file:",
                    "Tip:Thefread()and thefclose()functions will be \nexplained below.",
                    "The file may be opened in one of the following modes:",
                    "Thefread()function reads from an open file.",
                    "The first parameter offread()contains the name of the file to read from and \nthe second parameter specifies the maximum number of bytes to read.",
                    "The following PHP code reads the \"webdictionary.txt\" file to the end:",
                    "Thefclose()function is used to close an open file.",
                    "It's a good programming practice to close all files after you have finished with them. \nYou don't want an open file running around on your \nserver taking up resources!",
                    "Thefclose()requires the name of the file (or a variable that holds the \nfilename) we want to close:",
                    "Thefgets()function is used to read a single line from a file.",
                    "The example below outputs the first line of the \"webdictionary.txt\" file:",
                    "Note:After a call to thefgets()function, the file pointer has moved to the next line.",
                    "Thefeof()function checks if the \"end-of-file\" (EOF) has been reached.",
                    "Thefeof()function is useful for looping through data of unknown length.",
                    "The example below reads the \"webdictionary.txt\" file line by line, until end-of-file is reached:",
                    "Thefgetc()function is used to read a single character from a file.",
                    "The example below reads the \"webdictionary.txt\" file character by \ncharacter, until end-of-file is reached:",
                    "Note:After a call to thefgetc()function, the file pointer moves to the next character.",
                    "For a complete reference of filesystem functions, go to our completePHP Filesystem Reference."
                ],
                "lists": [],
                "examples": [
                    "AJAX = Asynchronous JavaScript and XMLCSS = Cascading Style SheetsHTML = Hyper Text Markup LanguagePHP = PHP Hypertext PreprocessorSQL = Structured Query LanguageSVG = Scalable Vector GraphicsXML = EXtensible Markup Language",
                    "<?php$myfile = fopen(\"webdictionary.txt\", \"r\") or die(\"Unable to open file!\");echo fread($myfile,filesize(\"webdictionary.txt\"));fclose($myfile);?>",
                    "fread($myfile,filesize(\"webdictionary.txt\"));",
                    "<?php$myfile = fopen(\"webdictionary.txt\", \"r\");// some code to be executed....fclose($myfile);?>",
                    "<?php$myfile = fopen(\"webdictionary.txt\", \"r\") or die(\"Unable to open file!\");echo fgets($myfile);fclose($myfile);?>",
                    "<?php$myfile = fopen(\"webdictionary.txt\", \"r\") or die(\"Unable to open file!\");// Output one line until end-of-filewhile(!feof($myfile)) {echo fgets($myfile) . \"<br>\";}fclose($myfile);?>",
                    "<?php$myfile = fopen(\"webdictionary.txt\", \"r\") or die(\"Unable to open file!\");// Output one character until end-of-filewhile(!feof($myfile)) {echo fgetc($myfile);}fclose($myfile);?>"
                ]
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/php/php_file_create.asp",
        "cours": {
            "titre": "PHPFile Create/Write",
            "description": "",
            "lien": "https://www.w3schools.com/php/php_file_create.asp",
            "contenus": {
                "paragraphs": [
                    "In this chapter we will teach you how to create and write to a file \non the server.",
                    "Thefopen()function is also used to create a file. Maybe a little confusing, but in PHP, a file is created using the same \nfunction used to open files.",
                    "If you usefopen()on a file that does not \nexist, it will create it, given that the file is opened for writing (w) or \nappending (a).",
                    "The example below creates a new file called \"testfile.txt\". The file will be \ncreated in the same directory where the PHP code resides:",
                    "If you are having errors when trying to get this code to run, check that you have granted your PHP file access to write \ninformation to the hard drive.",
                    "Thefwrite()function is used to write to a file.",
                    "The first parameter offwrite()contains the name of the file to write to and \nthe second parameter is the string to be written.",
                    "The example below writes a couple of names into a new file called \"newfile.txt\":",
                    "Notice that we wrote to the file \"newfile.txt\" twice. Each time we wrote to \nthe file we sent the string $txt that first contained \"John Doe\" and second \ncontained \"Jane Doe\". After we finished writing, we closed the file using thefclose()function.",
                    "If we open the \"newfile.txt\" file it would look like this:",
                    "Now that \"newfile.txt\" contains some data we can show what happens when we \nopen an existing file for writing. All the existing data will be ERASED and we \nstart with an empty file.",
                    "In the example below we open our existing file \"newfile.txt\", and write some \nnew data into it:",
                    "If we now open the \"newfile.txt\" file, both John and Jane have \nvanished, and only the data we just wrote is present:",
                    "You can append data to a file by using the \"a\" mode. The \"a\" mode appends \ntext to the end of the file, while the \"w\" mode overrides (and erases) the old \ncontent of the file.",
                    "In the example below we open our existing file \"newfile.txt\", and \nappend some text to it:",
                    "If we now open the \"newfile.txt\" file, we will see that Donald Duck \nand Goofy Goof is appended to the end of the file:",
                    "For a complete reference of filesystem functions, go to our completePHP Filesystem Reference."
                ],
                "lists": [],
                "examples": [
                    "$myfile = fopen(\"testfile.txt\", \"w\")",
                    "<?php$myfile = fopen(\"newfile.txt\", \"w\") or die(\"Unable to open file!\");$txt = \"John Doe\\n\";fwrite($myfile, $txt);$txt = \"Jane Doe\\n\";fwrite($myfile, $txt);fclose($myfile);?>",
                    "John DoeJane Doe",
                    "<?php$myfile = fopen(\"newfile.txt\", \"w\") or die(\"Unable to open file!\");$txt = \"Mickey Mouse\\n\";fwrite($myfile, $txt);$txt = \"Minnie Mouse\\n\";fwrite($myfile, $txt);fclose($myfile);?>",
                    "Mickey MouseMinnie Mouse",
                    "<?php$myfile = fopen(\"newfile.txt\", \"a\") or die(\"Unable to open file!\");$txt = \"Donald \n  Duck\\n\";fwrite($myfile, $txt);$txt = \"Goofy Goof\\n\";fwrite($myfile, $txt);fclose($myfile);?>",
                    "Mickey MouseMinnie MouseDonald DuckGoofy Goof"
                ]
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/php/php_file_upload.asp",
        "cours": {
            "titre": "PHPFile Upload",
            "description": "",
            "lien": "https://www.w3schools.com/php/php_file_upload.asp",
            "contenus": {
                "paragraphs": [
                    "With PHP, it is easy to upload files to the server.",
                    "However, with ease comes danger, so always be careful when \nallowing file uploads!",
                    "First, ensure that PHP is configured to allow file uploads.",
                    "In your \"php.ini\" file, search for thefile_uploadsdirective, and set it to On:",
                    "Next, create an HTML form that allow users to choose the image file they want to upload:",
                    "Some rules to follow for the HTML form above:",
                    "Without the requirements above, the file upload will not work.",
                    "Other things to notice:",
                    "The form above sends data to a file called \"upload.php\", which we will create next.",
                    "The \"upload.php\" file contains the code for uploading a file:",
                    "PHP script explained:",
                    "Note:You will need to create a new directory called \n\"uploads\" in the \ndirectory where \"upload.php\" file resides. The uploaded files \nwill be saved there.",
                    "Note:You will need to create a new directory called \n\"uploads\" in the \ndirectory where \"upload.php\" file resides. The uploaded files \nwill be saved there.",
                    "Now we can add some restrictions.",
                    "First, we will check if the file already exists in the \"uploads\" folder. If \nit does, an error message is displayed, and $uploadOk is set to 0:",
                    "The file input field in our HTML form above is named \"fileToUpload\".",
                    "Now, we want to check the size of the file. If the file is larger than 500KB, an error message is displayed, and $uploadOk is set to 0:",
                    "The code below only allows users to upload JPG, JPEG, PNG, and GIF files. All other \nfile types gives an error message before setting $uploadOk to 0:",
                    "The complete \"upload.php\" file now looks like this:",
                    "For a complete reference of filesystem functions, go to our completePHP Filesystem Reference."
                ],
                "lists": [
                    [
                        "Make sure that the form uses method=\"post\"",
                        "The form also needs the following attribute: enctype=\"multipart/form-data\". It specifies which content-type to use when submitting the form"
                    ],
                    [
                        "The type=\"file\" attribute of the <input> tag shows the input field as a file-select control, with a \"Browse\" button next to the input control"
                    ],
                    [
                        "$target_dir = \"uploads/\" - specifies the directory where the file is going to be placed",
                        "$target_file specifies the path of the file to be uploaded",
                        "$uploadOk=1 is not used yet (will be used later)",
                        "$imageFileType holds the file extension of the file (in lower case)",
                        "Next, check if the image file is an actual image or a fake image"
                    ]
                ],
                "examples": [
                    "file_uploads = On",
                    "<!DOCTYPE html><html><body><form action=\"upload.php\" method=\"post\"\nenctype=\"multipart/form-data\">Select image to upload:<input type=\"file\" name=\"fileToUpload\" id=\"fileToUpload\"><input type=\"submit\" value=\"Upload Image\" name=\"submit\"></form></body></html>",
                    "<?php$target_dir = \"uploads/\";$target_file = $target_dir . basename($_FILES[\"fileToUpload\"][\"name\"]);$uploadOk = 1;$imageFileType = \n  strtolower(pathinfo($target_file,PATHINFO_EXTENSION));// Check if image file is a actual image or fake imageif(isset($_POST[\"submit\"])) {$check = getimagesize($_FILES[\"fileToUpload\"][\"tmp_name\"]);if($check !== false) {echo \"File is an image - \" . $check[\"mime\"] . \".\";$uploadOk = 1;} else {echo \"File is not an image.\";$uploadOk = 0;}}?>",
                    "// Check if file already existsif (file_exists($target_file)) {echo \"Sorry, file already exists.\";$uploadOk = 0;}",
                    "// Check file sizeif ($_FILES[\"fileToUpload\"][\"size\"] > 500000) {echo \"Sorry, your file is too large.\";$uploadOk = 0;}",
                    "// Allow certain file formatsif($imageFileType != \"jpg\" && $imageFileType  != \"png\" && $imageFileType != \"jpeg\"&& $imageFileType != \"gif\" ) {echo \"Sorry, only JPG, JPEG, PNG & GIF files are allowed.\";$uploadOk = 0;}",
                    "<?php$target_dir = \"uploads/\";$target_file = $target_dir . basename($_FILES[\"fileToUpload\"][\"name\"]);$uploadOk = 1;$imageFileType = \n  strtolower(pathinfo($target_file,PATHINFO_EXTENSION));// Check if image file is a actual image or fake imageif(isset($_POST[\"submit\"])) {$check = getimagesize($_FILES[\"fileToUpload\"][\"tmp_name\"]);if($check !== false) {echo \"File is an image - \" . $check[\"mime\"] . \".\";$uploadOk = 1;} else {echo \"File is not an image.\";$uploadOk = 0;}}// Check if file already existsif (file_exists($target_file)) {echo \"Sorry, file already exists.\";$uploadOk = 0;}// Check file sizeif ($_FILES[\"fileToUpload\"][\"size\"] > 500000) {echo \"Sorry, your file is too large.\";$uploadOk = 0;}// Allow certain file formatsif($imageFileType != \"jpg\" && $imageFileType != \"png\" && $imageFileType != \"jpeg\"&& $imageFileType != \"gif\" ) {echo \"Sorry, only JPG, JPEG, PNG & GIF files are allowed.\";$uploadOk = 0;}// Check if $uploadOk is set to 0 by an errorif ($uploadOk == 0) {echo \"Sorry, your file was not uploaded.\";// if everything is ok, try to upload file} else {if (move_uploaded_file($_FILES[\"fileToUpload\"][\"tmp_name\"], $target_file)) {echo \"The file \". htmlspecialchars( basename( $_FILES[\"fileToUpload\"][\"name\"])). \n  \" has been uploaded.\";} else {echo \"Sorry, there was an error uploading your file.\";}}?>"
                ]
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/php/php_cookies.asp",
        "cours": {
            "titre": "PHPCookies",
            "description": "",
            "lien": "https://www.w3schools.com/php/php_cookies.asp",
            "contenus": {
                "paragraphs": [
                    "A cookie is often used to identify a user. A cookie is a small file that the \nserver embeds on the user's computer. Each time the same computer requests a \npage with a browser, it will send the cookie too. With PHP, you can both create \nand retrieve cookie values.",
                    "A cookie is created with thesetcookie()function.",
                    "Only thenameparameter is required. All other parameters are \noptional.",
                    "The following example creates a cookie named \"user\" with the value \"John \nDoe\". The cookie will expire after 30 days (86400 * 30). The \"/\" means that the \ncookie is available in entire website (otherwise, select the directory you \nprefer).",
                    "We then retrieve the value of the cookie \"user\" (using the global variable \n$_COOKIE). We also use theisset()function to find out if the cookie is set:",
                    "Note:Thesetcookie()function must appear BEFORE the <html> tag.",
                    "Note:Thesetcookie()function must appear BEFORE the <html> tag.",
                    "Note:The value of the cookie is automatically URLencoded when \nsending the cookie, and automatically decoded when received (to prevent \nURLencoding, usesetrawcookie()instead).",
                    "To modify a cookie, just set (again) the cookie using thesetcookie()function:",
                    "To delete a cookie, use thesetcookie()function with an expiration date in \nthe past:",
                    "The following example creates a small script that checks whether cookies are \nenabled. First, try to create a test cookie with thesetcookie()function, then \ncount the $_COOKIE array variable:",
                    "For a complete reference of Network functions, go to our completePHP Network Reference."
                ],
                "lists": [],
                "examples": [
                    "setcookie(name, value, expire, path, domain, secure, httponly);",
                    "<?php$cookie_name = \"user\";$cookie_value = \"John Doe\";setcookie($cookie_name, $cookie_value, time() + (86400 * 30), \"/\"); // 86400 = 1 day?><html><body><?phpif(!isset($_COOKIE[$cookie_name])) {echo \"Cookie named '\" . $cookie_name . \"' is not set!\";} else {echo \"Cookie '\" . $cookie_name . \"' is set!<br>\";echo \"Value is: \" . $_COOKIE[$cookie_name];}?></body></html>",
                    "<?php$cookie_name = \"user\";$cookie_value = \"Alex Porter\";setcookie($cookie_name, $cookie_value, time() + (86400 * 30), \"/\");?><html><body><?phpif(!isset($_COOKIE[$cookie_name])) {echo \"Cookie named '\" . $cookie_name . \"' is not set!\";} else {echo \"Cookie '\" . $cookie_name . \"' is set!<br>\";echo \"Value is: \" . $_COOKIE[$cookie_name];}?></body></html>",
                    "<?php// set the expiration date to one hour agosetcookie(\"user\", \"\", time() - 3600);?><html><body><?phpecho \"Cookie 'user' is deleted.\";?></body></html>",
                    "<?phpsetcookie(\"test_cookie\", \"test\", time() + 3600, '/');?><html><body><?phpif(count($_COOKIE) > 0) {echo \"Cookies are enabled.\";} else {echo \"Cookies are disabled.\";}?></body></html>"
                ]
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/php/php_sessions.asp",
        "cours": {
            "titre": "PHPSessions",
            "description": "",
            "lien": "https://www.w3schools.com/php/php_sessions.asp",
            "contenus": {
                "paragraphs": [
                    "A session is a way to store information (in variables) to be used across multiple pages.",
                    "Unlike a cookie, the information is not stored on the users computer.",
                    "When you work with an application, you open it, do some changes, and \nthen you close it. This is much like a Session. The computer knows who you are. \nIt knows when you start the application and when you end. But on the internet \nthere is one problem: the web server does not know who you are or what you do, \nbecause the HTTP address doesn't maintain state.",
                    "Session variables solve this problem by storing user information \nto be used across multiple pages (e.g. username, favorite color, etc). By \ndefault, session variables last until the user closes the browser.",
                    "So; Session variables hold information about one single user, and are available to all pages in one application.",
                    "Tip:If you need a permanent storage, you may want to store the data in adatabase.",
                    "A session is started with thesession_start()function.",
                    "Session variables are set with the PHP global variable: $_SESSION.",
                    "Now, let's create a new page called \"demo_session1.php\". In this page, we start a \nnew PHP session and set some session variables:",
                    "Note:Thesession_start()function must be the very \nfirst thing in your document. Before any HTML tags.",
                    "Next, we create another page called \"demo_session2.php\". From this page, we \nwill access the session information we set on the first page (\"demo_session1.php\").",
                    "Notice that session variables are not passed individually to each new page, \ninstead they are retrieved from the session we open at the beginning of each \npage (session_start()).",
                    "Also notice that all session variable values are stored in the global $_SESSION variable:",
                    "Another way to show all the session variable values for a user session is to run the \nfollowing code:",
                    "How does it work? How does it know it's me?Most sessions set a user-key on \nthe user's computer that \nlooks something like this: 765487cf34ert8dede5a562e4f3a7e12. Then, when a \nsession is opened on another page, it scans the computer for a user-key. If \nthere is a match, it accesses that session, if not, it starts a new session.",
                    "To change a session variable, just overwrite it:",
                    "To remove all global session variables and destroy the session, usesession_unset()andsession_destroy():"
                ],
                "lists": [],
                "examples": [
                    "<?php// Start the sessionsession_start();?><!DOCTYPE html><html><body><?php// Set session variables$_SESSION[\"favcolor\"] = \"green\";$_SESSION[\"favanimal\"] = \"cat\";echo \"Session variables are set.\";?></body></html>",
                    "<?phpsession_start();?><!DOCTYPE html><html><body><?php// Echo session variables that were set on previous pageecho \"Favorite color is \" . $_SESSION[\"favcolor\"] . \".<br>\";echo \"Favorite animal is \" . $_SESSION[\"favanimal\"] . \".\";?></body></html>",
                    "<?phpsession_start();?><!DOCTYPE html><html><body><?phpprint_r($_SESSION);?></body></html>",
                    "<?phpsession_start();?><!DOCTYPE html><html><body><?php// to change a session variable, just overwrite it$_SESSION[\"favcolor\"] = \"yellow\";print_r($_SESSION);?></body></html>",
                    "<?phpsession_start();?><!DOCTYPE html><html><body><?php// remove all session variablessession_unset();// destroy the sessionsession_destroy();?></body></html>"
                ]
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/php/php_filter.asp",
        "cours": {
            "titre": "PHPFilters",
            "description": "",
            "lien": "https://www.w3schools.com/php/php_filter.asp",
            "contenus": {
                "paragraphs": [
                    "Validating data = Determine if the data is in proper form.",
                    "Sanitizing data = Remove any illegal character from the data.",
                    "PHP filters are used to validate and sanitize external input.",
                    "The PHP filter extension has many of the functions needed for checking user input,\nand is designed to make data validation easier and quicker.",
                    "Thefilter_list()function can be used to list what the PHP filter extension offers:",
                    "Many web applications receive external input. External input/data can be:",
                    "You should always validate external data!Invalid submitted data can lead to security problems and break your webpage!By using PHP filters you can be sure your application gets the correct input!",
                    "You should always validate external data!Invalid submitted data can lead to security problems and break your webpage!By using PHP filters you can be sure your application gets the correct input!",
                    "Thefilter_var()function both validate and sanitize data.",
                    "Thefilter_var()function filters a single variable with a specified filter. It takes two pieces of data:",
                    "The following example uses thefilter_var()function to remove all HTML tags \nfrom a string:",
                    "The following example uses thefilter_var()function to check if the variable $int \nis an integer. If $int is an integer,\nthe output of the code below will be: \"Integer is valid\". If $int is not an integer, \nthe output will be: \"Integer is not valid\":",
                    "In the example above, if $int was set to 0, the function above will return \n\"Integer is not valid\". To solve this problem, use the code below:",
                    "The following example uses thefilter_var()function to check if the variable $ip \nis a valid IP address:",
                    "The following example uses thefilter_var()function to first remove all \nillegal characters from the $email variable, then check if it \nis a valid email address:",
                    "The following example uses thefilter_var()function to first remove all \nillegal characters from a URL, then check if $url is a valid URL:",
                    "For a complete reference of all filter functions, go to our completePHP Filter Reference.Check each filter to see \nwhat options and flags are available.",
                    "The reference contains a brief description, and examples of use, for each function!"
                ],
                "lists": [
                    [
                        "User input from a form",
                        "Cookies",
                        "Web services data",
                        "Server variables",
                        "Database query results"
                    ],
                    [
                        "The variable you want to check",
                        "The type of check to use"
                    ]
                ],
                "examples": [
                    "<table><tr><td>Filter Name</td><td>Filter ID</td></tr><?phpforeach (filter_list() as $id =>$filter) {echo '<tr><td>' . $filter . '</td><td>' . filter_id($filter) . '</td></tr>';}?></table>",
                    "<?php$str = \"<h1>Hello World!</h1>\";$newstr = filter_var($str, FILTER_SANITIZE_STRING);echo $newstr;?>",
                    "<?php$int = 100;if (!filter_var($int, FILTER_VALIDATE_INT) === false) {echo(\"Integer is valid\");} else {echo(\"Integer is not valid\");}?>",
                    "<?php$int = 0;if (filter_var($int, FILTER_VALIDATE_INT) === 0 || !filter_var($int, FILTER_VALIDATE_INT) === false) {echo(\"Integer is valid\");} else {echo(\"Integer is not valid\");}?>",
                    "<?php$ip = \"127.0.0.1\";if (!filter_var($ip, FILTER_VALIDATE_IP) === false) {echo(\"$ip is a valid IP address\");} else {echo(\"$ip is not a valid IP address\");}?>",
                    "<?php$email = \"john.doe@example.com\";// Remove all illegal characters from email$email = filter_var($email, FILTER_SANITIZE_EMAIL);// Validate e-mailif (!filter_var($email, FILTER_VALIDATE_EMAIL) === false) {echo(\"$email is a valid email address\");} else {echo(\"$email is not a valid email address\");}?>",
                    "<?php$url = \"https://www.w3schools.com\";// Remove all illegal characters from a url$url = filter_var($url, FILTER_SANITIZE_URL);// Validate urlif (!filter_var($url, FILTER_VALIDATE_URL) === false) {echo(\"$url is a valid URL\");} else {echo(\"$url is not a valid URL\");}?>"
                ]
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/php/php_filter_advanced.asp",
        "cours": {
            "titre": "PHPFilters Advanced",
            "description": "",
            "lien": "https://www.w3schools.com/php/php_filter_advanced.asp",
            "contenus": {
                "paragraphs": [
                    "The following example uses thefilter_var()function to check if a variable \nis both of type INT, and between 1 and 200:",
                    "The following example uses thefilter_var()function to check if the variable $ip is a valid \nIPv6 address:",
                    "The following example uses thefilter_var()function to check if the variable $url is a \nURL with a querystring:",
                    "The following example uses thefilter_var()function to sanitize a string. It \nwill both remove all HTML tags, and all characters with ASCII value > 127, from \nthe string:",
                    "For a complete reference of all filter functions, go to our completePHP Filter Reference.Check each filter to see \nwhat options and flags are available.",
                    "The reference contains a brief description, and examples of use, for each function!"
                ],
                "lists": [],
                "examples": [
                    "<?php$int = 122;$min = 1;$max = 200;if (filter_var($int, FILTER_VALIDATE_INT, array(\"options\" => array(\"min_range\"=>$min, \"max_range\"=>$max))) === false) {echo(\"Variable value is not within the legal range\");} else {echo(\"Variable value is within the legal range\");}?>",
                    "<?php$ip = \"2001:0db8:85a3:08d3:1319:8a2e:0370:7334\";if (!filter_var($ip, FILTER_VALIDATE_IP, FILTER_FLAG_IPV6) === false) {echo(\"$ip is a valid IPv6 address\");} else {echo(\"$ip is not a valid IPv6 address\");}?>",
                    "<?php$url = \"https://www.w3schools.com\";if (!filter_var($url, FILTER_VALIDATE_URL, FILTER_FLAG_QUERY_REQUIRED) === false) {echo(\"$url is a valid URL with a query string\");} else {echo(\"$url is not a valid URL with a query string\");}?>",
                    "<?php$str = \"<h1>Hello WorldÃÃÃ!</h1>\";$newstr = filter_var($str, FILTER_SANITIZE_STRING, FILTER_FLAG_STRIP_HIGH);echo $newstr;?>"
                ]
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/php/php_callback_functions.asp",
        "cours": {
            "titre": "PHPCallback Functions",
            "description": "",
            "lien": "https://www.w3schools.com/php/php_callback_functions.asp",
            "contenus": {
                "paragraphs": [
                    "A callback function (often referred to as just \"callback\") is a function which is passed as an\nargument into another function.",
                    "Any existing function can be used as a callback function. To use a function as a callback\nfunction, pass a string containing the name of the function as the argument of another\nfunction:",
                    "Pass a callback to PHP'sarray_map()function to calculate the length of\nevery string in an array:",
                    "Starting with version 7, PHP can pass anonymous functions as callback functions:",
                    "Use an anonymous function as a callback for PHP'sarray_map()function:",
                    "User-defined functions and methods can also take callback functions as \narguments. To use callback functions inside a user-defined function or method, \ncall it by adding parentheses to the variable and pass arguments as with normal \nfunctions:",
                    "Run a callback from a user-defined function:"
                ],
                "lists": [],
                "examples": [
                    "<?phpfunction my_callback($item) {return strlen($item);}$strings = [\"apple\", \"orange\", \n  \"banana\", \"coconut\"];$lengths = \n  array_map(\"my_callback\", $strings);print_r($lengths);?>",
                    "<?php$strings = [\"apple\", \"orange\", \"banana\", \"coconut\"];$lengths = \n  array_map( function($item) { return strlen($item); } , $strings);print_r($lengths);?>",
                    "<?phpfunction exclaim($str) {return $str . \"! \";}function ask($str) {return $str . \"? \";}function \n  printFormatted($str, $format) {// Calling the $format callback \n  functionecho $format($str);}// Pass \"exclaim\" and \"ask\" as callback \n  functions to printFormatted()printFormatted(\"Hello world\", \"exclaim\");printFormatted(\"Hello world\", \"ask\");?>"
                ]
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/php/php_json.asp",
        "cours": {
            "titre": "PHP andJSON",
            "description": "",
            "lien": "https://www.w3schools.com/php/php_json.asp",
            "contenus": {
                "paragraphs": [
                    "JSON stands for JavaScript Object Notation, and is a syntax for storing and \nexchanging data.",
                    "Since the JSON format is a text-based format, it can easily be sent to and \nfrom a server, and used as a data format by any programming language.",
                    "PHP has some built-in functions to handle JSON.",
                    "First, we will look at the following two functions:",
                    "Thejson_encode()function is used to encode a value to JSON format.",
                    "This example shows how to encode an associative array into a JSON object:",
                    "This example shows how to encode an indexed array into a JSON array:",
                    "Thejson_decode()function is used to decode \na JSON object into a PHP object or an associative array.",
                    "This example decodes JSON data into a \nPHP object:",
                    "Thejson_decode()function returns an object \nby default. Thejson_decode()function has a \nsecond parameter, and when set to true, JSON objects are decoded into \nassociative arrays.",
                    "This example decodes JSON data into a \nPHP \nassociative array:",
                    "Here are two examples of how to access the decoded values from an object and \nfrom an associative array:",
                    "This example shows how to access the values from a PHP object:",
                    "This example shows how to access the values from a \nPHP associative array:",
                    "You can also loop through the values with aforeach()loop:",
                    "This example shows how to loop through the values of a PHP object:",
                    "This example shows how to loop through the \nvalues of a PHP associative array:"
                ],
                "lists": [
                    [
                        "json_encode()",
                        "json_decode()"
                    ]
                ],
                "examples": [
                    "<?php$age = array(\"Peter\"=>35, \"Ben\"=>37, \"Joe\"=>43);echo json_encode($age);?>",
                    "<?php$cars = array(\"Volvo\", \"BMW\", \"Toyota\");echo json_encode($cars);?>",
                    "<?php$jsonobj = '{\"Peter\":35,\"Ben\":37,\"Joe\":43}';var_dump(json_decode($jsonobj));?>",
                    "<?php$jsonobj = '{\"Peter\":35,\"Ben\":37,\"Joe\":43}';var_dump(json_decode($jsonobj, \n  true));?>",
                    "<?php$jsonobj = '{\"Peter\":35,\"Ben\":37,\"Joe\":43}';$obj = json_decode($jsonobj);echo $obj->Peter;echo $obj->Ben;echo $obj->Joe;?>",
                    "<?php$jsonobj = '{\"Peter\":35,\"Ben\":37,\"Joe\":43}';$arr = json_decode($jsonobj, true);echo $arr[\"Peter\"];echo $arr[\"Ben\"];echo $arr[\"Joe\"];?>",
                    "<?php$jsonobj = '{\"Peter\":35,\"Ben\":37,\"Joe\":43}';$obj = json_decode($jsonobj);foreach($obj \n  as $key => $value) {echo $key . \" => \" . $value . \"<br>\";}?>",
                    "<?php$jsonobj = '{\"Peter\":35,\"Ben\":37,\"Joe\":43}';$arr = json_decode($jsonobj, true);foreach($arr as $key => $value) {echo $key . \" => \" . $value \n  . \"<br>\";}?>"
                ]
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/php/php_exceptions.asp",
        "cours": {
            "titre": "PHPExceptions",
            "description": "",
            "lien": "https://www.w3schools.com/php/php_exceptions.asp",
            "contenus": {
                "paragraphs": [
                    "An exception is an object that describes an error or unexpected behaviour of a PHP script.Exceptions are thrown by many PHP functions and classes.User defined functions and classes can also throw exceptions.Exceptions are a good way to stop a function when it comes across data that it cannot\nuse.Throwing an ExceptionThethrowstatement allows a user defined \nfunction or method to throw an exception. When an exception is thrown, the code \nfollowing it will not be executed.If an exception is not caught, a fatal error will occur with an \"Uncaught \nException\" message.Lets try to throw an exception without catching it:Example<?phpfunction divide($dividend, $divisor) {if($divisor == 0) \n  {throw new Exception(\"Division by zero\");}return $dividend / $divisor;}echo divide(5, 0);?>Try it Yourself »The result will look something like this:Fatal error:Uncaught Exception: Division by zero in \n  C:\\webfolder\\test.php:4Stack trace: #0 C:\\webfolder\\test.php(9):divide(5, 0) #1 {main} thrown inC:\\webfolder\\test.phpon line4The try...catch StatementTo avoid the error from the example above, we can use thetry...catchstatement to catch exceptions and continue the process.Syntaxtry {code that can throw exceptions} catch(Exception $e) {code that runs when an exception is caught}ExampleShow a message when an exception is thrown:<?phpfunction divide($dividend, $divisor) {if($divisor == \n  0) {throw new Exception(\"Division by zero\");}return $dividend / $divisor;}try {echo \n  divide(5, 0);} catch(Exception $e) {echo \"Unable to divide.\";}?>Try it Yourself »The catch block indicates what type of exception should be caught and the name of the\nvariable which can be used to access the exception. In the example above, the type of\nexception isExceptionand the variable name is$e.The try...catch...finally StatementThetry...catch...finallystatement can be used to catch exceptions. Code in thefinallyblock will always run regardless of whether an exception was caught. Iffinallyis present, thecatchblock is optional.Syntaxtry {code that can throw exceptions} catch(Exception $e) {code that runs when an exception is caught} finally {code that \n  always runs regardless of whether an exception was caught}ExampleShow a message when an exception is thrown and then indicate that the process \nhas ended:<?phpfunction divide($dividend, $divisor) {if($divisor \n  == 0) {throw new Exception(\"Division by zero\");}return $dividend / $divisor;}try {echo \n  divide(5, 0);} catch(Exception $e) {echo \"Unable to \n  divide. \";} finally {echo \"Process complete.\";}?>Try it Yourself »ExampleOutput a string even if an exception was not caught:<?phpfunction divide($dividend, $divisor) {if($divisor == 0) \n  {throw new Exception(\"Division by zero\");}return $dividend / $divisor;}try {echo divide(5, 0);} finally {echo \n  \"Process complete.\";}?>Try it Yourself »The Exception ObjectThe Exception Object contains information about the error or unexpected behaviour that\nthe function encountered.Syntaxnew Exception(message, code, previous)Parameter ValuesParameterDescriptionmessageOptional. A string describing why the exception was throwncodeOptional. An integer that can be used to easily distinguish this exception from others of the same typepreviousOptional. If this exception was thrown in a catch block of another exception, it is recommended to pass that exception into this parameterMethodsWhen catching an exception, the following table shows some of the methods that can be used to\nget information about the exception:MethodDescriptiongetMessage()Returns a string describing why the exception was throwngetPrevious()If this exception was triggered by another one, this method returns the previous exception. If not, then it returnsnullgetCode()Returns the exception codegetFile()Returns the full path of the file in which the exception was throwngetLine()Returns the line number of the line of code which threw the exceptionExampleOutput information about an exception that was thrown:<?phpfunction divide($dividend, $divisor) {if($divisor == 0) \n  {throw new Exception(\"Division by zero\", 1);}return $dividend / $divisor;}try {echo \n  divide(5, 0);} catch(Exception $ex) {$code = $ex->getCode();$message = $ex->getMessage();$file = $ex->getFile();$line = $ex->getLine();echo \"Exception thrown in $file on line \n  $line: [Code $code]$message\";}?>Try it Yourself »Complete Exception ReferenceFor a complete reference, go to ourComplete PHP Exception Reference.The reference contains descriptions and examples of all Exception methods.❮ PreviousNext ❯★+1Track your progress - it's free!Log inSign Up",
                    "Exceptions are thrown by many PHP functions and classes.",
                    "User defined functions and classes can also throw exceptions.",
                    "Exceptions are a good way to stop a function when it comes across data that it cannot\nuse.",
                    "Thethrowstatement allows a user defined \nfunction or method to throw an exception. When an exception is thrown, the code \nfollowing it will not be executed.",
                    "If an exception is not caught, a fatal error will occur with an \"Uncaught \nException\" message.",
                    "Lets try to throw an exception without catching it:",
                    "The result will look something like this:",
                    "To avoid the error from the example above, we can use thetry...catchstatement to catch exceptions and continue the process.",
                    "Show a message when an exception is thrown:",
                    "The catch block indicates what type of exception should be caught and the name of the\nvariable which can be used to access the exception. In the example above, the type of\nexception isExceptionand the variable name is$e.",
                    "Thetry...catch...finallystatement can be used to catch exceptions. Code in thefinallyblock will always run regardless of whether an exception was caught. Iffinallyis present, thecatchblock is optional.",
                    "Show a message when an exception is thrown and then indicate that the process \nhas ended:",
                    "Output a string even if an exception was not caught:",
                    "The Exception Object contains information about the error or unexpected behaviour that\nthe function encountered.",
                    "When catching an exception, the following table shows some of the methods that can be used to\nget information about the exception:",
                    "Output information about an exception that was thrown:",
                    "For a complete reference, go to ourComplete PHP Exception Reference.",
                    "The reference contains descriptions and examples of all Exception methods."
                ],
                "lists": [],
                "examples": [
                    "<?phpfunction divide($dividend, $divisor) {if($divisor == 0) \n  {throw new Exception(\"Division by zero\");}return $dividend / $divisor;}echo divide(5, 0);?>",
                    "Fatal error:Uncaught Exception: Division by zero in \n  C:\\webfolder\\test.php:4Stack trace: #0 C:\\webfolder\\test.php(9):divide(5, 0) #1 {main} thrown inC:\\webfolder\\test.phpon line4",
                    "try {code that can throw exceptions} catch(Exception $e) {code that runs when an exception is caught}",
                    "<?phpfunction divide($dividend, $divisor) {if($divisor == \n  0) {throw new Exception(\"Division by zero\");}return $dividend / $divisor;}try {echo \n  divide(5, 0);} catch(Exception $e) {echo \"Unable to divide.\";}?>",
                    "try {code that can throw exceptions} catch(Exception $e) {code that runs when an exception is caught} finally {code that \n  always runs regardless of whether an exception was caught}",
                    "<?phpfunction divide($dividend, $divisor) {if($divisor \n  == 0) {throw new Exception(\"Division by zero\");}return $dividend / $divisor;}try {echo \n  divide(5, 0);} catch(Exception $e) {echo \"Unable to \n  divide. \";} finally {echo \"Process complete.\";}?>",
                    "<?phpfunction divide($dividend, $divisor) {if($divisor == 0) \n  {throw new Exception(\"Division by zero\");}return $dividend / $divisor;}try {echo divide(5, 0);} finally {echo \n  \"Process complete.\";}?>",
                    "new Exception(message, code, previous)",
                    "<?phpfunction divide($dividend, $divisor) {if($divisor == 0) \n  {throw new Exception(\"Division by zero\", 1);}return $dividend / $divisor;}try {echo \n  divide(5, 0);} catch(Exception $ex) {$code = $ex->getCode();$message = $ex->getMessage();$file = $ex->getFile();$line = $ex->getLine();echo \"Exception thrown in $file on line \n  $line: [Code $code]$message\";}?>"
                ]
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/php/php_oop_what_is.asp",
        "cours": {
            "titre": "PHP- What is OOP?",
            "description": "",
            "lien": "https://www.w3schools.com/php/php_oop_what_is.asp",
            "contenus": {
                "paragraphs": [
                    "From PHP5, you can also write PHP code in an object-oriented \nstyle.",
                    "Object-Oriented programming is faster and easier to execute.",
                    "OOP stands for Object-Oriented Programming.",
                    "Procedural programming is about writing procedures or functions that perform \noperations on the data, while object-oriented programming is about \ncreating objects that contain both data and functions.",
                    "Object-oriented programming has several advantages over procedural \nprogramming:",
                    "Tip:The \"Don't Repeat Yourself\" (DRY) principle is about \nreducing the repetition of code. You should extract out the codes that are \ncommon for the application, and place them at a single place and reuse them \ninstead of repeating it.",
                    "Classes and objects are the two main aspects of object-oriented programming.",
                    "Look at the following illustration to see the difference between class and \nobjects:",
                    "Fruit",
                    "Apple",
                    "Banana",
                    "Mango",
                    "Another example:",
                    "Car",
                    "Volvo",
                    "Audi",
                    "Toyota",
                    "So, a class is a template for objects, and an object is an instance of a class.",
                    "When the individual objects are created, they inherit all the \nproperties and behaviors from the class, but each object will have different values for the properties.",
                    "Look at the next chapters to learn more about OOP."
                ],
                "lists": [
                    [
                        "OOP is faster and easier to execute",
                        "OOP provides a clear structure for the programs",
                        "OOP helps to keep the PHP code DRY \"Don't Repeat Yourself\", and makes \n  the \n  code easier to maintain, modify and debug",
                        "OOP makes it possible to create full reusable \n  applications with less code and shorter development time"
                    ]
                ],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/php/php_oop_classes_objects.asp",
        "cours": {
            "titre": "PHPOOP - Classes and Objects",
            "description": "",
            "lien": "https://www.w3schools.com/php/php_oop_classes_objects.asp",
            "contenus": {
                "paragraphs": [
                    "A class is a template for objects, and an object is an instance \nof class.",
                    "Let's assume we have a class named Fruit. A Fruit can have properties like name, \ncolor, weight, etc. We can define variables like $name, $color, and $weight to hold the values of these properties.",
                    "When the individual objects (apple, banana, etc.) are created, they inherit \nall the  \nproperties and behaviors from the class, but each object will have different values for the properties.",
                    "A class is defined by using theclasskeyword, followed by the name of the class and a pair of curly braces ({}). All \nits properties and methods go inside the braces:",
                    "Below we declare a class named Fruit consisting of two properties \n($name and $color) and two methods set_name() and \nget_name() for setting and getting the $name property:",
                    "Note:In a class, variables are called properties and functions are called methods!",
                    "Classes are nothing without objects! We can create multiple objects from a \nclass. Each object has all the properties and methods defined in the class, but \nthey will have different property values.",
                    "Objects \nof a class are created using thenewkeyword.",
                    "In the example below, $apple and $banana are instances of the class Fruit:",
                    "In the example below, we add two more methods to class Fruit, for setting and \ngetting the $color property:",
                    "The $this keyword refers to the current object, and is only available inside \nmethods.",
                    "Look at the following example:",
                    "So, where can we change the value of the $name property? There are two \nways:",
                    "1. Inside the class (by adding a set_name() method and use $this):",
                    "2. Outside the class (by directly changing the property value):",
                    "You can use theinstanceofkeyword to check if an object belongs to a specific class:"
                ],
                "lists": [],
                "examples": [
                    "<?phpclass Fruit {// code goes here...}?>",
                    "<?phpclass Fruit {// Propertiespublic \n    $name;public $color;// Methodsfunction \n    set_name($name) {$this->name = $name;}function get_name() {return $this->name;}}?>",
                    "<?phpclass Fruit {// Propertiespublic \n    $name;public $color;// Methodsfunction \n    set_name($name) {$this->name = $name;}function get_name() {return $this->name;}}$apple = new Fruit();$banana = new Fruit();$apple->set_name('Apple');$banana->set_name('Banana');echo $apple->get_name();echo \"<br>\";echo $banana->get_name();?>",
                    "<?phpclass Fruit {// Propertiespublic $name;public $color;// Methodsfunction set_name($name) {$this->name = $name;}function get_name() {return $this->name;}function set_color($color) {$this->color = $color;}function get_color() {return $this->color;}}$apple = new Fruit();$apple->set_name('Apple');$apple->set_color('Red');echo \"Name: \" . $apple->get_name();echo \"<br>\";echo \"Color: \" . $apple->get_color();?>",
                    "<?phpclass Fruit {public $name;}$apple = new Fruit();?>",
                    "<?phpclass Fruit {public $name;function set_name($name) {$this->name = $name;}}$apple = new Fruit();$apple->set_name(\"Apple\");echo $apple->name;?>",
                    "<?phpclass Fruit {public $name;}$apple = new Fruit();$apple->name = \"Apple\";echo $apple->name;?>",
                    "<?php$apple = new Fruit();var_dump($apple instanceof \n    Fruit);?>"
                ]
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/php/php_oop_constructor.asp",
        "cours": {
            "titre": "PHPOOP - Constructor",
            "description": "",
            "lien": "https://www.w3schools.com/php/php_oop_constructor.asp",
            "contenus": {
                "paragraphs": [
                    "A constructor allows you to initialize an object's properties upon creation of the object.",
                    "If you create a__construct()function, PHP will automatically call this \nfunction when you create an object from a class.",
                    "Notice that the construct function starts with two underscores (__)!",
                    "We see in the example below, that using a constructor saves us from  \ncalling the set_name() method which reduces the amount of code:",
                    "Another example:"
                ],
                "lists": [],
                "examples": [
                    "<?phpclass Fruit {public \n    $name;public $color;function __construct($name) {$this->name = $name;}function get_name() {return $this->name;}}$apple = new Fruit(\"Apple\");echo $apple->get_name();?>",
                    "<?phpclass Fruit {public \n    $name;public $color;function __construct($name, $color) {$this->name = $name;$this->color = $color;}function get_name() {return $this->name;}function get_color() {return $this->color;}}$apple = new Fruit(\"Apple\", \"red\");echo $apple->get_name();echo \n    \"<br>\";echo $apple->get_color();?>"
                ]
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/php/php_oop_destructor.asp",
        "cours": {
            "titre": "PHPOOP - Destructor",
            "description": "",
            "lien": "https://www.w3schools.com/php/php_oop_destructor.asp",
            "contenus": {
                "paragraphs": [
                    "A destructor is called when the object is destructed or the script is stopped \nor exited.",
                    "If you create a__destruct()function, PHP will automatically call this \nfunction at the end of the script.",
                    "Notice that the destruct function starts with two underscores (__)!",
                    "The example below has a __construct() function that is automatically called \nwhen you create an object from a class, and a __destruct() function that is \nautomatically called at the end of the script:",
                    "Another example:",
                    "Tip:As constructors and destructors helps reducing the \namount of code, they are very useful!"
                ],
                "lists": [],
                "examples": [
                    "<?phpclass Fruit {public \n    $name;public $color;function __construct($name) {$this->name = $name;}function __destruct() {echo \"The fruit is {$this->name}.\";}}$apple = new Fruit(\"Apple\");?>",
                    "<?phpclass Fruit {public \n    $name;public $color;function __construct($name, $color) {$this->name = $name;$this->color = $color;}function __destruct() {echo \"The fruit is {$this->name} \n    and the color is {$this->color}.\";}}$apple = new Fruit(\"Apple\", \"red\");?>"
                ]
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/php/php_oop_access_modifiers.asp",
        "cours": {
            "titre": "PHPOOP - Access Modifiers",
            "description": "",
            "lien": "https://www.w3schools.com/php/php_oop_access_modifiers.asp",
            "contenus": {
                "paragraphs": [
                    "Properties and methods can have access modifiers which control where they can \nbe accessed.",
                    "There are three access modifiers:",
                    "In the following example we have added three different access modifiers to \nthree properties (name, color, and weight). Here, if you try to set the name property it \nwill work fine (because the name property is public, and can be accessed from \neverywhere). However, if you try \nto set the color or weight property it will result in a fatal \nerror (because the color and weight property are protected and private):",
                    "In the next example we have added access modifiers to \ntwo functions. Here, if you try to call the set_color() or the set_weight() function it will result in a fatal \nerror (because the two functions are considered protected and private), even if \nall the properties are public:"
                ],
                "lists": [
                    [
                        "public- the property or \n  method can be accessed from everywhere. This is default",
                        "protected- the property or method can \n  be accessed within the \n  class and by classes derived from that class",
                        "private- the property or method can \n  ONLY be accessed within the class"
                    ]
                ],
                "examples": [
                    "<?phpclass Fruit {public \n    $name;protected $color;private $weight;}$mango = new Fruit();$mango->name = 'Mango'; // OK$mango->color = 'Yellow'; // ERROR$mango->weight = '300'; // ERROR?>",
                    "<?phpclass Fruit {public \n    $name;public $color;public $weight;function set_name($n) {  \n    // a public function (default)$this->name = $n;}protected function set_color($n) { \n    // a protected function$this->color = $n;}private function set_weight($n) { \n    // a private function$this->weight = $n;}}$mango = new Fruit();$mango->set_name('Mango'); // OK$mango->set_color('Yellow'); // ERROR$mango->set_weight('300'); // ERROR?>"
                ]
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/php/php_oop_inheritance.asp",
        "cours": {
            "titre": "PHPOOP - Inheritance",
            "description": "",
            "lien": "https://www.w3schools.com/php/php_oop_inheritance.asp",
            "contenus": {
                "paragraphs": [
                    "Inheritance in OOP = When a class derives from another class.",
                    "The child class will inherit all the public and protected properties and \nmethods from the parent class. In addition, it can have its own properties and \nmethods.",
                    "An inherited class is defined by using theextendskeyword.",
                    "Let's look at an example:",
                    "The Strawberry class is inherited from the Fruit class.",
                    "This means that the Strawberry class can use the public $name and $color \nproperties as well as the public __construct() and intro() methods from the \nFruit class because of inheritance.",
                    "The Strawberry class also has its own method: message().",
                    "In the previous chapter we learned thatprotectedproperties or methods can \n  be accessed within the \n  class and by classes derived from that class. What does that mean?",
                    "Let's look at an example:",
                    "In the example above we see that if we try to call aprotectedmethod (intro()) from outside the class, we will receive an error.publicmethods will work fine!",
                    "Let's look at another example:",
                    "In the example above we see that all works fine! It is because we call theprotectedmethod (intro()) from inside the derived class.",
                    "Inherited methods can be overridden by redefining the methods (use the same \nname) in the child class.",
                    "Look at the example below. The __construct() and intro() methods in the child \nclass (Strawberry) will override the __construct() and intro() methods in the \nparent class (Fruit):",
                    "Thefinalkeyword can be used to prevent class inheritance or to prevent method overriding.",
                    "The following example shows how to prevent class inheritance:",
                    "The following example shows how to prevent method overriding:"
                ],
                "lists": [],
                "examples": [
                    "<?phpclass Fruit {public \n    $name;public $color;public \n    function __construct($name, $color) {$this->name = $name;$this->color = $color;}public function intro() {echo \"The fruit is {$this->name} \n    and the color is {$this->color}.\";}}// Strawberry is inherited from Fruitclass \n    Strawberry extends Fruit {public \n    function message() {echo \"Am I a fruit or a \n    berry? \";}}$strawberry = new Strawberry(\"Strawberry\", \"red\");$strawberry->message();$strawberry->intro();?>",
                    "<?phpclass Fruit {public \n    $name;public $color;public \n    function __construct($name, $color) {$this->name = $name;$this->color = $color;}protected function intro() {echo \"The fruit is {$this->name} \n    and the color is {$this->color}.\";}}class \n    Strawberry extends Fruit {public \n    function message() {echo \"Am I a fruit or a \n    berry? \";}}// Try to call all three methods from outside class$strawberry = new Strawberry(\"Strawberry\", \"red\");  \n    // OK. __construct() is public$strawberry->message(); // OK. message() \n    is public$strawberry->intro(); // ERROR. intro() \n    is protected?>",
                    "<?phpclass Fruit {public $name;public \n    $color;public function __construct($name, $color) {$this->name = $name;$this->color = $color;}protected function intro() {echo \"The \n    fruit is {$this->name} and the color is {$this->color}.\";}}class Strawberry extends Fruit {public function message() {echo \"Am I a fruit or a berry? \";// Call protected \n    method from within derived class - OK$this -> \n    intro();}}$strawberry = new Strawberry(\"Strawberry\", \"red\"); // OK. __construct() is \n    public$strawberry->message(); // OK. message() is \n    public and it calls intro() (which is protected) from within the \n    derived class?>",
                    "<?phpclass Fruit {public \n    $name;public $color;public \n    function __construct($name, $color) {$this->name = $name;$this->color = $color;}public function intro() {echo \"The fruit is {$this->name} \n    and the color is {$this->color}.\";}}class \n    Strawberry extends Fruit {public $weight;public \n    function __construct($name, $color, $weight) {$this->name = $name;$this->color = $color;$this->weight = $weight;}public function intro() {echo \"The fruit is {$this->name}, the color is {$this->color}, \n    and the weight is {$this->weight} gram.\";}}$strawberry = new Strawberry(\"Strawberry\", \"red\", \n    50);$strawberry->intro();?>",
                    "<?phpfinal class Fruit {// some code}// \n    will result in errorclass \n    Strawberry extends Fruit {// some code}?>",
                    "<?phpclass Fruit {final public function intro() {// some code}}class \n    Strawberry extends Fruit {// \n    will result in errorpublic function intro() {// some code}}?>"
                ]
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/php/php_oop_constants.asp",
        "cours": {
            "titre": "PHPOOP - Class Constants",
            "description": "",
            "lien": "https://www.w3schools.com/php/php_oop_constants.asp",
            "contenus": {
                "paragraphs": [
                    "Class constants can be useful if you need to define some constant data within \na class.",
                    "A class constant is declared inside a class with theconstkeyword.",
                    "A constant cannot be changed once it is declared.",
                    "Class constants are case-sensitive. However, it is recommended to name the constants in \nall uppercase letters.",
                    "We can access a constant from outside the class by using the class name \nfollowed by the scope resolution operator (::) followed by the constant \nname, like here:",
                    "Or, we can access a constant from inside the class by using theselfkeyword followed by the scope resolution operator (::) followed by the constant name, like here:"
                ],
                "lists": [],
                "examples": [
                    "<?phpclass \n    Goodbye {const LEAVING_MESSAGE = \"Thank you for visiting W3Schools.com!\";}echo \n    Goodbye::LEAVING_MESSAGE;?>",
                    "<?phpclass Goodbye {const LEAVING_MESSAGE = \"Thank you for visiting W3Schools.com!\";public function byebye() {echo self::LEAVING_MESSAGE;}}$goodbye = new Goodbye();$goodbye->byebye();?>"
                ]
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/php/php_oop_classes_abstract.asp",
        "cours": {
            "titre": "PHPOOP - Abstract Classes",
            "description": "",
            "lien": "https://www.w3schools.com/php/php_oop_classes_abstract.asp",
            "contenus": {
                "paragraphs": [
                    "Abstract classes and methods are when the parent class has a named method, \nbut \nneed its child class(es) to fill out the tasks.",
                    "An abstract class is a class that contains at least one abstract method. An \nabstract method is a method that is declared, but not implemented in the code.",
                    "An abstract class or method is defined with theabstractkeyword:",
                    "When inheriting from an abstract class, the child class method must be \ndefined with the same name, and the same or a less restricted access modifier. \nSo, if the abstract method is defined as protected, the child class method must \nbe defined as either protected or public, but not private. Also, the type and number of \nrequired arguments must be the same. However, the child classes may have optional \narguments in addition.",
                    "So, when a child class is inherited from an abstract class, we have the following rules:",
                    "Let's look at an example:",
                    "The Audi, Volvo, and Citroen classes are inherited from the Car class. This means that the \nAudi, Volvo, and Citroen classes can use the public $name \nproperty as well as the public __construct() method from the \nCar class because of inheritance.",
                    "But, intro() is an abstract method that should be defined in all the child \nclasses and they should return a string.",
                    "Let's look at another example where the abstract method has an argument:",
                    "Let's look at another example where the abstract method has an argument, and \nthe child class has two optional arguments that are not defined in the parent's \n    abstract method:"
                ],
                "lists": [
                    [
                        "The child class method must be defined with the same name and it redeclares the parent abstract method",
                        "The child class method must be defined with the same or a less restricted \n  access modifier",
                        "The number of required arguments must be the same. However, the child class \n  may have optional \narguments in addition"
                    ]
                ],
                "examples": [
                    "<?phpabstract class \n    ParentClass {abstract public function someMethod1();abstract public function someMethod2($name, $color);abstract \n    public function someMethod3() : string;}?>",
                    "<?php// Parent classabstract class Car {public \n    $name;public \n    function __construct($name) {$this->name = $name;}abstract public function intro() : string;}// Child classesclass \n    Audi extends Car {public \n    function intro() : string {return \"Choose German \n    quality! I'm an $this->name!\";}}class \n    Volvo extends Car {public \n    function intro() : string {return \"Proud to be \n    Swedish! I'm a $this->name!\";}}class \n    Citroen extends Car {public \n    function intro() : string {return \"French \n    extravagance! I'm a $this->name!\";}}// Create objects from the child classes$audi = new \n    audi(\"Audi\");echo $audi->intro();echo \"<br>\";$volvo = new \n    volvo(\"Volvo\");echo $volvo->intro();echo \"<br>\";$citroen = new citroen(\"Citroen\");echo $citroen->intro();?>",
                    "<?phpabstract class ParentClass {// Abstract method \n    with an argumentabstract protected \n    function prefixName($name);}class ChildClass extends ParentClass {public function prefixName($name) {if ($name == \"John Doe\") {$prefix = \"Mr.\";} elseif ($name == \"Jane Doe\") {$prefix = \n    \"Mrs.\";} else {$prefix = \"\";}return \n    \"{$prefix} {$name}\";}}$class = new ChildClass;echo $class->prefixName(\"John \n    Doe\");echo \"<br>\";echo $class->prefixName(\"Jane Doe\");?>",
                    "<?phpabstract class ParentClass {// Abstract method \n    with an argumentabstract protected \n    function prefixName($name);}class ChildClass extends ParentClass {// The child class may define optional arguments that are not in the parent's \n    abstract methodpublic function prefixName($name, $separator = \".\", \n    $greet = \"Dear\") {if ($name == \"John Doe\") {$prefix = \"Mr\";} elseif ($name == \"Jane Doe\") {$prefix = \n    \"Mrs\";} else {$prefix = \"\";}return \n    \"{$greet} {$prefix}{$separator} {$name}\";}}$class = new ChildClass;echo $class->prefixName(\"John \n    Doe\");echo \"<br>\";echo $class->prefixName(\"Jane Doe\");?>"
                ]
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/php/php_oop_interfaces.asp",
        "cours": {
            "titre": "PHPOOP - Interfaces",
            "description": "",
            "lien": "https://www.w3schools.com/php/php_oop_interfaces.asp",
            "contenus": {
                "paragraphs": [
                    "Interfaces allow you to specify what methods a class should implement.",
                    "Interfaces make it easy to use a variety of different classes in the same way. When one or more classes use the same interface, it is referred to as \"polymorphism\".",
                    "Interfaces are declared with theinterfacekeyword:",
                    "Interface are similar to abstract classes. The difference between interfaces and abstract classes are:",
                    "To implement an interface, a class must use theimplementskeyword.",
                    "A class that implements an interface must implementallof the interface's methods.",
                    "From the example above, let's say that we would like to write software which manages a group of animals. There are actions\nthat all of the animals can do, but each animal does it in its own way.",
                    "Using interfaces, we can write some code which can work for all of the \nanimals even if each animal behaves differently:",
                    "Cat, Dog and Mouse are all classes that implement the Animal interface, which means that\nall of them are able to make a sound using themakeSound()method. Because of this,\nwe can loop through all of the animals and tell them to make a sound even if we don't\nknow what type of animal each one is.",
                    "Since the interface does not tell the classes how to implement the method, each animal\ncan make a sound in its own way."
                ],
                "lists": [
                    [
                        "Interfaces cannot have properties, while abstract classes can",
                        "All interface methods must be public, while abstract class methods is public \nor protected",
                        "All methods in an interface are abstract, so they cannot be implemented in code\nand the abstract keyword is not necessary",
                        "Classes can implement an interface while inheriting from another class at the same\ntime"
                    ]
                ],
                "examples": [
                    "<?phpinterface InterfaceName {public function someMethod1();public function someMethod2($name, $color);public function \n    someMethod3() : string;}?>",
                    "<?phpinterface Animal {public function makeSound();}class Cat implements Animal {public function makeSound() {echo \"Meow\";}}$animal = new Cat();$animal->makeSound();?>",
                    "<?php// Interface definitioninterface Animal {public \n    function makeSound();}// Class definitionsclass Cat \n    implements Animal {public function makeSound() {echo \" Meow \";}}class Dog implements Animal {public function makeSound() \n    {echo \" Bark \";}}class Mouse implements Animal {public function makeSound() {echo \" Squeak \";}}// Create a list \n    of animals$cat = new Cat();$dog = new Dog();$mouse = new \n    Mouse();$animals = array($cat, $dog, $mouse);// Tell the animals \n    to make a soundforeach($animals as $animal) {$animal->makeSound();}?>"
                ]
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/php/php_oop_traits.asp",
        "cours": {
            "titre": "PHPOOP - Traits",
            "description": "",
            "lien": "https://www.w3schools.com/php/php_oop_traits.asp",
            "contenus": {
                "paragraphs": [
                    "PHP only supports single inheritance: a child class can inherit only from one \nsingle parent.",
                    "So, what if a class needs to inherit multiple behaviors? OOP traits solve \nthis problem.",
                    "Traits are used to declare methods that can be used in multiple classes. \nTraits can have methods and abstract methods that can be used in multiple \nclasses, and the methods can have any access modifier (public, private, or \nprotected).",
                    "Traits are declared with thetraitkeyword:",
                    "To use a trait in a class, use theusekeyword:",
                    "Let's look at an example:",
                    "Here, we declare one trait: message1. Then, we create a class: \nWelcome. The class uses the trait, and all the methods in the trait will be \navailable in the class.",
                    "If other classes need to use the msg1() function, simply use \nthe message1 trait in those classes. This reduces code duplication, because \nthere is no need to redeclare the same method over and over again.",
                    "Let's look at another example:",
                    "Here, we declare two traits: message1 and message2. Then, we create two classes: \nWelcome and Welcome2. The first class (Welcome) uses the message1 trait, and the \nsecond class (Welcome2) uses both message1 and message2 traits (multiple traits \nare separated by comma)."
                ],
                "lists": [],
                "examples": [
                    "<?phptrait TraitName {// some code...}?>",
                    "<?phpclass MyClass {use TraitName;}?>",
                    "<?phptrait message1 {public function msg1() {echo \"OOP is fun! \";}}class Welcome {use \n    message1;}$obj = new Welcome();$obj->msg1();?>",
                    "<?phptrait message1 {public function msg1() {echo \"OOP is fun! \";}}trait message2 {public function msg2() \n    {echo \"OOP reduces code duplication!\";}}class Welcome {use message1;}class Welcome2 {use message1, message2;}$obj = new Welcome();$obj->msg1();echo \"<br>\";$obj2 = \n    new Welcome2();$obj2->msg1();$obj2->msg2();?>"
                ]
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/php/php_oop_static_methods.asp",
        "cours": {
            "titre": "PHPOOP - Static Methods",
            "description": "",
            "lien": "https://www.w3schools.com/php/php_oop_static_methods.asp",
            "contenus": {
                "paragraphs": [
                    "Static methods can be called directly - without creating an instance of the \nclass first.",
                    "Static methods are declared with thestatickeyword:",
                    "To access a static method use the class name, double colon (::), and the \nmethod name:",
                    "Let's look at an example:",
                    "Here, we declare a static method: welcome(). Then, we call the static method \nby using the class name, double colon (::), and the method name (without \ncreating an instance of the class first).",
                    "A class can have both static and non-static methods. A static method can be \naccessed from a method in the same class using theselfkeyword and double colon (::):",
                    "Static methods can also be called from methods in other classes. To do this, \nthe static method should bepublic:",
                    "To call a static method from a child class, use theparentkeyword inside the child class. Here, the static method can bepublicorprotected."
                ],
                "lists": [],
                "examples": [
                    "<?phpclassClassName{public static functionstaticMethod() {echo \"Hello World!\";}}?>",
                    "ClassName::staticMethod();",
                    "<?phpclass \n    greeting {public static function \n    welcome() {echo \"Hello World!\";}}// Call static methodgreeting::welcome();?>",
                    "<?phpclass greeting {public static function welcome() {echo \"Hello World!\";}public function __construct() \n    {self::welcome();}}new \n    greeting();?>",
                    "<?phpclass \n    A {public static function \n    welcome() {echo \"Hello World!\";}}class \n    B {public function \n    message() {A::welcome();}}$obj = new B();echo $obj -> \n    message();?>",
                    "<?phpclass domain {protected static function \n    getWebsiteName() {return \"W3Schools.com\";}}class domainW3 extends domain {public $websiteName;public function __construct() {$this->websiteName = \n    parent::getWebsiteName();}}$domainW3 = new domainW3;echo $domainW3 -> websiteName;?>"
                ]
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/php/php_oop_static_properties.asp",
        "cours": {
            "titre": "PHPOOP - Static Properties",
            "description": "",
            "lien": "https://www.w3schools.com/php/php_oop_static_properties.asp",
            "contenus": {
                "paragraphs": [
                    "Static properties can be called directly - without creating an instance of a \nclass.",
                    "Static properties are declared with thestatickeyword:",
                    "To access a static property use the class name, double colon (::), and the \nproperty name:",
                    "Let's look at an example:",
                    "Here, we declare a static property: $value. Then, we echo the value of the static \nproperty \nby using the class name, double colon (::), and the property name (without creating a class \nfirst).",
                    "A class can have both static and non-static properties. A static property can be \naccessed from a method in the same class using theselfkeyword and double colon (::):",
                    "To call a static property from a child class, use theparentkeyword inside the child class:"
                ],
                "lists": [],
                "examples": [
                    "<?phpclass ClassName {public static $staticProp = \"W3Schools\";}?>",
                    "ClassName::$staticProp;",
                    "<?phpclass \n    pi {public static $value = 3.14159;}// Get static propertyecho pi::$value;?>",
                    "<?phpclass \n    pi {public static $value=3.14159;public function \n    staticValue() {return self::$value;}}$pi = new pi();echo $pi->staticValue();?>",
                    "<?phpclass \n    pi {public static $value=3.14159;}class x extends pi {public function xStatic() {return \n    parent::$value;}}// Get value of static property \n    directly via child classecho x::$value;// or get value of static property via xStatic() \n    method$x = new x();echo $x->xStatic();?>"
                ]
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/php/php_namespaces.asp",
        "cours": {
            "titre": "PHPNamespaces",
            "description": "",
            "lien": "https://www.w3schools.com/php/php_namespaces.asp",
            "contenus": {
                "paragraphs": [
                    "Namespaces are qualifiers that solve two different problems:",
                    "For example, you may have a set of classes which describe an HTML table, such as Table, Row and\nCell while also having another set of classes to describe furniture, such as Table,\nChair and Bed. Namespaces can be used to organize the classes into two different\ngroups while also preventing the two classes Table and Table from being mixed up.",
                    "Namespaces are declared at the beginning of a file using thenamespacekeyword:",
                    "Declare a namespace called Html:",
                    "Note:Anamespacedeclaration must be the first thing in the PHP file. The following code\nwould be invalid:",
                    "Constants, classes and functions declared in this file will belong to theHtmlnamespace:",
                    "Create a Table class in the Html namespace:",
                    "For further organization, it is possible to have nested namespaces:",
                    "Declare a namespace called Html inside a namespace called Code:",
                    "Any code that follows anamespacedeclaration is operating inside the namespace, so\nclasses that belong to the namespace can be instantiated without any qualifiers. To access\nclasses from outside a namespace, the class needs to have the namespace attached\nto it.",
                    "Use classes from the Html namespace:",
                    "When many classes from the same namespace are being used at the same time, it is\neasier to use thenamespacekeyword:",
                    "Use classes from the Html namespace without the need for the Html\\qualifier:",
                    "It can be useful to give a namespace or class an alias to make it easier to write. This is\ndone with theusekeyword:",
                    "Give a namespace an alias:",
                    "Give a class an alias:"
                ],
                "lists": [
                    [
                        "They allow for better organization by grouping classes that work together to perform\na task",
                        "They allow the same name to be used for more than one class"
                    ]
                ],
                "examples": [
                    "<?phpnamespace Html;?>",
                    "<?phpecho \"Hello World!\";namespace Html;...?>",
                    "<?phpnamespace Html;class Table {public $title = \"\";public \n    $numRows = 0;public function message() {echo \"<p>Table \n    '{$this->title}' has {$this->numRows} rows.</p>\";}}$table = new \n    Table();$table->title = \"My table\";$table->numRows = 5;?><!DOCTYPE html><html><body><?php$table->message();?></body></html>",
                    "<?phpnamespace Code\\Html;?>",
                    "<?php$table = new Html\\Table();$row = new Html\\Row();?>",
                    "<?phpnamespace Html;$table = new Table();$row = new Row();?>",
                    "<?phpuse Html as H;$table = new H\\Table();?>",
                    "<?phpuse Html\\Table as \n    T;$table = new T();?>"
                ]
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/php/php_iterables.asp",
        "cours": {
            "titre": "PHP Iterables",
            "description": "",
            "lien": "https://www.w3schools.com/php/php_iterables.asp",
            "contenus": {
                "paragraphs": [
                    "An iterable is any value which can be looped through with aforeach()loop.",
                    "Theiterablepseudo-type was introduced in PHP 7.1, and it can be used as a data type for function arguments and function\nreturn values.",
                    "Theiterablekeyword can be used as a data type of a function argument or as the return\ntype of a function:",
                    "Use an iterable function argument:",
                    "Return an iterable:",
                    "Arrays",
                    "All arrays are iterables, so any array can be used as an argument of a function that requires an iterable.",
                    "Iterators",
                    "Any object that implements theIteratorinterface can be used as an argument of a function\nthat requires an iterable.",
                    "An iterator contains a list of items and provides methods to loop through them. It keeps a\npointer to one of the elements in the list. Each item in the list should have a key which can\nbe used to find the item.",
                    "An iterator must have these methods:",
                    "Implement the Iterator interface and use it as an iterable:"
                ],
                "lists": [
                    [
                        "current()- Returns the element that the pointer is currently pointing to. It can be any\ndata type",
                        "key()Returns the key associated with the current element in the list. It can only be\nan integer, float, boolean or string",
                        "next()Moves the pointer to the next element in the list",
                        "rewind()Moves the pointer to the first element in the list",
                        "valid()If the internal pointer is not pointing to any element (for example, if next()\nwas called at the end of the list), this should return false. It returns true in any\nother case"
                    ]
                ],
                "examples": [
                    "<?phpfunction printIterable(iterable $myIterable) {foreach($myIterable as $item) {echo $item;}}$arr = [\"a\", \n  \"b\", \"c\"];printIterable($arr);?>",
                    "<?phpfunction getIterable():iterable {return [\"a\", \"b\", \"c\"];}$myIterable = getIterable();foreach($myIterable as $item) {echo $item;}?>",
                    "<?php// Create an Iteratorclass MyIterator implements Iterator {private $items = [];private $pointer = 0;public \n  function __construct($items) {// array_values() makes \n  sure that the keys are numbers$this->items = \n  array_values($items);}public function current() {return $this->items[$this->pointer];}public function \n  key() {return $this->pointer;}public function next() {$this->pointer++;}public function rewind() {$this->pointer = \n  0;}public function valid() {// count() indicates how many items are in the listreturn $this->pointer < count($this->items);}}// A \n  function that uses iterablesfunction printIterable(iterable $myIterable) {foreach($myIterable as $item) {echo $item;}}// Use the iterator as an iterable$iterator = new MyIterator([\"a\", \"b\", \"c\"]);printIterable($iterator);?>"
                ]
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/php/php_mysql_intro.asp",
        "cours": {
            "titre": "PHPMySQL Database",
            "description": "",
            "lien": "https://www.w3schools.com/php/php_mysql_intro.asp",
            "contenus": {
                "paragraphs": [
                    "With PHP, you can connect to and manipulate databases.",
                    "MySQL is the most popular database system used with PHP.",
                    "The data in a MySQL database are stored in tables. A table is a collection of related data, and it consists of columns \nand rows.",
                    "Databases are useful for storing information categorically. A company may \nhave a database with the following tables:",
                    "A query is a question or a request.",
                    "We can query a database for specific information and have a \nrecordset returned.",
                    "Look at the following query (using standard SQL):",
                    "The query above selects all the data in the \"LastName\" column from the \"Employees\" \ntable.",
                    "To learn more about SQL, please visit ourSQL \ntutorial.",
                    "If you don't have a PHP server with a MySQL Database, you can download it \nfor free here:http://www.mysql.com",
                    "MySQL is the de-facto standard database system for web sites \nwith HUGE volumes of both data and end-users (like Facebook, Twitter, \nand Wikipedia).",
                    "Another great thing about MySQL is that it can be scaled down to support \nembedded database applications.",
                    "Look athttp://www.mysql.com/customers/for an overview of companies using MySQL."
                ],
                "lists": [
                    [
                        "MySQL is a database system used on the web",
                        "MySQL is a database system that runs on a server",
                        "MySQL is ideal for both small and large applications",
                        "MySQL is very fast, reliable, and easy to use",
                        "MySQL uses standard SQL",
                        "MySQL compiles on a number of platforms",
                        "MySQL is free to download and use",
                        "MySQL is developed, distributed, and supported by Oracle Corporation",
                        "MySQL is named after co-founder Monty Widenius's daughter: My"
                    ],
                    [
                        "Employees",
                        "Products",
                        "Customers",
                        "Orders"
                    ],
                    [
                        "PHP combined with MySQL are cross-platform (you can develop in \n  Windows and serve on a Unix platform)"
                    ]
                ],
                "examples": [
                    "SELECT LastName FROM Employees"
                ]
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/php/php_mysql_connect.asp",
        "cours": {
            "titre": "PHPConnect to MySQL",
            "description": "",
            "lien": "https://www.w3schools.com/php/php_mysql_connect.asp",
            "contenus": {
                "paragraphs": [
                    "PHP 5 and later can work with a MySQL database using:",
                    "Earlier versions of PHP used the MySQL extension. However, this \nextension was deprecated in 2012.",
                    "If you need a short answer, it would be \"Whatever you like\".",
                    "Both MySQLi and PDO have their advantages:",
                    "PDO will work on 12 different database systems, whereas MySQLi will only \nwork with MySQL databases.",
                    "So, if you have to switch your project \nto use another database, PDO makes the process easy. You only have \nto change the connection string and a few queries. With MySQLi, you will need \nto rewrite the entire code - queries included.",
                    "Both are object-oriented, but MySQLi also offers a procedural API.",
                    "Both support Prepared Statements. Prepared Statements protect \nfrom SQL injection, and are very important for web application security.",
                    "In this, and in the following chapters we demonstrate three ways of working \nwith PHP and MySQL:",
                    "For Linux and Windows: The MySQLi extension is automatically installed in \nmost cases, when php5 mysql package is installed.",
                    "For installation details, go to:http://php.net/manual/en/mysqli.installation.php",
                    "For installation details, go to:http://php.net/manual/en/pdo.installation.php",
                    "Before we can access data in the MySQL database, we need to be able to connect to \nthe server:",
                    "Note on the object-oriented example above:",
                    "$connect_error was \nbroken until PHP 5.2.9 and 5.3.0. If you need to ensure compatibility with PHP \nversions prior to 5.2.9 and 5.3.0, use the following code instead:// Check connectionif (mysqli_connect_error()) {die(\"Database connection failed: \" . mysqli_connect_error());}",
                    "Note:In the PDO example above we have alsospecified a database (myDB). PDO require a valid database \nto connect to. If no database is specified, an exception is thrown.",
                    "Tip:A great benefit of PDO is that it \nhas an exception class to handle any problems that may \noccur in our database queries. If an exception is thrown within the try{ } block, \nthe script stops executing and flows directly to the first catch(){ } block.",
                    "The connection will be closed automatically when the script ends. To close the \nconnection before, use the following:"
                ],
                "lists": [
                    [
                        "MySQLi extension(the \"i\" stands for improved)",
                        "PDO (PHP Data Objects)"
                    ],
                    [
                        "MySQLi (object-oriented)",
                        "MySQLi (procedural)",
                        "PDO"
                    ]
                ],
                "examples": [
                    "<?php$servername = \"localhost\";$username = \"username\";$password = \"password\";// Create connection$conn = new mysqli($servername, $username, $password);// Check connectionif ($conn->connect_error) {die(\"Connection failed: \" . $conn->connect_error);}echo \"Connected successfully\";?>",
                    "<?php$servername = \"localhost\";$username = \"username\";$password = \"password\";// Create connection$conn = mysqli_connect($servername, $username, $password);// Check connectionif (!$conn) {die(\"Connection failed: \" . mysqli_connect_error());}echo \"Connected successfully\";?>",
                    "<?php$servername = \"localhost\";$username = \"username\";$password = \"password\";try {$conn = new PDO(\"mysql:host=$servername;dbname=myDB\", $username, $password);// set the PDO error mode to exception$conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);echo \"Connected successfully\";} catch(PDOException $e) {echo \"Connection failed: \" . $e->getMessage();}?>",
                    "$conn->close();",
                    "mysqli_close($conn);",
                    "$conn = null;"
                ]
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/php/php_mysql_create.asp",
        "cours": {
            "titre": "PHPCreate a MySQL Database",
            "description": "",
            "lien": "https://www.w3schools.com/php/php_mysql_create.asp",
            "contenus": {
                "paragraphs": [
                    "A database consists of one or more tables.",
                    "You will need special CREATE privileges to create or to delete a MySQL \ndatabase.",
                    "The CREATE DATABASE statement is used to create a database in MySQL.",
                    "The following examples create a database named \"myDB\":",
                    "Note:When you create a new database, you must only specify \nthe first three arguments to the mysqli object (servername, username and \npassword).Tip:If you have to use a specific port,\nadd an empty string for the database-name argument, like this: new mysqli(\"localhost\", \n\"username\", \"password\", \"\", port)",
                    "Note:The following PDO example create a database named \"myDBPDO\":",
                    "Tip:A great benefit of PDO is that it has exception class to handle any problems that may \noccur in our database queries. If an exception is thrown within the try{ } block, \nthe script stops executing and flows directly to the first catch(){ } block. In the catch block above we echo the SQL statement and \nthe generated error message."
                ],
                "lists": [],
                "examples": [
                    "<?php$servername = \"localhost\";$username = \"username\";$password = \"password\";// Create connection$conn = new mysqli($servername, $username, $password);// Check connectionif ($conn->connect_error) {die(\"Connection failed: \" . $conn->connect_error);}// Create database$sql = \"CREATE DATABASE myDB\";if ($conn->query($sql) === TRUE) {echo \"Database created successfully\";} else {echo \"Error creating database: \" . $conn->error;}$conn->close();?>",
                    "<?php$servername = \"localhost\";$username = \"username\";$password = \"password\";// Create connection$conn = mysqli_connect($servername, $username, $password);// Check connectionif (!$conn) {die(\"Connection failed: \" . mysqli_connect_error());}// Create database$sql = \"CREATE DATABASE myDB\";if (mysqli_query($conn, $sql)) {echo \"Database created successfully\";} else {echo \"Error creating database: \" . mysqli_error($conn);}mysqli_close($conn);?>",
                    "<?php$servername = \"localhost\";$username = \"username\";$password = \"password\";try {$conn = new PDO(\"mysql:host=$servername\", $username, $password);// set the PDO error mode to exception$conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);$sql = \"CREATE DATABASE myDBPDO\";// use exec() because no results are returned$conn->exec($sql);echo \"Database created successfully<br>\";} catch(PDOException $e) \n  {echo $sql . \"<br>\" . $e->getMessage();}$conn = null;?>"
                ]
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/php/php_mysql_create_table.asp",
        "cours": {
            "titre": "PHPMySQL Create Table",
            "description": "",
            "lien": "https://www.w3schools.com/php/php_mysql_create_table.asp",
            "contenus": {
                "paragraphs": [
                    "A database table has its own unique name and consists of \ncolumns and rows.",
                    "The CREATE TABLE statement is used to create a table in MySQL.",
                    "We will create a table named \"MyGuests\", with \nfive columns: \"id\", \"firstname\", \"lastname\", \"email\" and \"reg_date\":",
                    "Notes on the table above:",
                    "The data type specifies what type of data the column can hold. For a complete \nreference of all the available data types, go to ourData Types reference.",
                    "After the data type, you can specify other optional attributes for each \ncolumn:",
                    "Each table should have a primary key column (in this case: the \"id\" column). \nIts value must be unique for each record in the table.",
                    "The following examples shows how to create the table in PHP:"
                ],
                "lists": [
                    [
                        "NOT NULL - Each row must contain a value for that column, null values are not allowed",
                        "DEFAULT value - Set a default value that is added when no other value is passed",
                        "UNSIGNED - Used for number types, limits the stored data to positive numbers and zero",
                        "AUTO INCREMENT - MySQL automatically increases the value of the field by 1 each time a new record is added",
                        "PRIMARY KEY - Used to uniquely identify the rows in a table. The column with PRIMARY KEY setting is often an ID number, and is often used with AUTO_INCREMENT"
                    ]
                ],
                "examples": [
                    "CREATE TABLE MyGuests (id INT(6) UNSIGNED AUTO_INCREMENT PRIMARY KEY,firstname VARCHAR(30) NOT NULL,lastname VARCHAR(30) NOT NULL,email VARCHAR(50),reg_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP)",
                    "<?php$servername = \"localhost\";$username = \"username\";$password = \"password\";$dbname = \"myDB\";// Create connection$conn = new mysqli($servername, $username, $password, $dbname);// Check connectionif ($conn->connect_error) {die(\"Connection failed: \" . $conn->connect_error);}// sql to create table$sql = \"CREATE TABLE MyGuests (id INT(6) UNSIGNED AUTO_INCREMENT PRIMARY KEY,firstname VARCHAR(30) NOT NULL,lastname VARCHAR(30) NOT NULL,email VARCHAR(50),reg_date TIMESTAMP \n  DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP)\";if ($conn->query($sql) === TRUE) {echo \"Table MyGuests created successfully\";} else {echo \"Error creating table: \" . $conn->error;}$conn->close();?>",
                    "<?php$servername = \"localhost\";$username = \"username\";$password = \"password\";$dbname = \"myDB\";// Create connection$conn = mysqli_connect($servername, $username, $password, $dbname);// Check connectionif (!$conn) {die(\"Connection failed: \" . mysqli_connect_error());}// sql to create table$sql = \"CREATE TABLE MyGuests (id INT(6) UNSIGNED AUTO_INCREMENT PRIMARY KEY,firstname VARCHAR(30) NOT NULL,lastname VARCHAR(30) NOT NULL,email VARCHAR(50),reg_date TIMESTAMP \n  DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP)\";if (mysqli_query($conn, $sql)) {echo \"Table MyGuests created successfully\";} else {echo \"Error creating table: \" . mysqli_error($conn);}mysqli_close($conn);?>",
                    "<?php$servername = \"localhost\";$username = \"username\";$password = \"password\";$dbname = \"myDBPDO\";try {$conn = new PDO(\"mysql:host=$servername;dbname=$dbname\", $username, $password);// set the PDO error mode to exception$conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);// sql to create table$sql = \"CREATE TABLE MyGuests (id INT(6) UNSIGNED AUTO_INCREMENT PRIMARY KEY,firstname VARCHAR(30) NOT NULL,lastname VARCHAR(30) NOT NULL,email VARCHAR(50),reg_date TIMESTAMP \n  DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP)\";// use exec() because no results are returned$conn->exec($sql);echo \"Table MyGuests created successfully\";} catch(PDOException $e) \n  {echo $sql . \"<br>\" . $e->getMessage();}$conn = null;?>"
                ]
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/php/php_mysql_insert.asp",
        "cours": {
            "titre": "PHPMySQL Insert Data",
            "description": "",
            "lien": "https://www.w3schools.com/php/php_mysql_insert.asp",
            "contenus": {
                "paragraphs": [
                    "After a database and a table have been created, we can start adding data in \nthem.",
                    "Here are some syntax rules to follow:",
                    "The INSERT INTO statement is used to add new records to a MySQL table:",
                    "To learn more about SQL, please visit ourSQL tutorial.",
                    "In the previous chapter we created an empty table named \"MyGuests\" with \nfive columns: \"id\", \"firstname\", \"lastname\", \"email\" and \"reg_date\". \nNow, let us fill the table with data.",
                    "Note:If a column is AUTO_INCREMENT (like the \"id\" column) or TIMESTAMP \nwith default update of current_timesamp \n(like the \"reg_date\" column), it is no need to be specified in \nthe SQL query; MySQL will automatically add the value.",
                    "The following examples add a new record to the \"MyGuests\" table:"
                ],
                "lists": [
                    [
                        "The SQL query must be quoted in PHP",
                        "String values inside the SQL query must be quoted",
                        "Numeric values must not be quoted",
                        "The word NULL must not be quoted"
                    ]
                ],
                "examples": [
                    "INSERT INTO table_name (column1, column2, column3,...)VALUES (value1, value2, value3,...)",
                    "<?php$servername = \"localhost\";$username = \"username\";$password = \"password\";$dbname = \"myDB\";// Create connection$conn = new mysqli($servername, $username, $password, $dbname);// Check connectionif ($conn->connect_error) {die(\"Connection failed: \" . $conn->connect_error);}$sql = \"INSERT INTO MyGuests (firstname, lastname, email)VALUES ('John', 'Doe', 'john@example.com')\";if ($conn->query($sql) === TRUE) {echo \"New record created successfully\";} else {echo \"Error: \" . $sql . \"<br>\" . $conn->error;}$conn->close();?>",
                    "<?php$servername = \"localhost\";$username = \"username\";$password = \"password\";$dbname = \"myDB\";// Create connection$conn = mysqli_connect($servername, $username, $password, $dbname);// Check connectionif (!$conn) {die(\"Connection failed: \" . mysqli_connect_error());}$sql = \"INSERT INTO MyGuests (firstname, lastname, email)VALUES ('John', 'Doe', 'john@example.com')\";if (mysqli_query($conn, $sql)) {echo \"New record created successfully\";} else {echo \"Error: \" . $sql . \"<br>\" . mysqli_error($conn);}mysqli_close($conn);?>",
                    "<?php$servername = \"localhost\";$username = \"username\";$password = \"password\";$dbname = \"myDBPDO\";try {$conn = new PDO(\"mysql:host=$servername;dbname=$dbname\", $username, $password);// set the PDO error mode to exception$conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);$sql = \"INSERT INTO MyGuests (firstname, lastname, email)VALUES ('John', 'Doe', 'john@example.com')\";// use exec() because no results are returned$conn->exec($sql);echo \"New record created successfully\";} catch(PDOException $e) \n  {echo $sql . \"<br>\" . $e->getMessage();}$conn = null;?>"
                ]
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/php/php_mysql_insert_lastid.asp",
        "cours": {
            "titre": "PHPMySQL Get Last Inserted ID",
            "description": "",
            "lien": "https://www.w3schools.com/php/php_mysql_insert_lastid.asp",
            "contenus": {
                "paragraphs": [
                    "If we perform an INSERT or UPDATE on a table with an AUTO_INCREMENT field, we can \nget the ID of the last inserted/updated record immediately.",
                    "In the table \"MyGuests\", the \"id\" column is an AUTO_INCREMENT \nfield:",
                    "The following examples are equal to the examples from the previous page (PHP Insert Data Into \nMySQL), except that we have added one single line of code to retrieve the ID \nof the last inserted record. We also echo the last inserted ID:"
                ],
                "lists": [],
                "examples": [
                    "CREATE TABLE MyGuests (id INT(6) UNSIGNED AUTO_INCREMENT PRIMARY KEY,firstname VARCHAR(30) NOT NULL,lastname VARCHAR(30) NOT NULL,email VARCHAR(50),reg_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP)",
                    "<?php$servername = \"localhost\";$username = \"username\";$password = \"password\";$dbname = \"myDB\";// Create connection$conn = new mysqli($servername, $username, $password, $dbname);// Check connectionif ($conn->connect_error) {die(\"Connection failed: \" . $conn->connect_error);}$sql = \"INSERT INTO MyGuests (firstname, lastname, email)VALUES ('John', 'Doe', 'john@example.com')\";if ($conn->query($sql) === TRUE) {$last_id = $conn->insert_id;echo \"New record created successfully. Last inserted ID is: \" . $last_id;} else {echo \"Error: \" . $sql . \"<br>\" . $conn->error;}$conn->close();?>",
                    "<?php$servername = \"localhost\";$username = \"username\";$password = \"password\";$dbname = \"myDB\";// Create connection$conn = mysqli_connect($servername, $username, $password, $dbname);// Check connectionif (!$conn) {die(\"Connection failed: \" . mysqli_connect_error());}$sql = \"INSERT INTO MyGuests (firstname, lastname, email)VALUES ('John', 'Doe', 'john@example.com')\";if (mysqli_query($conn, $sql)) {$last_id = mysqli_insert_id($conn);echo \"New record created successfully. Last inserted ID is: \" . $last_id;} else {echo \"Error: \" . $sql . \"<br>\" . mysqli_error($conn);}mysqli_close($conn);?>",
                    "<?php$servername = \"localhost\";$username = \"username\";$password = \"password\";$dbname = \"myDBPDO\";try {$conn = new PDO(\"mysql:host=$servername;dbname=$dbname\", $username, $password);// set the PDO error mode to exception$conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);$sql = \"INSERT INTO MyGuests (firstname, lastname, email)VALUES ('John', 'Doe', 'john@example.com')\";// use exec() because no results are returned$conn->exec($sql);$last_id = $conn->lastInsertId();echo \"New record created successfully. Last inserted ID is: \" . $last_id;} catch(PDOException $e) {echo $sql . \"<br>\" . $e->getMessage();}$conn = null;?>"
                ]
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/php/php_mysql_insert_multiple.asp",
        "cours": {
            "titre": "PHPMySQL Insert Multiple Records",
            "description": "",
            "lien": "https://www.w3schools.com/php/php_mysql_insert_multiple.asp",
            "contenus": {
                "paragraphs": [
                    "Multiple SQL statements must be executed with themysqli_multi_query()function.",
                    "The following examples add three new records to the \"MyGuests\" table:",
                    "Note that each SQL statement must be separated by a semicolon.",
                    "The PDO way is a little bit different:"
                ],
                "lists": [],
                "examples": [
                    "<?php$servername = \"localhost\";$username = \"username\";$password = \"password\";$dbname = \"myDB\";// Create connection$conn = new mysqli($servername, $username, $password, $dbname);// Check connectionif ($conn->connect_error) {die(\"Connection failed: \" . $conn->connect_error);}$sql = \"INSERT INTO MyGuests (firstname, lastname, email)VALUES ('John', 'Doe', 'john@example.com');\";$sql .= \"INSERT INTO MyGuests (firstname, lastname, email)VALUES ('Mary', 'Moe', 'mary@example.com');\";$sql .= \"INSERT INTO MyGuests (firstname, lastname, email)VALUES ('Julie', 'Dooley', 'julie@example.com')\";if ($conn->multi_query($sql) === TRUE) {echo \"New records created successfully\";} else {echo \"Error: \" . $sql . \"<br>\" . $conn->error;}$conn->close();?>",
                    "<?php$servername = \"localhost\";$username = \"username\";$password = \"password\";$dbname = \"myDB\";// Create connection$conn = mysqli_connect($servername, $username, $password, $dbname);// Check connectionif (!$conn) {die(\"Connection failed: \" . mysqli_connect_error());}$sql = \"INSERT INTO MyGuests (firstname, lastname, email)VALUES ('John', 'Doe', 'john@example.com');\";$sql .= \"INSERT INTO MyGuests (firstname, lastname, email)VALUES ('Mary', 'Moe', 'mary@example.com');\";$sql .= \"INSERT INTO MyGuests (firstname, lastname, email)VALUES ('Julie', 'Dooley', 'julie@example.com')\";if (mysqli_multi_query($conn, $sql)) {echo \"New records created successfully\";} else {echo \"Error: \" . $sql . \"<br>\" . mysqli_error($conn);}mysqli_close($conn);?>",
                    "<?php$servername = \"localhost\";$username = \"username\";$password = \"password\";$dbname = \"myDBPDO\";try {$conn = new PDO(\"mysql:host=$servername;dbname=$dbname\", $username, $password);// set the PDO error mode to exception$conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);// begin the transaction$conn->beginTransaction();// our SQL statements$conn->exec(\"INSERT INTO MyGuests (firstname, lastname, email)VALUES ('John', 'Doe', 'john@example.com')\");$conn->exec(\"INSERT INTO MyGuests (firstname, lastname, email)VALUES ('Mary', 'Moe', 'mary@example.com')\");$conn->exec(\"INSERT INTO MyGuests (firstname, lastname, email)VALUES ('Julie', 'Dooley', 'julie@example.com')\");// commit the transaction$conn->commit();echo \"New records created successfully\";} catch(PDOException $e) {// roll back the transaction if something failed$conn->rollback();echo \"Error: \" . $e->getMessage();}$conn = null;?>"
                ]
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/php/php_mysql_prepared_statements.asp",
        "cours": {
            "titre": "PHPMySQL Prepared Statements",
            "description": "",
            "lien": "https://www.w3schools.com/php/php_mysql_prepared_statements.asp",
            "contenus": {
                "paragraphs": [
                    "Prepared statements are very useful against SQL injections.",
                    "A prepared statement is a feature used to execute the same (or similar) SQL \nstatements repeatedly with high efficiency.",
                    "Prepared statements basically work like this:",
                    "Compared to executing SQL statements directly, prepared statements have three main advantages:",
                    "The following example uses prepared statements and bound parameters in MySQLi:",
                    "Code lines to explain from the example above:",
                    "In our SQL, we insert a question mark (?) where we want to substitute in an integer, string, double or blob \nvalue.",
                    "Then, have a look at the bind_param() function:",
                    "This function binds the parameters to the SQL query and tells the \ndatabase what the parameters are. The \"sss\" argument lists the \ntypes of data that the parameters are. The s character tells mysql that the parameter is a string.",
                    "The argument may be one of four types:",
                    "We must have one of these for each parameter.",
                    "By telling mysql what type of data to expect, we minimize the risk of SQL injections.",
                    "Note:If we want to insert any data from external sources \n(like user input), it is very important that the data is sanitized and validated.",
                    "The following example uses prepared statements and bound parameters in PDO:"
                ],
                "lists": [
                    [
                        "Prepare: An SQL statement template is created and sent to the database. Certain values are left unspecified, called parameters (labeled \"?\"). Example: INSERT INTO MyGuests VALUES(?, ?, ?)",
                        "The database parses, compiles, and performs query optimization on the SQL statement template, and stores the result without executing it",
                        "Execute: At a later time, the application binds the values to the parameters, and the database executes the statement. The application may execute the statement as many times as it wants with different values"
                    ],
                    [
                        "Prepared statements reduce parsing time as the preparation on the query is done only once (although the statement is executed multiple times)",
                        "Bound parameters minimize bandwidth to the server as you need send only the parameters each time, and not the whole query",
                        "Prepared statements are very useful against SQL injections, because parameter values, which are transmitted later using a different protocol, need not be correctly escaped. If the original statement template is not derived from external input, SQL injection cannot occur."
                    ],
                    [
                        "i - integer",
                        "d - double",
                        "s - \nstring",
                        "b - BLOB"
                    ]
                ],
                "examples": [
                    "<?php$servername = \"localhost\";$username = \"username\";$password = \"password\";$dbname = \"myDB\";// Create connection$conn = new mysqli($servername, $username, $password, $dbname);// Check connectionif ($conn->connect_error) {die(\"Connection failed: \" . $conn->connect_error);}// prepare and bind$stmt = $conn->prepare(\"INSERT INTO MyGuests (firstname, lastname, email) VALUES (?, ?, ?)\");$stmt->bind_param(\"sss\", $firstname, $lastname, $email);// set parameters and execute$firstname = \"John\";$lastname = \"Doe\";$email = \"john@example.com\";$stmt->execute();$firstname = \"Mary\";$lastname = \"Moe\";$email = \"mary@example.com\";$stmt->execute();$firstname = \"Julie\";$lastname = \"Dooley\";$email = \"julie@example.com\";$stmt->execute();echo \"New records created successfully\";$stmt->close();$conn->close();?>",
                    "\"INSERT INTO MyGuests (firstname, lastname, email) VALUES (?, ?, ?)\"",
                    "$stmt->bind_param(\"sss\", $firstname, $lastname, $email);",
                    "<?php$servername = \"localhost\";$username = \"username\";$password = \"password\";$dbname = \"myDBPDO\";try {$conn = new PDO(\"mysql:host=$servername;dbname=$dbname\", $username, $password);// set the PDO error mode to exception$conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);// prepare sql and bind parameters$stmt = $conn->prepare(\"INSERT INTO MyGuests (firstname, lastname, email)VALUES (:firstname, :lastname, :email)\");$stmt->bindParam(':firstname', $firstname);$stmt->bindParam(':lastname', $lastname);$stmt->bindParam(':email', $email);// insert a row$firstname = \"John\";$lastname = \"Doe\";$email = \"john@example.com\";$stmt->execute();// insert another row$firstname = \"Mary\";$lastname = \"Moe\";$email = \"mary@example.com\";$stmt->execute();// insert another row$firstname = \"Julie\";$lastname = \"Dooley\";$email = \"julie@example.com\";$stmt->execute();echo \"New records created successfully\";} catch(PDOException $e) \n  {echo \"Error: \" . $e->getMessage();}$conn = null;?>"
                ]
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/php/php_mysql_select.asp",
        "cours": {
            "titre": "PHPMySQL Select Data",
            "description": "",
            "lien": "https://www.w3schools.com/php/php_mysql_select.asp",
            "contenus": {
                "paragraphs": [
                    "The SELECT statement is used to select data from one or more tables:",
                    "or we can use the * character to select ALL columns from a table:",
                    "To learn more about SQL, please visit ourSQL tutorial.",
                    "The following example selects the id, firstname and lastname columns from the MyGuests \ntable and displays it on the page:",
                    "Code lines to explain from the example above:",
                    "First, we set up an SQL query that selects the id, firstname and lastname columns from the MyGuests \ntable. The next line of code runs the query and puts the resulting data into a \nvariable called $result.",
                    "Then, the functionnum_rows()checks if there are more than zero \nrows returned.",
                    "If there are more than zero rows returned, the \nfunctionfetch_assoc()puts all the results into an associative array that we can loop \nthrough. Thewhile()loop loops through the result set and outputs the data from \nthe id, firstname and lastname columns.",
                    "The following example shows the same as the example above, in the MySQLi \nprocedural way:",
                    "You can also put the result in an HTML table:",
                    "The following example uses prepared statements.",
                    "It selects the id, firstname and lastname columns from the MyGuests table and \ndisplays it in an HTML table:"
                ],
                "lists": [],
                "examples": [
                    "SELECT column_name(s)\nFROM table_name",
                    "SELECT *\nFROM table_name",
                    "<?php$servername = \"localhost\";$username = \"username\";$password = \"password\";$dbname = \"myDB\";// Create connection$conn = new mysqli($servername, $username, $password, $dbname);// Check connectionif ($conn->connect_error) {die(\"Connection failed: \" . $conn->connect_error);}$sql = \"SELECT id, firstname, lastname FROM MyGuests\";$result = $conn->query($sql);if ($result->num_rows > 0) {// output data of each rowwhile($row = $result->fetch_assoc()) {echo \"id: \" . $row[\"id\"]. \" - Name: \" . $row[\"firstname\"]. \" \" . $row[\"lastname\"]. \"<br>\";}} else {echo \"0 results\";}$conn->close();?>",
                    "<?php$servername = \"localhost\";$username = \"username\";$password = \"password\";$dbname = \"myDB\";// Create connection$conn = mysqli_connect($servername, $username, $password, $dbname);// Check connectionif (!$conn) {die(\"Connection failed: \" . mysqli_connect_error());}$sql = \"SELECT id, firstname, lastname FROM MyGuests\";$result = mysqli_query($conn, $sql);if (mysqli_num_rows($result) > 0) {// output data of each rowwhile($row = mysqli_fetch_assoc($result)) {echo \"id: \" . $row[\"id\"]. \" - Name: \" . $row[\"firstname\"]. \" \" . $row[\"lastname\"]. \"<br>\";}} else {echo \"0 results\";}mysqli_close($conn);?>",
                    "<?php$servername = \"localhost\";$username = \"username\";$password = \"password\";$dbname = \"myDB\";// Create connection$conn = new mysqli($servername, $username, $password, $dbname);// Check connectionif ($conn->connect_error) {die(\"Connection failed: \" . $conn->connect_error);}$sql = \"SELECT id, firstname, lastname FROM MyGuests\";$result = $conn->query($sql);if ($result->num_rows > 0) {echo \"<table><tr><th>ID</th><th>Name</th></tr>\";// output data of each rowwhile($row = $result->fetch_assoc()) {echo \"<tr><td>\".$row[\"id\"].\"</td><td>\".$row[\"firstname\"].\" \".$row[\"lastname\"].\"</td></tr>\";}echo \"</table>\";} else {echo \"0 results\";}$conn->close();?>",
                    "<?phpecho \"<table style='border: solid 1px black;'>\";echo \"<tr><th>Id</th><th>Firstname</th><th>Lastname</th></tr>\";class TableRows extends RecursiveIteratorIterator {function __construct($it) {parent::__construct($it, self::LEAVES_ONLY);}function current() {return \"<td style='width:150px;border:1px solid black;'>\" . parent::current(). \"</td>\";}function beginChildren() {echo \"<tr>\";}function endChildren() {echo \"</tr>\" . \"\\n\";}}$servername = \"localhost\";$username = \"username\";$password = \"password\";$dbname = \"myDBPDO\";try {$conn = new PDO(\"mysql:host=$servername;dbname=$dbname\", $username, $password);$conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);$stmt = $conn->prepare(\"SELECT id, firstname, lastname FROM MyGuests\");$stmt->execute();// set the resulting array to associative$result = $stmt->setFetchMode(PDO::FETCH_ASSOC);foreach(new TableRows(new RecursiveArrayIterator($stmt->fetchAll())) as $k=>$v) {echo $v;}} catch(PDOException $e) {echo \"Error: \" . $e->getMessage();}$conn = null;echo \"</table>\";?>"
                ]
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/php/php_mysql_select_where.asp",
        "cours": {
            "titre": "PHPMySQL Use The WHERE Clause",
            "description": "",
            "lien": "https://www.w3schools.com/php/php_mysql_select_where.asp",
            "contenus": {
                "paragraphs": [
                    "The WHERE clause is used to filter records.",
                    "The WHERE clause is used to extract only those records that fulfill a \nspecified condition.",
                    "To learn more about SQL, please visit ourSQL tutorial.",
                    "The following example selects the id, firstname and lastname columns from the MyGuests \ntable where the lastname is \"Doe\", and displays it on the page:",
                    "Code lines to explain from the example above:",
                    "First, we set up the SQL query that selects the id, firstname and lastname columns from the MyGuests \ntable where the lastname is \"Doe\". The next line of code runs the query and puts the resulting data into a \nvariable called $result.",
                    "Then, thefunction num_rows()checks if there are more than zero \nrows returned.",
                    "If there are more than zero rows returned, the \nfunctionfetch_assoc()puts all the results into an associative array that we can loop \nthrough. Thewhile()loop loops through the result set and outputs the data from \nthe id, firstname and lastname columns.",
                    "The following example shows the same as the example above, in the MySQLi procedural way:",
                    "You can also put the result in an HTML table:",
                    "The following example uses prepared statements.",
                    "It selects the id, firstname and lastname columns from the MyGuests table \nwhere the lastname is \"Doe\", and \ndisplays it in an HTML table:"
                ],
                "lists": [],
                "examples": [
                    "SELECT column_name(s)\nFROM table_name WHERE column_name operator value",
                    "<?php$servername = \"localhost\";$username = \"username\";$password = \"password\";$dbname = \"myDB\";// Create connection$conn = new mysqli($servername, $username, $password, $dbname);// Check connectionif ($conn->connect_error) {die(\"Connection failed: \" . $conn->connect_error);}$sql = \"SELECT id, firstname, lastname FROM MyGuests WHERE \n  lastname='Doe'\";$result = $conn->query($sql);if ($result->num_rows > 0) {// output data of each rowwhile($row = $result->fetch_assoc()) {echo \"id: \" . $row[\"id\"]. \" - Name: \" . $row[\"firstname\"]. \" \" . $row[\"lastname\"]. \"<br>\";}} else {echo \"0 results\";}$conn->close();?>",
                    "<?php$servername = \"localhost\";$username = \"username\";$password = \"password\";$dbname = \"myDB\";// Create connection$conn = mysqli_connect($servername, $username, $password, $dbname);// Check connectionif (!$conn) {die(\"Connection failed: \" . mysqli_connect_error());}$sql = \"SELECT id, firstname, lastname FROM MyGuests \n  WHERE lastname='Doe'\";$result = mysqli_query($conn, $sql);if (mysqli_num_rows($result) > 0) {// output data of each rowwhile($row = mysqli_fetch_assoc($result)) {echo \"id: \" . $row[\"id\"]. \" - Name: \" . $row[\"firstname\"]. \" \" . $row[\"lastname\"]. \"<br>\";}} else {echo \"0 results\";}mysqli_close($conn);?>",
                    "<?php$servername = \"localhost\";$username = \"username\";$password = \"password\";$dbname = \"myDB\";// Create connection$conn = new mysqli($servername, $username, $password, $dbname);// Check connectionif ($conn->connect_error) {die(\"Connection failed: \" . $conn->connect_error);}$sql = \"SELECT id, firstname, lastname FROM MyGuests WHERE \n  lastname='Doe'\";$result = $conn->query($sql);if ($result->num_rows > 0) {echo \"<table><tr><th>ID</th><th>Name</th></tr>\";// output data of each rowwhile($row = $result->fetch_assoc()) {echo \"<tr><td>\".$row[\"id\"].\"</td><td>\".$row[\"firstname\"].\" \".$row[\"lastname\"].\"</td></tr>\";}echo \"</table>\";} else {echo \"0 results\";}$conn->close();?>",
                    "<?phpecho \"<table style='border: solid 1px black;'>\";echo \"<tr><th>Id</th><th>Firstname</th><th>Lastname</th></tr>\";class TableRows extends RecursiveIteratorIterator {function __construct($it) {parent::__construct($it, self::LEAVES_ONLY);}function current() {return \"<td style='width:150px;border:1px solid black;'>\" . parent::current(). \"</td>\";}function beginChildren() {echo \"<tr>\";}function endChildren() {echo \"</tr>\" . \"\\n\";}}$servername = \"localhost\";$username = \"username\";$password = \"password\";$dbname = \"myDBPDO\";try {$conn = new PDO(\"mysql:host=$servername;dbname=$dbname\", $username, $password);$conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);$stmt = $conn->prepare(\"SELECT id, firstname, lastname FROM MyGuests \n  WHERE lastname='Doe'\");$stmt->execute();// set the resulting array to associative$result = $stmt->setFetchMode(PDO::FETCH_ASSOC);foreach(new TableRows(new RecursiveArrayIterator($stmt->fetchAll())) as $k=>$v) {echo $v;}}catch(PDOException $e) {echo \"Error: \" . $e->getMessage();}$conn = null;echo \"</table>\";?>"
                ]
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/php/php_mysql_select_orderby.asp",
        "cours": {
            "titre": "PHPMySQL Use The ORDER BY Clause",
            "description": "",
            "lien": "https://www.w3schools.com/php/php_mysql_select_orderby.asp",
            "contenus": {
                "paragraphs": [
                    "The ORDER BY clause is used to sort the result-set in ascending or descending \norder.",
                    "The ORDER BY clause sorts the records in ascending order by default. To sort \nthe records in descending order, use the DESC keyword.",
                    "To learn more about SQL, please visit ourSQL tutorial.",
                    "The following example selects the id, firstname and lastname columns from the MyGuests \ntable. The records will be ordered by the lastname column:",
                    "Code lines to explain from the example above:",
                    "First, we set up the SQL query that selects the id, firstname and lastname columns from the MyGuests \ntable. The records will be ordered by the lastname column. The next line of code runs the query and puts the resulting data into a \nvariable called $result.",
                    "Then, thefunction num_rows()checks if there are more than zero \nrows returned.",
                    "If there are more than zero rows returned, the \nfunctionfetch_assoc()puts all the results into an associative array that we can loop \nthrough. Thewhile()loop loops through the result set and outputs the data from \nthe id, firstname and lastname columns.",
                    "The following example shows the same as the example above, in the MySQLi procedural way:",
                    "You can also put the result in an HTML table:",
                    "The following example uses prepared statements.",
                    "Here we select the id, firstname and lastname columns from the MyGuests table. \nThe records will be ordered by the lastname column, and it will be \ndisplayed in an HTML table:"
                ],
                "lists": [],
                "examples": [
                    "SELECT column_name(s)\nFROM table_name ORDER BY column_name(s) ASC|DESC",
                    "<?php$servername = \"localhost\";$username = \"username\";$password = \"password\";$dbname = \"myDB\";// Create connection$conn = new mysqli($servername, $username, $password, $dbname);// Check connectionif ($conn->connect_error) {die(\"Connection failed: \" . $conn->connect_error);}$sql = \"SELECT id, firstname, lastname FROM MyGuests ORDER BY lastname\";$result = $conn->query($sql);if ($result->num_rows > 0) {// output data of each rowwhile($row = $result->fetch_assoc()) {echo \"id: \" . $row[\"id\"]. \" - Name: \" . $row[\"firstname\"]. \" \" . $row[\"lastname\"]. \"<br>\";}} else {echo \"0 results\";}$conn->close();?>",
                    "<?php$servername = \"localhost\";$username = \"username\";$password = \"password\";$dbname = \"myDB\";// Create connection$conn = mysqli_connect($servername, $username, $password, $dbname);// Check connectionif (!$conn) {die(\"Connection failed: \" . mysqli_connect_error());}$sql = \"SELECT id, firstname, lastname FROM MyGuests \n  ORDER BY lastname\";$result = mysqli_query($conn, $sql);if (mysqli_num_rows($result) > 0) {// output data of each rowwhile($row = mysqli_fetch_assoc($result)) {echo \"id: \" . $row[\"id\"]. \" - Name: \" . $row[\"firstname\"]. \" \" . $row[\"lastname\"]. \"<br>\";}} else {echo \"0 results\";}mysqli_close($conn);?>",
                    "<?php$servername = \"localhost\";$username = \"username\";$password = \"password\";$dbname = \"myDB\";// Create connection$conn = new mysqli($servername, $username, $password, $dbname);// Check connectionif ($conn->connect_error) {die(\"Connection failed: \" . $conn->connect_error);}$sql = \"SELECT id, firstname, lastname FROM MyGuests ORDER BY lastname\";$result = $conn->query($sql);if ($result->num_rows > 0) {echo \"<table><tr><th>ID</th><th>Name</th></tr>\";// output data of each rowwhile($row = $result->fetch_assoc()) {echo \"<tr><td>\".$row[\"id\"].\"</td><td>\".$row[\"firstname\"].\" \".$row[\"lastname\"].\"</td></tr>\";}echo \"</table>\";} else {echo \"0 results\";}$conn->close();?>",
                    "<?phpecho \"<table style='border: solid 1px black;'>\";echo \"<tr><th>Id</th><th>Firstname</th><th>Lastname</th></tr>\";class TableRows extends RecursiveIteratorIterator {function __construct($it) {parent::__construct($it, self::LEAVES_ONLY);}function current() {return \"<td style='width:150px;border:1px solid black;'>\" . parent::current(). \"</td>\";}function beginChildren() {echo \"<tr>\";}function endChildren() {echo \"</tr>\" . \"\\n\";}}$servername = \"localhost\";$username = \"username\";$password = \"password\";$dbname = \"myDBPDO\";try {$conn = new PDO(\"mysql:host=$servername;dbname=$dbname\", $username, $password);$conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);$stmt = $conn->prepare(\"SELECT id, firstname, lastname FROM MyGuests \n  ORDER BY lastname\");$stmt->execute();// set the resulting array to associative$result = $stmt->setFetchMode(PDO::FETCH_ASSOC);foreach(new TableRows(new RecursiveArrayIterator($stmt->fetchAll())) as $k=>$v) {echo $v;}} catch(PDOException $e) {echo \"Error: \" . $e->getMessage();}$conn = null;echo \"</table>\";?>"
                ]
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/php/php_mysql_delete.asp",
        "cours": {
            "titre": "PHPMySQL Delete Data",
            "description": "",
            "lien": "https://www.w3schools.com/php/php_mysql_delete.asp",
            "contenus": {
                "paragraphs": [
                    "The DELETE statement is used to delete records from a table:",
                    "Notice the WHERE clause in the DELETE syntax:The WHERE clause \nspecifies which record or records that should be deleted. If you omit the WHERE \nclause, all records will be deleted!",
                    "To learn more about SQL, please visit ourSQL tutorial.",
                    "Let's look at the \"MyGuests\" table:",
                    "The following examples delete the record with id=3 in the \"MyGuests\" table:",
                    "After the record is deleted, the table will look like this:"
                ],
                "lists": [],
                "examples": [
                    "DELETE FROM table_nameWHERE some_column = some_value",
                    "<?php$servername = \"localhost\";$username = \"username\";$password = \"password\";$dbname = \"myDB\";// Create connection$conn = new mysqli($servername, $username, $password, $dbname);// Check connectionif ($conn->connect_error) {die(\"Connection failed: \" . $conn->connect_error);}// sql to delete a record$sql = \"DELETE FROM MyGuests WHERE id=3\";if ($conn->query($sql) === TRUE) {echo \"Record deleted successfully\";} else {echo \"Error deleting record: \" . $conn->error;}$conn->close();?>",
                    "<?php$servername = \"localhost\";$username = \"username\";$password = \"password\";$dbname = \"myDB\";// Create connection$conn = mysqli_connect($servername, $username, $password, $dbname);// Check connectionif (!$conn) {die(\"Connection failed: \" . mysqli_connect_error());}// sql to delete a record$sql = \"DELETE FROM MyGuests WHERE id=3\";if (mysqli_query($conn, $sql)) {echo \"Record deleted successfully\";} else {echo \"Error deleting record: \" . mysqli_error($conn);}mysqli_close($conn);?>",
                    "<?php$servername = \"localhost\";$username = \"username\";$password = \"password\";$dbname = \"myDBPDO\";try {$conn = new PDO(\"mysql:host=$servername;dbname=$dbname\", $username, $password);// set the PDO error mode to exception$conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);// sql to delete a record$sql = \"DELETE FROM MyGuests WHERE id=3\";// use exec() because no results are returned$conn->exec($sql);echo \"Record deleted successfully\";} catch(PDOException $e) {echo $sql . \"<br>\" . $e->getMessage();}$conn = null;?>"
                ]
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/php/php_mysql_update.asp",
        "cours": {
            "titre": "PHPMySQL Update Data",
            "description": "",
            "lien": "https://www.w3schools.com/php/php_mysql_update.asp",
            "contenus": {
                "paragraphs": [
                    "The UPDATE statement is used to update existing records in a table:",
                    "Notice the WHERE clause in the UPDATE syntax:The WHERE clause \nspecifies which record or records that should be updated. If you omit the WHERE \nclause, all records will be updated!",
                    "To learn more about SQL, please visit ourSQL tutorial.",
                    "Let's look at the \"MyGuests\" table:",
                    "The following examples update the record with id=2 in the \"MyGuests\" table:",
                    "After the record is updated, the table will look like this:"
                ],
                "lists": [],
                "examples": [
                    "UPDATE table_nameSET column1=value, column2=value2,...WHERE some_column=some_value",
                    "<?php$servername = \"localhost\";$username = \"username\";$password = \"password\";$dbname = \"myDB\";// Create connection$conn = new mysqli($servername, $username, $password, $dbname);// Check connectionif ($conn->connect_error) {die(\"Connection failed: \" . $conn->connect_error);}$sql = \"UPDATE MyGuests SET lastname='Doe' WHERE id=2\";if ($conn->query($sql) === TRUE) {echo \"Record updated successfully\";} else {echo \"Error updating record: \" . $conn->error;}$conn->close();?>",
                    "<?php$servername = \"localhost\";$username = \"username\";$password = \"password\";$dbname = \"myDB\";// Create connection$conn = mysqli_connect($servername, $username, $password, $dbname);// Check connectionif (!$conn) {die(\"Connection failed: \" . mysqli_connect_error());}$sql = \"UPDATE MyGuests SET lastname='Doe' WHERE id=2\";if (mysqli_query($conn, $sql)) {echo \"Record updated successfully\";} else {echo \"Error updating record: \" . mysqli_error($conn);}mysqli_close($conn);?>",
                    "<?php$servername = \"localhost\";$username = \"username\";$password = \"password\";$dbname = \"myDBPDO\";try {$conn = new PDO(\"mysql:host=$servername;dbname=$dbname\", $username, $password);// set the PDO error mode to exception$conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);$sql = \"UPDATE MyGuests SET lastname='Doe' WHERE id=2\";// Prepare statement$stmt = $conn->prepare($sql);// execute the query$stmt->execute();// echo a message to say the UPDATE succeededecho $stmt->rowCount() . \" records UPDATED successfully\";} catch(PDOException $e) \n  {echo $sql . \"<br>\" . $e->getMessage();}$conn = null;?>"
                ]
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/php/php_mysql_select_limit.asp",
        "cours": {
            "titre": "PHPMySQL Limit Data Selections",
            "description": "",
            "lien": "https://www.w3schools.com/php/php_mysql_select_limit.asp",
            "contenus": {
                "paragraphs": [
                    "MySQL provides a LIMIT clause that is used to specify the number of records \nto return.",
                    "The LIMIT clause makes it easy to code multi page results or pagination with \nSQL, and is very useful on large tables. Returning a large number of records can \nimpact on performance.",
                    "Assume we wish to select all records from 1 - 30 (inclusive) from a table \ncalled \"Orders\". The SQL query would then look like this:",
                    "When the SQL query above is run, it will return the first 30 records.",
                    "What if we want to select records 16 - 25 (inclusive)?",
                    "Mysql also provides a way to handle this: by using OFFSET.",
                    "The SQL query below says \"return only 10 records, start on record 16 (OFFSET \n15)\":",
                    "You could also use a shorter syntax to achieve the same result:",
                    "Notice that the numbers are reversed when you use a comma."
                ],
                "lists": [],
                "examples": [
                    "$sql = \"SELECT * FROM Orders LIMIT 30\";",
                    "$sql = \"SELECT * FROM Orders LIMIT 10 OFFSET 15\";",
                    "$sql = \"SELECT * FROM Orders LIMIT 15, 10\";"
                ]
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/php/php_xml_parsers.asp",
        "cours": {
            "titre": "PHPXML Parsers",
            "description": "",
            "lien": "https://www.w3schools.com/php/php_xml_parsers.asp",
            "contenus": {
                "paragraphs": [
                    "The XML language is a way to structure data for sharing across websites.",
                    "Several web technologies like RSS Feeds and Podcasts are written in XML.",
                    "XML is easy to create. It looks a lot like HTML, except \nthat you make up your own tags.",
                    "If you want to learn more about XML, please visit ourXML tutorial.",
                    "To read and update, create and manipulate an XML document, you will need \nan XML parser.",
                    "In PHP there are two major types of XML parsers:",
                    "Tree-based parsers holds the entire document in Memory and transforms the XML document into a \nTree structure. It analyzes the whole document, and provides access to the Tree elements (DOM).",
                    "This type of parser is a better option for smaller \nXML documents, but not for large XML document as it causes major \nperformance issues.",
                    "Example of tree-based parsers:",
                    "Event-based parsers do \nnot hold the entire document in Memory, instead, they read in one node at a \ntime and allow you to interact with in real time. Once you move onto the next \nnode, the old one is thrown away.",
                    "This type of parser is well suited for large XML documents. It parses faster and consumes less memory.",
                    "Example of event-based parsers:"
                ],
                "lists": [
                    [
                        "Tree-Based Parsers",
                        "Event-Based Parsers"
                    ],
                    [
                        "SimpleXML",
                        "DOM"
                    ],
                    [
                        "XMLReader",
                        "XML Expat Parser"
                    ]
                ],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/php/php_xml_simplexml_read.asp",
        "cours": {
            "titre": "PHPSimpleXML Parser",
            "description": "",
            "lien": "https://www.w3schools.com/php/php_xml_simplexml_read.asp",
            "contenus": {
                "paragraphs": [
                    "SimpleXML is a PHP extension that allows us to easily \nmanipulate and get XML data.",
                    "SimpleXML is a tree-based parser.",
                    "SimpleXML provides an easy way of getting an element's name, attributes and textual \ncontent if you know the XML document's structure or layout.",
                    "SimpleXML turns an XML document into a data structure you can iterate through \nlike a collection of arrays and objects.",
                    "Compared to DOM or the Expat parser, SimpleXML takes a fewer lines of code to \nread text data from an element.",
                    "From PHP 5, the SimpleXML functions are part of the PHP core. No installation is required to use these functions.",
                    "The PHPsimplexml_load_string()function is used to read XML data from a string.",
                    "Assume we have a variable that contains XML data, like this:",
                    "The example below shows how to use thesimplexml_load_string()function to \nread XML data from a string:",
                    "The output of the code above will be:",
                    "Error Handling Tip:Use the libxml functionality to retrieve \nall XML errors when loading the document and then iterate over the errors. The \nfollowing example tries to load a broken XML string:",
                    "The output of the code above will be:",
                    "The PHPsimplexml_load_file()function is used to read XML data from a file.",
                    "Assume we have an XML file called \"note.xml\", \nthat looks like this:",
                    "The example below shows how to use thesimplexml_load_file()function to read \nXML data from a file:",
                    "The output of the code above will be:",
                    "Tip:The next chapter shows how to get/retrieve node values \nfrom an XML file with SimpleXML!",
                    "For more information about the PHP SimpleXML functions, visit ourPHP SimpleXML Reference."
                ],
                "lists": [],
                "examples": [
                    "$myXMLData =\"<?xml version='1.0' encoding='UTF-8'?><note><to>Tove</to><from>Jani</from><heading>Reminder</heading><body>Don't forget me this weekend!</body></note>\";",
                    "<?php$myXMLData =\"<?xml version='1.0' encoding='UTF-8'?><note><to>Tove</to><from>Jani</from><heading>Reminder</heading><body>Don't forget me this weekend!</body></note>\";$xml=simplexml_load_string($myXMLData) or die(\"Error: Cannot create object\");print_r($xml);?>",
                    "SimpleXMLElement Object ( [to] => Tove [from] => Jani [heading] => Reminder [body] => Don't forget me this weekend! )",
                    "<?phplibxml_use_internal_errors(true);$myXMLData =\"<?xml version='1.0' encoding='UTF-8'?><document><user>John Doe</wronguser><email>john@example.com</wrongemail></document>\";$xml = simplexml_load_string($myXMLData);if ($xml === false) {echo \"Failed loading XML: \";foreach(libxml_get_errors() as $error) {echo \"<br>\", $error->message;}} else {print_r($xml);}?>",
                    "Failed loading XML:Opening and ending tag mismatch: user line 3 and wronguserOpening and ending tag mismatch: email line 4 and wrongemail",
                    "<?xml version=\"1.0\" encoding=\"UTF-8\"?><note><to>Tove</to><from>Jani</from><heading>Reminder</heading><body>Don't forget me this weekend!</body></note>",
                    "<?php$xml=simplexml_load_file(\"note.xml\") or die(\"Error: Cannot create object\");print_r($xml);?>",
                    "SimpleXMLElement Object ( [to] => Tove [from] => Jani [heading] => Reminder [body] => Don't forget me this weekend! )"
                ]
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/php/php_xml_simplexml_get.asp",
        "cours": {
            "titre": "PHPSimpleXML - Get Node/Attribute Values",
            "description": "",
            "lien": "https://www.w3schools.com/php/php_xml_simplexml_get.asp",
            "contenus": {
                "paragraphs": [
                    "SimpleXML is a PHP extension that allows us to easily \nmanipulate and get XML data.",
                    "Get the node values from the \"note.xml\" file:",
                    "The output of the code above will be:",
                    "Assume we have an XML file called \"books.xml\", \nthat looks like this:",
                    "The following example gets the node value of the <title> element in the first \nand second <book> elements in the \"books.xml\" file:",
                    "The output of the code above will be:",
                    "The following example loops through all the <book> elements in the \"books.xml\" file, \nand gets the node values of the <title>, <author>, <year>, and <price> elements:",
                    "The output of the code above will be:",
                    "The following example gets the attribute value of the \"category\" attribute of \nthe first <book> element and the attribute value of the \"lang\" attribute \nof the <title> element in the second <book> element:",
                    "The output of the code above will be:",
                    "The following example gets the attribute values of the <title> elements in the \"books.xml\" file:",
                    "The output of the code above will be:",
                    "For more information about the PHP SimpleXML functions, visit ourPHP SimpleXML Reference."
                ],
                "lists": [],
                "examples": [
                    "<?php$xml=simplexml_load_file(\"note.xml\") or die(\"Error: Cannot create object\");echo $xml->to . \"<br>\";echo $xml->from . \"<br>\";echo $xml->heading . \"<br>\";echo $xml->body;?>",
                    "ToveJaniReminderDon't forget me this weekend!",
                    "<?xml version=\"1.0\" encoding=\"utf-8\"?><bookstore><book category=\"COOKING\"><title lang=\"en\">Everyday Italian</title><author>Giada De Laurentiis</author><year>2005</year><price>30.00</price></book><book category=\"CHILDREN\"><title lang=\"en\">Harry Potter</title><author>J K. Rowling</author><year>2005</year><price>29.99</price></book><book category=\"WEB\"><title lang=\"en-us\">XQuery Kick Start</title><author>James McGovern</author><year>2003</year><price>49.99</price></book><book category=\"WEB\"><title lang=\"en-us\">Learning XML</title><author>Erik T. Ray</author><year>2003</year><price>39.95</price></book></bookstore>",
                    "<?php$xml=simplexml_load_file(\"books.xml\") or die(\"Error: Cannot create object\");echo $xml->book[0]->title . \"<br>\";echo $xml->book[1]->title;?>",
                    "Everyday ItalianHarry Potter",
                    "<?php$xml=simplexml_load_file(\"books.xml\") or die(\"Error: Cannot create object\");foreach($xml->children() as $books) {echo $books->title . \", \";echo $books->author . \", \";echo $books->year . \", \";echo $books->price . \"<br>\";}?>",
                    "Everyday Italian, Giada De Laurentiis, 2005, 30.00Harry Potter, J K. Rowling, 2005, 29.99XQuery Kick Start, James McGovern, 2003, 49.99Learning XML, Erik T. Ray, 2003, 39.95",
                    "<?php$xml=simplexml_load_file(\"books.xml\") or die(\"Error: Cannot create object\");echo $xml->book[0]['category'] . \"<br>\";echo $xml->book[1]->title['lang'];?>",
                    "COOKINGen",
                    "<?php$xml=simplexml_load_file(\"books.xml\") or die(\"Error: Cannot create object\");foreach($xml->children() as $books) {echo $books->title['lang'];echo \"<br>\";}?>",
                    "enenen-usen-us"
                ]
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/php/php_xml_parser_expat.asp",
        "cours": {
            "titre": "PHPXML Expat Parser",
            "description": "",
            "lien": "https://www.w3schools.com/php/php_xml_parser_expat.asp",
            "contenus": {
                "paragraphs": [
                    "The built-in XML Expat Parser makes it possible to process XML \ndocuments in PHP.",
                    "The Expat parser is an event-based parser.",
                    "Look at the following XML fraction:",
                    "An event-based parser reports the XML above as a series of three events:",
                    "The XML Expat Parser functions are part of the PHP core. There is no \ninstallation needed to use these functions.",
                    "The XML file \"note.xml\" will be used in the example below:",
                    "We want to initialize the XML Expat Parser in PHP, define some handlers for different \nXML events, and then parse the XML file.",
                    "Example explained:",
                    "For more information about the PHP Expat functions, visit ourPHP XML Parser Reference."
                ],
                "lists": [
                    [
                        "Start element: from",
                        "Start CDATA section, value: Jani",
                        "Close element: from"
                    ],
                    [
                        "Initialize the XML parser with thexml_parser_create()function",
                        "Create functions to use with the different event handlers",
                        "Add thexml_set_element_handler()function to specify which function will be executed when the parser encounters the opening and closing tags",
                        "Add thexml_set_character_data_handler()function to specify which function will execute when the parser encounters character data",
                        "Parse the file \"note.xml\" with thexml_parse()function",
                        "In case of an error, addxml_error_string()function to convert an XML error to a textual description",
                        "Call thexml_parser_free()function to release the memory allocated with thexml_parser_create()function"
                    ]
                ],
                "examples": [
                    "<from>Jani</from>",
                    "<?xml version=\"1.0\" encoding=\"UTF-8\"?><note><to>Tove</to><from>Jani</from><heading>Reminder</heading><body>Don't forget me this weekend!</body></note>",
                    "<?php// Initialize the XML parser$parser=xml_parser_create();// Function to use at the start of an elementfunction start($parser,$element_name,$element_attrs) {switch($element_name) {case \"NOTE\":echo \"-- Note --<br>\";break;case \"TO\":echo \"To: \";break;case \"FROM\":echo \"From: \";break;case \"HEADING\":echo \"Heading: \";break;case \"BODY\":echo \"Message: \";}}// Function to use at the end of an elementfunction stop($parser,$element_name) {echo \"<br>\";}// Function to use when finding character datafunction char($parser,$data) {echo $data;}// Specify element handlerxml_set_element_handler($parser,\"start\",\"stop\");// Specify data handlerxml_set_character_data_handler($parser,\"char\");// Open XML file$fp=fopen(\"note.xml\",\"r\");// Read datawhile ($data=fread($fp,4096)) {xml_parse($parser,$data,feof($fp)) ordie (sprintf(\"XML Error: %s at line %d\",xml_error_string(xml_get_error_code($parser)),xml_get_current_line_number($parser)));}// Free the XML parserxml_parser_free($parser);?>"
                ]
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/php/php_xml_dom.asp",
        "cours": {
            "titre": "PHPXML DOM Parser",
            "description": "",
            "lien": "https://www.w3schools.com/php/php_xml_dom.asp",
            "contenus": {
                "paragraphs": [
                    "The built-in DOM parser makes it possible to process XML documents in PHP.",
                    "The DOM parser is a tree-based parser.",
                    "Look at the following XML document fraction:",
                    "The DOM sees the XML above as a tree structure:",
                    "The DOM parser functions are part of the PHP core. There is no installation needed to use these functions.",
                    "The XML file below (\"note.xml\") will be used in our example:",
                    "We want to initialize the XML parser, load the xml, and output it:",
                    "The output of the code above will be:",
                    "If you select \"View source\" in the browser window, you will see the following HTML:",
                    "The example above creates a DOMDocument-Object and loads the XML from \"note.xml\" into it.",
                    "Then the saveXML() function puts the internal XML document into a string, so we can output it.",
                    "We want to initialize the XML parser, load the XML, and loop through all elements of the <note> element:",
                    "The output of the code above will be:",
                    "In the example above you see that there are empty text nodes between each element.",
                    "When XML generates, it often contains white-spaces between the nodes. The XML \nDOM parser treats these as ordinary elements, and if you are not aware of them, \nthey sometimes cause problems.",
                    "If you want to learn more about the XML DOM, please visit ourXML tutorial."
                ],
                "lists": [
                    [
                        "Level 1: XML Document",
                        "Level 2: Root element: <from>",
                        "Level 3: Text element: \"Jani\""
                    ]
                ],
                "examples": [
                    "<?xml version=\"1.0\" encoding=\"UTF-8\"?><from>Jani</from>",
                    "<?xml version=\"1.0\" encoding=\"UTF-8\"?><note><to>Tove</to><from>Jani</from><heading>Reminder</heading><body>Don't forget me this weekend!</body></note>",
                    "<?php$xmlDoc = new DOMDocument();$xmlDoc->load(\"note.xml\");print $xmlDoc->saveXML();?>",
                    "Tove Jani Reminder Don't forget me this weekend!",
                    "<?xml version=\"1.0\" encoding=\"UTF-8\"?><note><to>Tove</to><from>Jani</from><heading>Reminder</heading><body>Don't forget me this weekend!</body></note>",
                    "<?php$xmlDoc = new DOMDocument();$xmlDoc->load(\"note.xml\");$x = $xmlDoc->documentElement;foreach ($x->childNodes AS $item) {print $item->nodeName . \" = \" . $item->nodeValue . \"<br>\";}?>",
                    "#text =to = Tove#text =from = Jani#text =heading = Reminder#text =body = Don't forget me this weekend!#text ="
                ]
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/php/php_ajax_intro.asp",
        "cours": {
            "titre": "PHP - AJAXIntroduction",
            "description": "",
            "lien": "https://www.w3schools.com/php/php_ajax_intro.asp",
            "contenus": {
                "paragraphs": [
                    "AJAX is about updating parts of a web page, without reloading the whole page.",
                    "AJAX = Asynchronous JavaScript and XML.",
                    "AJAX is a technique for creating fast and dynamic web pages.",
                    "AJAX allows web pages to be updated asynchronously by exchanging small \namounts of data with the server behind the scenes. This means that it is \npossible to update parts of a web page, without reloading the whole page.",
                    "Classic web pages, (which do not use AJAX) must reload the entire page if the \ncontent should change.",
                    "Examples of applications using AJAX: Google Maps, Gmail, Youtube, and \nFacebook tabs.",
                    "",
                    "AJAX is based on internet standards, and uses a combination of:",
                    "AJAX applications are browser- and platform-independent!",
                    "AJAX was made popular in 2005 by Google, with Google Suggest.",
                    "Google Suggestis using AJAX to create a very dynamic web interface: \nWhen you start typing in Google's search box, a JavaScript sends the letters off \nto a server and the server returns a list of suggestions.",
                    "In our PHP tutorial, we will demonstrate how AJAX can update parts of a web \npage, without reloading the whole page. The server script will be written in PHP.",
                    "If you want to learn more about AJAX, visit ourAJAX tutorial."
                ],
                "lists": [
                    [
                        "XMLHttpRequest object (to exchange data asynchronously with a server)",
                        "JavaScript/DOM (to display/interact with the information)",
                        "CSS (to style the data)",
                        "XML (often used as the format for transferring data)"
                    ]
                ],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/php/php_ajax_php.asp",
        "cours": {
            "titre": "PHP -AJAX and PHP",
            "description": "",
            "lien": "https://www.w3schools.com/php/php_ajax_php.asp",
            "contenus": {
                "paragraphs": [
                    "AJAX is used to create more interactive applications.",
                    "The following example will demonstrate how a web page can communicate with a \nweb server while a user type characters in an input field:",
                    "Start typing a name in the input field below:",
                    "Suggestions:",
                    "In the example above, when a user types a character in the input field, a function \ncalledshowHint()is executed.",
                    "The function is triggered by the onkeyup event.",
                    "Here is the HTML code:",
                    "Code explanation:",
                    "First, check if the input field is empty (str.length == 0). If it is, clear the \ncontent of the txtHint placeholder and exit the function.",
                    "However, if the input field is not empty, do the following:",
                    "The PHP file checks an array of names, and returns the corresponding name(s) to the \nbrowser:"
                ],
                "lists": [
                    [
                        "Create anXMLHttpRequestobject",
                        "Create the function to be executed when the server response is ready",
                        "Send the request off to a PHP file (gethint.php) on the server",
                        "Notice thatqparameter is added to the url(gethint.php?q=\" + str)",
                        "And thestrvariable holds the content of the input field"
                    ]
                ],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/php/php_ajax_database.asp",
        "cours": {
            "titre": "PHP -AJAX and MySQL",
            "description": "",
            "lien": "https://www.w3schools.com/php/php_ajax_database.asp",
            "contenus": {
                "paragraphs": [
                    "AJAX can be used for interactive communication with a database.",
                    "The following example will demonstrate how a web page can fetch information from a database with AJAX:",
                    "The database table we use in the example above looks like this:",
                    "",
                    "In the example above, when a user selects a person in the dropdown list \nabove, a function calledshowUser()is executed.",
                    "The function is triggered by theonchangeevent.",
                    "Here is the HTML code:",
                    "Code explanation:",
                    "First, check if person is selected. If no person is selected (str == \"\"), clear the \ncontent oftxtHintand exit the function. If a person is selected, do the following:",
                    "The page on the server called by the JavaScript above is a PHP file calledfamily.php.",
                    "The source code infamily.phpruns a query against a MySQL database, and returns the result in an HTML \ntable:",
                    "Explanation: When the query is sent from the JavaScript to the PHP file, the following happens:"
                ],
                "lists": [
                    [
                        "Create anXMLHttpRequestobject",
                        "Create the function to be executed when the server response is ready",
                        "Send the request off to a file on the server",
                        "Notice that a parameterqis added to the URL (with the content of the dropdown list)"
                    ],
                    [
                        "PHP opens a connection to a MySQL server",
                        "The correct person is found",
                        "An HTML table is created, filled with data, and sent back to thetxtHintplaceholder"
                    ]
                ],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/php/php_ajax_xml.asp",
        "cours": {
            "titre": "PHP Example -AJAX and XML",
            "description": "",
            "lien": "https://www.w3schools.com/php/php_ajax_xml.asp",
            "contenus": {
                "paragraphs": [
                    "AJAX can be used for interactive communication with an XML file.",
                    "The following example will demonstrate how a web page can fetch information from an XML file with AJAX:",
                    "When a user selects a CD in the dropdown list above, a function called \"showCD()\" is executed. The \nfunction is triggered by the \"onchange\" event:",
                    "The showCD() function does the following:",
                    "The page on the server called by the JavaScript above is a PHP file called \"getcd.php\".",
                    "The PHP script loads an XML document, \"cd_catalog.xml\", runs a query against the XML file, and returns the result as HTML:",
                    "When the CD query is sent from the JavaScript to the PHP page, the following \nhappens:"
                ],
                "lists": [
                    [
                        "Check if a CD is selected",
                        "Create an XMLHttpRequest object",
                        "Create the function to be executed when the server response is ready",
                        "Send the request off to a file on the server",
                        "Notice that a parameter (q) is added to the URL (with the content of the dropdown list)"
                    ],
                    [
                        "PHP creates an XML DOM object",
                        "Find all <artist> elements that matches the name sent from the JavaScript",
                        "Output the album information (send to the \"txtHint\" placeholder)"
                    ]
                ],
                "examples": [
                    "<html><head><script>function showCD(str)\n{if (str==\"\") {document.getElementById(\"txtHint\").innerHTML=\"\";return;}var xmlhttp=new XMLHttpRequest();xmlhttp.onreadystatechange=function() {if (this.readyState==4 && this.status==200) {document.getElementById(\"txtHint\").innerHTML=this.responseText;}}xmlhttp.open(\"GET\",\"getcd.php?q=\"+str,true);xmlhttp.send();}</script></head><body><form>Select a CD:<select name=\"cds\" onchange=\"showCD(this.value)\"><option value=\"\">Select a CD:</option><option value=\"Bob Dylan\">Bob Dylan</option><option value=\"Bee Gees\">Bee Gees</option><option value=\"Cat Stevens\">Cat Stevens</option></select></form><div id=\"txtHint\"><b>CD info will be listed here...</b></div></body></html>",
                    "<?php$q=$_GET[\"q\"];$xmlDoc = new DOMDocument();$xmlDoc->load(\"cd_catalog.xml\");$x=$xmlDoc->getElementsByTagName('ARTIST');for ($i=0; $i<=$x->length-1; $i++)\n{//Process only element nodesif ($x->item($i)->nodeType==1) {if ($x->item($i)->childNodes->item(0)->nodeValue == $q) {$y=($x->item($i)->parentNode);}}}$cd=($y->childNodes);for ($i=0;$i<$cd->length;$i++)\n{//Process only element nodesif ($cd->item($i)->nodeType==1) {echo(\"<b>\" . $cd->item($i)->nodeName . \":</b> \");echo($cd->item($i)->childNodes->item(0)->nodeValue);echo(\"<br>\");}}?>"
                ]
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/php/php_ajax_livesearch.asp",
        "cours": {
            "titre": "PHP Example -AJAX Live Search",
            "description": "",
            "lien": "https://www.w3schools.com/php/php_ajax_livesearch.asp",
            "contenus": {
                "paragraphs": [
                    "AJAX can be used to create more user-friendly and interactive searches.",
                    "The following example will demonstrate a live search, where you get search results while you type.",
                    "Live search has many benefits compared to traditional searching:",
                    "Search for a W3Schools page in the input field below:",
                    "The results in the example above are found in an XML file\n(links.xml). To make this \nexample small and simple, only six results are available.",
                    "When a user types a character in the input field above, the function \"showResult()\" is executed. The function is triggered by the \"onkeyup\" \nevent:",
                    "Source code explanation:",
                    "If the input field is empty (str.length==0), the function clears the \ncontent of the livesearch placeholder and exits the function.",
                    "If the input field is not empty, the showResult() function executes the following:",
                    "The page on the server called by the JavaScript above is a PHP file called \"livesearch.php\".",
                    "The source code in \"livesearch.php\" searches an XML file for titles matching the search string and returns the result:",
                    "If there is any text sent from the JavaScript (strlen($q) > 0), the following happens:"
                ],
                "lists": [
                    [
                        "Results are shown as you type",
                        "Results narrow as you continue typing",
                        "If results become too narrow, remove characters to see a broader result"
                    ],
                    [
                        "Create an XMLHttpRequest object",
                        "Create the function to be executed when the server response is ready",
                        "Send the request off to a file on the server",
                        "Notice that a parameter (q) is added to the URL (with the content of the input field)"
                    ],
                    [
                        "Load an XML file into a new XML DOM object",
                        "Loop through all <title> elements to find matches from the text sent from the JavaScript",
                        "Sets the correct url and title in the \"$response\" variable.\n If more than one match is found, all matches are added to the variable",
                        "If no matches are found, the $response variable is set to \"no suggestion\""
                    ]
                ],
                "examples": [
                    "<html><head><script>function showResult(str)\n{if (str.length==0) {document.getElementById(\"livesearch\").innerHTML=\"\";document.getElementById(\"livesearch\").style.border=\"0px\";return;}var xmlhttp=new XMLHttpRequest();xmlhttp.onreadystatechange=function() {if (this.readyState==4 && this.status==200) {document.getElementById(\"livesearch\").innerHTML=this.responseText;document.getElementById(\"livesearch\").style.border=\"1px solid #A5ACB2\";}}xmlhttp.open(\"GET\",\"livesearch.php?q=\"+str,true);xmlhttp.send();}</script></head><body><form><input type=\"text\" size=\"30\" onkeyup=\"showResult(this.value)\"><div id=\"livesearch\"></div></form></body></html>",
                    "<?php$xmlDoc=new DOMDocument();$xmlDoc->load(\"links.xml\");$x=$xmlDoc->getElementsByTagName('link');//get the q parameter from URL$q=$_GET[\"q\"];//lookup all links from the xml file if length of q>0if (strlen($q)>0)\n{$hint=\"\";for($i=0; $i<($x->length); $i++) {$y=$x->item($i)->getElementsByTagName('title');$z=$x->item($i)->getElementsByTagName('url');if ($y->item(0)->nodeType==1) {//find a link matching the search textif (stristr($y->item(0)->childNodes->item(0)->nodeValue,$q)) {if ($hint==\"\") {$hint=\"<a href='\" .$z->item(0)->childNodes->item(0)->nodeValue .\"' target='_blank'>\" .$y->item(0)->childNodes->item(0)->nodeValue . \"</a>\";} else {$hint=$hint . \"<br /><a href='\" .$z->item(0)->childNodes->item(0)->nodeValue .\"' target='_blank'>\" .$y->item(0)->childNodes->item(0)->nodeValue . \"</a>\";}}}}}// Set output to \"no suggestion\" if no hint was found// or to the correct valuesif ($hint==\"\") {$response=\"no suggestion\";}\nelse {$response=$hint;}//output the responseecho $response;?>"
                ]
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/php/php_ajax_poll.asp",
        "cours": {
            "titre": "PHP Example -AJAX Poll",
            "description": "",
            "lien": "https://www.w3schools.com/php/php_ajax_poll.asp",
            "contenus": {
                "paragraphs": [
                    "The following example will demonstrate a poll where the result is shown without reloading.",
                    "When a user chooses an option above, a function called \"getVote()\" is executed. The \nfunction is triggered by the \"onclick\" event:",
                    "The getVote() function does the following:",
                    "The page on the server called by the JavaScript above is a PHP file called \"poll_vote.php\":",
                    "The value is sent from the JavaScript, and the following \nhappens:",
                    "The text file (poll_result.txt) is where we store the data from the poll.",
                    "It is stored like this:",
                    "The first number represents the \"Yes\" votes, the second number represents the \n\"No\" votes.",
                    "Note:Remember to allow your web server to edit the text file. DoNOTgive everyone access, just the web server (PHP)."
                ],
                "lists": [
                    [
                        "Create an XMLHttpRequest object",
                        "Create the function to be executed when the server response is ready",
                        "Send the request off to a file on the server",
                        "Notice that a parameter (vote) is added to the URL (with the value of the yes or no option)"
                    ],
                    [
                        "Get the content of the \"poll_result.txt\" file",
                        "Put the content of the file in variables and add one to the selected variable",
                        "Write the result to the \"poll_result.txt\" file",
                        "Output a graphical representation of the poll result"
                    ]
                ],
                "examples": [
                    "<html><head><script>function getVote(int)\n{var xmlhttp=new XMLHttpRequest();xmlhttp.onreadystatechange=function() {if (this.readyState==4 && this.status==200) {document.getElementById(\"poll\").innerHTML=this.responseText;}}xmlhttp.open(\"GET\",\"poll_vote.php?vote=\"+int,true);xmlhttp.send();}</script></head><body><div id=\"poll\"><h3>Do you like PHP and AJAX so far?</h3><form>Yes:\n<input type=\"radio\" name=\"vote\"\nvalue=\"0\" onclick=\"getVote(this.value)\"><br>No:\n<input type=\"radio\" name=\"vote\"\nvalue=\"1\" onclick=\"getVote(this.value)\"></form></div></body></html>",
                    "<?php$vote = $_REQUEST['vote'];//get content of textfile$filename = \"poll_result.txt\";$content = file($filename);//put content in array$array = explode(\"||\", $content[0]);$yes = $array[0];$no = $array[1];if ($vote == 0) {$yes = $yes + 1;}if ($vote == 1) {$no = $no + 1;}//insert votes to txt file$insertvote = $yes.\"||\".$no;$fp = fopen($filename,\"w\");fputs($fp,$insertvote);fclose($fp);?><h2>Result:</h2><table><tr><td>Yes:</td><td><img src=\"poll.gif\"width='<?php echo(100*round($yes/($no+$yes),2)); ?>'height='20'><?php echo(100*round($yes/($no+$yes),2)); ?>%</td></tr><tr><td>No:</td><td><img src=\"poll.gif\"width='<?php echo(100*round($no/($no+$yes),2)); ?>'height='20'><?php echo(100*round($no/($no+$yes),2)); ?>%</td></tr></table>",
                    "0||0"
                ]
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/php/php_examples.asp",
        "cours": {
            "titre": "PHPExamples",
            "description": "",
            "lien": "https://www.w3schools.com/php/php_examples.asp",
            "contenus": {
                "paragraphs": [
                    "Syntax explained",
                    "Comments explained",
                    "Variables explained",
                    "Echo and Print explained",
                    "Data Types explained",
                    "Strings explained",
                    "Numbers explained",
                    "Math explained",
                    "Constants explained",
                    "Operators explained",
                    "Conditions explained",
                    "Loops explained",
                    "Functions explained",
                    "Arrays explained",
                    "Multidimensional Arrays explained",
                    "Sorting Arrays explained",
                    "Superglobals explained",
                    "Regular Expressions explained",
                    "Form Validation explained",
                    "Date and Time explained",
                    "Include Files explained",
                    "File Handling explained",
                    "File Open/Read/Close explained",
                    "Cookies explained",
                    "Sessions explained",
                    "Filters explained",
                    "PHP JSON explained",
                    "PHP Exceptions explained",
                    "PHP OOP (Classes/Objects) explained",
                    "Select Data From MySQL explained",
                    "SimpleXML Parser explained",
                    "XML Expat Parser explained"
                ],
                "lists": [],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/php/php_compiler.asp",
        "cours": {
            "titre": "PHPOnline Compiler",
            "description": "",
            "lien": "https://www.w3schools.com/php/php_compiler.asp",
            "contenus": {
                "paragraphs": [
                    "With our online PHP compiler, you can edit PHP code, and view the result in your browser.",
                    "Click on the \"Try it Yourself\" button to see how it works.",
                    "Create your own website and PHP applications withW3Schools Spaces.",
                    "W3Schools Spacesis a website-building tool that enables you to create and share your own website, as well as develop and host your PHP applications.",
                    "You can change the website's look and how it works by editing the code right in your web browser.",
                    "It's easy to use and doesn't require any setup",
                    "The code editor is packed with features to help you achieve more:",
                    "Practice is key to mastering coding, and the best way to put your PHP knowledge into practice is by getting practical with code.",
                    "UseW3Schools Spacesto build, test and deploy code.",
                    "The code editor lets you write and practice different types of computer languages. It includes \nPHP, but you can use it for other languages too.",
                    "New languages are added all the time:",
                    "If you don't know PHP, we suggest that you read ourPHP Tutorialfrom scratch.",
                    "Get an overview of your packages and easily add or delete frameworks and libraries. Then, with just one click, you can make changes to your packages without manual installation.",
                    "",
                    "You can use the code editor inW3School Spacesto build frontend or full-stack websites from scratch.",
                    "Or you can use the 60+ templates available and save time:",
                    "Create your Spaces account today and explore them all!",
                    "Host and publish your websites in no time withW3School Spaces.",
                    "W3Schools subdomain and SSL certificate are included for free withW3School Spaces. An SSL certificate makes your website safe and secure. It also helps people trust your website and makes it easier to find it online.",
                    "Want a custom domain for your website?",
                    "You can buy a domain or transfer an existing one and connect it to your space.",
                    "Get started in a few clicks withW3School Spaces."
                ],
                "lists": [
                    [
                        "Templates:Start from scratch or use a template",
                        "Cloud-based:no installations required. You only need your browser",
                        "Terminal & Log:debug and troubleshoot your code easily",
                        "File Navigator:switch between files inside the code editor",
                        "And much more!"
                    ]
                ],
                "examples": [
                    "<?php$txt = \"PHP\";echo \"I love$txt!\";?>"
                ]
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/php/php_quiz.asp",
        "cours": {
            "titre": "PHPQuiz",
            "description": "",
            "lien": "https://www.w3schools.com/php/php_quiz.asp",
            "contenus": {
                "paragraphs": [
                    "You can test your PHP skills with W3Schools' Quiz.",
                    "The test contains 25 questions and there is no time limit.",
                    "The test is not official, it's just a nice way to see how much you know, or don't know, about \nPHP.",
                    "You will get 1 point for each correct answer. At the end of the Quiz,\nyour total score will be displayed. Maximum score is 25 points.",
                    "Good luck!",
                    "Start the PHP Quiz ❯",
                    "If you don't know PHP, we suggest that you read ourPHP Tutorialfrom scratch.",
                    "Get certified by completingthecourse"
                ],
                "lists": [],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/php/php_exercises.asp",
        "cours": {
            "titre": "PHPExercises",
            "description": "",
            "lien": "https://www.w3schools.com/php/php_exercises.asp",
            "contenus": {
                "paragraphs": [
                    "Test your PHP skills with exercises from all categories:",
                    "If you haven't already,sign upto become a W3Schooler, and get points for every exercise you complete.",
                    "As a logged-in W3Schools user you will have access to many features like havingyour own web page,track your learning progress,receive personal guided paths, andmore.",
                    "We have gathered a variety of PHP exercises from most of the chapters in ourPHP Tutorial.",
                    "The exercises are a mix of \"multiple choice\" and \"fill in the blanks\" questions. \nThere are between 3 and 6 questions in  each category.\nThe answer can be found in the corresponding tutorial chapter. If you're stuck, \nor answer wrong, you can try again or hit the \"Show Answer\" button to see the correct answer.",
                    "Get certified by completingthecourse"
                ],
                "lists": [],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/php/php_server.asp",
        "cours": {
            "titre": "PHPServer",
            "description": "",
            "lien": "https://www.w3schools.com/php/php_server.asp",
            "contenus": {
                "paragraphs": [
                    "Coding Skills",
                    "AI Tutor",
                    "Projects",
                    "Securely",
                    "By subscribing to a plan you support the W3Schools mission to makelearning available to everyone - no matter their background.",
                    "$0/Forever",
                    "This is for you that are beginning to explore coding and web development",
                    "$14.99/Month",
                    "This is for you that want to learn and reach your goals faster. Build fullstack projects, ad free experience.",
                    "Contact us for information",
                    "W3Schools right to use and Plus for educational institutions or enterprise customers",
                    "You can also buy a domain or connect an existing one.",
                    "Just landed inSpaces",
                    "Learn to code more effectivelyand intelligently with kAI - AI tutor",
                    "Hi! I'm kAI, W3Schools AI Tutor...",
                    "Feel free to ask me any coding-related questions, and I'll do my best to assist you.",
                    "I can help you checking your code for errors, improving your code's structure, explaining coding concepts in a clear and understandable way, and more...",
                    "I can even create complete websites for you based on your input, so what are you waiting for?",
                    "Cloud-based",
                    "Terminal & Log",
                    "How To Libraries",
                    "Database",
                    "File Navigator",
                    "Package Manager",
                    "Analytics",
                    "Environment Manager",
                    "With Basic Spaces, you can build frontend websites. Whereas with Fullstack Spaces, you can build frontend and backend websites.",
                    "Basic Spaces include HTML, CSS, and Javascript. Full Stack Spaces include everything in Basic Spaces plus PHP, Python, React.js, Vue.js, Node.js, Handlebars, and Django.",
                    "Your subscription will be automatically renewed every month.",
                    "Your access to all the benefits for the paid period of time will continue. However, the subscription will not be renewed automatically.",
                    "To subscribe W3Schools accounts for multiple users, you can contact sales@w3schools.com"
                ],
                "lists": [
                    [
                        "Build and host 1 static website",
                        "100 credits/monthAccess various AI features like W3Schools kAI coding tutor and interview preparation.",
                        "No support"
                    ],
                    [
                        "Ad-free experience",
                        "Build and host 15 static websites",
                        "Build and host 1 full stack server",
                        "Choose from 18 frameworks / languages",
                        "Choose from 75+ templates",
                        "50000 credits/monthAccess various AI features like W3Schools kAI coding tutor and interview preparation.",
                        "Priority Support",
                        "Cancel anytime"
                    ],
                    [
                        "Everything in W3Schools Plus",
                        "Certification Exams",
                        "And much more!"
                    ]
                ],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/php/php_syllabus.asp",
        "cours": {
            "titre": "PHPSyllabus",
            "description": "",
            "lien": "https://www.w3schools.com/php/php_syllabus.asp",
            "contenus": {
                "paragraphs": [
                    "TheW3Schools PHP Tutorialis comprehensive and beginner-friendly.",
                    "It will give you a fundamental knowledge of PHP.",
                    "It is designed for beginners and requires no prior experience with programming.",
                    "The content has been carefully made to be bite-sized, simple, and easy to understand.",
                    "The content has been proven by millions of users over the years. It is updated and improved frequently.",
                    "The syllabus outline and its sequence are structured so you can learn PHP step by step, from the introduction to creating your first application with PHP.",
                    "Get Started With PHP »",
                    "Note:Are you a teacher teaching PHP?W3Schools Academyis a toolbox of features that can help you teach. It offers classroom features such as pre-built study plans, classroom administration and much more. Read more aboutAcademy here.",
                    "Get Started",
                    "In this tutorial we offer different activities for you to learn PHP for free:",
                    "You can also create a free account to track your progress.",
                    "As a signed-in user, you get access to features such as:",
                    "Sign Up - It's free",
                    "Get Started",
                    "PHP, like any other coding language, is best learned by working hands-on with code.",
                    "Easily try code with our \"Try it Yourself\" editor.",
                    "Here, you can edit PHP code and view the result.",
                    "If you want to explore more and host your project, we have a feature calledSpacesthat allows you to build, test and deploy PHP code and other backend languages.",
                    "Here you get a secure sandbox environment called Spaces, where you can practice coding and test projects in real-time.",
                    "Spaces allow you to test, build, and deploy code. This includes a W3Schools subdomain, hosting, and secure SSL certificates.",
                    "Spaces require no installation and run directly in the browser.",
                    "Features include:",
                    "Create a Spaces Account",
                    "W3Schools offers an end-of-pathway certification program.",
                    "Here you can take exams to get certified.",
                    "The PHP exam is a test that summarizes the W3Schools PHP syllabus.",
                    "After passing the exam you get the \"Certified PHP Developer\" Certification.",
                    "There are two different types of certifications:",
                    "The non-adaptive is pass or no pass.",
                    "The adaptive certification is adaptive and graded; students will get a grade from intermediate, advanced to professional.",
                    "Buy Certificate »",
                    "Are you interested in learning how you can useW3Schools Academyto Teach \nPHP programming?",
                    "Join our upcoming webinar for a guided demo ofW3Schools Academy. You'll see how it works, and discover how it can make teaching programming easier and more engaging.",
                    "Join our FREE Webinar »"
                ],
                "lists": [
                    [
                        "Understand what PHP is and how to write PHP scripts.",
                        "Learn PHP syntax and how to use variables and data types.",
                        "Use conditional statements (if, else, switch) and loops (while, for).",
                        "Use functions to make code reusable.",
                        "Handle forms and user input with PHP.",
                        "Learn how to use Arrays and file management.",
                        "Use PHP to connect to a database and to store and retrieve data.",
                        "Understand error handling and keep information safe.",
                        "Type and run PHP programs."
                    ],
                    [
                        "Websites:PHP is a popular backend scripting language used for creating interactive websites.",
                        "Computer Science:PHP can be used to teach backend programming and web development.",
                        "Information Technology (IT):PHP teaches students how to make and maintain websites and web apps.",
                        "Web Development:PHP can be used for understanding how to create and handle interactive web pages and link them to databases.",
                        "Business Studies/ Entrepreneurship:PHP can be useful for small businesses for simple tasks on websites such as for creating forms and managing data.",
                        "Media and Communications:PHP can be used to create and run media sites and content management systems (CMS).",
                        "Mathematics:PHP can be used to make web-based calculators and apps that solve math problems.",
                        "Economics:PHP can be used to make tools for economic modeling, data analysis, and polls."
                    ],
                    [
                        "Lessons",
                        "Exercises",
                        "Quizzes"
                    ],
                    [
                        "Learning paths",
                        "Sandbox and lab environments",
                        "Achievements",
                        "And much more!"
                    ],
                    [
                        "PHP Introduction",
                        "PHP Install",
                        "PHP Syntax",
                        "PHP Comments",
                        "PHP Variables",
                        "PHP Echo / Print",
                        "PHP Data Types",
                        "PHP Strings",
                        "PHP Numbers",
                        "PHP Casting",
                        "PHP Math",
                        "PHP Constants",
                        "PHP Magic Constants",
                        "PHP Operators",
                        "PHP If...Else",
                        "PHP Switch",
                        "PHP Loops",
                        "PHP Functions",
                        "PHP Arrays",
                        "PHP Superglobals",
                        "PHP Regular Expressions",
                        "PHP Forms Handling",
                        "PHP Form Validation",
                        "PHP Form Required",
                        "PHP Form URL/E-mail",
                        "PHP Form Complete",
                        "PHP Date and Time",
                        "PHP Include Files",
                        "PHP File Handling",
                        "PHP Open/Read",
                        "PHP Create/Write",
                        "PHP Create/Write",
                        "PHP File Upload",
                        "PHP Cookies",
                        "PHP Sessions",
                        "PHP Filters",
                        "PHP Filters Advanced",
                        "PHP Callback Functions",
                        "PHP JSON",
                        "PHP Exceptions",
                        "PHP What is OOP",
                        "PHP Classes/Objects",
                        "PHP Constructor",
                        "PHP Destructor",
                        "PHP Access Modifiers",
                        "PHP Inheritance",
                        "PHP Constants",
                        "PHP Abstract Classes",
                        "PHP Interfaces",
                        "PHP Traits",
                        "PHP Static Methods",
                        "PHP Static Properties",
                        "PHP Namespaces",
                        "PHP Iterables",
                        "PHP MySQL Database",
                        "PHP XML",
                        "PHP AJAX",
                        "PHP MySQL Database",
                        "PHP Error Handling",
                        "PHP Security"
                    ],
                    [
                        "Collaboration",
                        "File navigator",
                        "Terminal & log",
                        "Package manager",
                        "Database",
                        "Environment manager",
                        "Analytics"
                    ],
                    [
                        "Non-adaptive",
                        "Adaptive"
                    ]
                ],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/php/php_study_plan.asp",
        "cours": {
            "titre": "PHPStudy Plan",
            "description": "",
            "lien": "https://www.w3schools.com/php/php_study_plan.asp",
            "contenus": {
                "paragraphs": [
                    "The PHP study plan helps you teach your students PHP step-by-step.",
                    "Creating a study plan for PHP is easy.",
                    "You can use a pre-built study plan or customize it.",
                    "Students have different skill levels. The study plans can be customized to ensure that everyone is challenged.",
                    "Save time with pre-built teacher materials and study plans. Easily organize your class with a timeline from the introduction of PHP to the final exam.",
                    "This study plan is a feature of W3Schools Academy.",
                    "W3Schools Academy is a platform that has everything you need to teach coding, all in one place.",
                    "It offers you as a teacher a toolbox of features that helps you succeed with teaching in your classroom.",
                    "You need to have an active subscription to access the study plan feature. There are two different subscription tiers:",
                    "Learn More »",
                    "Academy also offer other features such as:",
                    "Get a free demo »",
                    "W3Schools has everything you need to teach PHP.",
                    "The PHP training materials is available for you to include and use in your study plan:",
                    "With the PHP Syllabus, your students will start with the basics, like understanding variables, data types, and simple syntax, and move to more advanced topics, like working with forms, handling databases, and building dynamic web applications. Each chapter has examples, try-it-yourself sections, exercises, and quizzes to make learning easy, interactive, and fun.",
                    "Read more about PHP Syllabus.",
                    "The study plan features are made to help teachers and students. They make learning easy, flexible, and fun. These features work for different types of classes, learning styles and student level.",
                    "Learn More »",
                    "You choose the timeline and paceof your study plans.",
                    "Schools have different preferences.",
                    "Some would like more intensive pace, e.g. 5 weeks, others 12 or more weeks.",
                    "It is completely up to you.",
                    "For example, this is how a 5-week PHP study plan could look like:",
                    "Image of Sample PHP study plan:",
                    "Start withPHP Study Planstoday.",
                    "Get Started »",
                    "Are you interested in learning how you can useW3Schools Academyto Teach PHP programming?",
                    "Join our upcoming webinar for a guided demo ofW3Schools Academy. You'll see how it works, and discover how it can make teaching programming easier and more engaging.",
                    "Join our FREE Webinar »"
                ],
                "lists": [
                    [
                        "Essentials ($1.99 / month per student)",
                        "Full Access ($5.99 / month per student)",
                        "Calculate your price and orderhere."
                    ],
                    [
                        "Managing your classroom",
                        "Tracking of student progress and reports",
                        "Labs, assignments, and code challenges (prebuilt challenges or create your own ones)",
                        "Auto-grading",
                        "Teaching materials",
                        "Certification exams"
                    ],
                    [
                        "W3Schools PHP Tutorial",
                        "PHP Exercises",
                        "PHP Quiz",
                        "PHP Challenges (Coding challenges)",
                        "PHP Certification Exam (End of Pathway Exam)"
                    ],
                    [
                        "Learning PathsYou can add ready-made learning paths.The learning paths are by default ordered by our recommended order.You can change the order.You can add custom activities with text, links, or multi-media files.Drag and drop or click to make changes to the path.",
                        "You can add ready-made learning paths.",
                        "The learning paths are by default ordered by our recommended order.",
                        "You can change the order.",
                        "You can add custom activities with text, links, or multi-media files.",
                        "Drag and drop or click to make changes to the path.",
                        "Interactive ContentTutorialsTry-its (test code snippets)ExercisesQuizChallengesLabs",
                        "Tutorials",
                        "Try-its (test code snippets)",
                        "Exercises",
                        "Quiz",
                        "Challenges",
                        "Labs",
                        "Timeline and PaceYou can set a timeline of your study plan (e.g., 4-week, 8-week, 12-week, 24-week plans).You can decide the learning pace for your class.Different study plans can be assigned to different students in the same class.The flexibility can help to make sure that everyone is challenged.",
                        "You can set a timeline of your study plan (e.g., 4-week, 8-week, 12-week, 24-week plans).",
                        "You can decide the learning pace for your class.",
                        "Different study plans can be assigned to different students in the same class.",
                        "The flexibility can help to make sure that everyone is challenged.",
                        "Track Student ProgressThere are tools to track student progress.The analytic tools include: chapter progress, exercises results, quiz results, exam results, and much more.The challenges can be auto-graded or manually graded. The results are available to you as a teacher.",
                        "There are tools to track student progress.",
                        "The analytic tools include: chapter progress, exercises results, quiz results, exam results, and much more.",
                        "The challenges can be auto-graded or manually graded. The results are available to you as a teacher.",
                        "End of Pathway ExamThe PHP study plan aligns with the PHP Certification Exam.The exam can be taken at the end of the study plan, at your selected date.The exam summarizes the PHP Tutorial.You get reports of the students' results.",
                        "The PHP study plan aligns with the PHP Certification Exam.",
                        "The exam can be taken at the end of the study plan, at your selected date.",
                        "The exam summarizes the PHP Tutorial.",
                        "You get reports of the students' results.",
                        "AccessibilityStudy plans and learning materials are accessible on desktops, tablets, and smartphones.This ensures students can learn anytime, anywhere.",
                        "Study plans and learning materials are accessible on desktops, tablets, and smartphones.",
                        "This ensures students can learn anytime, anywhere."
                    ],
                    [
                        "You can add ready-made learning paths.",
                        "The learning paths are by default ordered by our recommended order.",
                        "You can change the order.",
                        "You can add custom activities with text, links, or multi-media files.",
                        "Drag and drop or click to make changes to the path."
                    ],
                    [
                        "Tutorials",
                        "Try-its (test code snippets)",
                        "Exercises",
                        "Quiz",
                        "Challenges",
                        "Labs"
                    ],
                    [
                        "You can set a timeline of your study plan (e.g., 4-week, 8-week, 12-week, 24-week plans).",
                        "You can decide the learning pace for your class.",
                        "Different study plans can be assigned to different students in the same class.",
                        "The flexibility can help to make sure that everyone is challenged."
                    ],
                    [
                        "There are tools to track student progress.",
                        "The analytic tools include: chapter progress, exercises results, quiz results, exam results, and much more.",
                        "The challenges can be auto-graded or manually graded. The results are available to you as a teacher."
                    ],
                    [
                        "The PHP study plan aligns with the PHP Certification Exam.",
                        "The exam can be taken at the end of the study plan, at your selected date.",
                        "The exam summarizes the PHP Tutorial.",
                        "You get reports of the students' results."
                    ],
                    [
                        "Study plans and learning materials are accessible on desktops, tablets, and smartphones.",
                        "This ensures students can learn anytime, anywhere."
                    ],
                    [
                        "Week 1: Introduction, Variables",
                        "Week 2: Echo / Print, Data Types, Strings, Operators & Math",
                        "Week 3: Conditionals, Loops, Functions, Arrays",
                        "Week 4: Superglobals, RegEx, Forms, Advanced, OOP",
                        "Week 5: MySQL Database, XML, AJAX, PHP Certification Exam"
                    ]
                ],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/php/php_exam.asp",
        "cours": {
            "titre": "W3SchoolsPHP CertificateCertificate",
            "description": "How Does It Work?Study for free at W3Schools.comStudy at your own speedTest your skills with W3Schools online quizzesApply for your certificate by paying an exam feeTake your exam online, at any time, and from any location",
            "lien": "https://www.w3schools.com/php/php_exam.asp",
            "contenus": {
                "paragraphs": [
                    "W3Schools offers an Online Certification Program.",
                    "The perfect solution for busy professionals who need to balance work, family, and career building.",
                    "More than 50 000 certificates already issued!",
                    "Get Your Certificate »",
                    "W3Schools offers an Online Certification Program.",
                    "The perfect solution for busy professionals who need to balance work, family, and career building.",
                    "More than 50 000 certificates already issued!",
                    "Get Your Certificate »",
                    "Any student or professional within the digital industry.",
                    "Certifications are valuable assets to gain trust and demonstrate knowledge to your clients, current or future employers on a ever increasing competitive market.",
                    "W3Schools has over two decades of experience with teaching coding online.",
                    "Our certificates are recognized and valued by companies looking to employ skilled developers.",
                    "Show the world your coding skills by getting a certification.",
                    "The prices is a small fraction compared to the price of traditional education.",
                    "Document and validate your competence by getting certified!",
                    "Fee:95 USD",
                    "Achievable certification levels:Intermediate (40%)Advanced (75%)Professional (90%)",
                    "Number of questions:Adaptive,60on average",
                    "Requirement to pass:Minimum 40% - Intermediate level",
                    "Time limit:60 minutes",
                    "Number of attempts to pass:3",
                    "Exam deadline:None",
                    "Certification Expiration:None",
                    "Format:Online, multiple choice",
                    "Register now »",
                    "Getting a certificate proves your commitment to upgrading your skills.",
                    "The certificate can be added as credentials to your CV, Resume, LinkedIn profile, and so on.",
                    "It gives you the credibility needed for more responsibilities, larger projects, and a higher salary.",
                    "Knowledge is power, especially in the current job market.",
                    "Documentation of your skills enables you to advance your career or helps you to start a new one.",
                    "Example certificate:",
                    "Each certificate gets a unique link that can be shared with others.",
                    "Validate your certification with the link or QR code.",
                    "Check how it looks like in thisExample.",
                    "Share your certificate on Linkedin the Certifications section in just one click!",
                    "Getting a certificate proves your commitment to upgrade your skills,\ngives you the credibility needed for more responsibilities, larger projects, and a higher salary.",
                    "Get Your Certificate »",
                    "Are you an educator, manager or business owner looking for courses or certifications?",
                    "We are working with schools, companies and organizations from all over the world.",
                    "Get courses and/or certifications for your team here."
                ],
                "lists": [
                    [
                        "Study for free at W3Schools.com",
                        "Study at your own speed",
                        "Test your skills with W3Schools online quizzes",
                        "Apply for your certificate by paying an exam fee",
                        "Take your exam online, at any time, and from any location"
                    ]
                ],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/php/php_ref_overview.asp",
        "cours": {
            "titre": "PHP Reference",
            "description": "",
            "lien": "https://www.w3schools.com/php/php_ref_overview.asp",
            "contenus": {
                "paragraphs": [
                    "This section contains a complete PHP reference documentation.",
                    "The PHP reference contains different categories of all PHP functions, keywords and constants, along with examples."
                ],
                "lists": [],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/php/php_ref_array.asp",
        "cours": {
            "titre": "PHPArrayFunctions",
            "description": "",
            "lien": "https://www.w3schools.com/php/php_ref_array.asp",
            "contenus": {
                "paragraphs": [
                    "The array functions allow you to access and manipulate arrays.",
                    "Simple and multi-dimensional arrays are supported.",
                    "The array functions are part of the PHP core. There is no installation needed to use these functions."
                ],
                "lists": [],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/php/php_ref_calendar.asp",
        "cours": {
            "titre": "PHPCalendarFunctions",
            "description": "",
            "lien": "https://www.w3schools.com/php/php_ref_calendar.asp",
            "contenus": {
                "paragraphs": [
                    "The calendar extension contains functions that simplifies converting between different calendar formats.",
                    "It is based on the Julian Day Count, which is a count of days starting from January 1st, 4713 B.C.",
                    "Note:To convert between calendar formats, you must first convert to Julian Day Count, then to the calendar of your choice.",
                    "Note:The Julian Day Count is not the same as the Julian Calendar!",
                    "For these functions to work, you have to compile PHP with \n--enable-calendar.",
                    "The Windows version of PHP has built-in support for this extension."
                ],
                "lists": [],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/php/php_ref_date.asp",
        "cours": {
            "titre": "PHPDate/TimeFunctions",
            "description": "",
            "lien": "https://www.w3schools.com/php/php_ref_date.asp",
            "contenus": {
                "paragraphs": [
                    "The date/time functions allow you to get the date and time from \nthe server where your PHP script runs. You can then use the date/time functions \nto format the date and time in several ways.",
                    "Note:These functions depend on the locale settings of your server. \nRemember to take daylight saving time and leap years into consideration when \nworking with these functions.",
                    "The PHP date/time functions are part of the PHP core. No installation is required to use these functions.",
                    "The behavior of these functions is affected by settings in php.ini:"
                ],
                "lists": [],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/php/php_ref_directory.asp",
        "cours": {
            "titre": "PHPDirectoryFunctions",
            "description": "",
            "lien": "https://www.w3schools.com/php/php_ref_directory.asp",
            "contenus": {
                "paragraphs": [
                    "The directory functions allow you to retrieve information about directories \nand their contents.",
                    "The PHP directory functions are part of the PHP core. No installation is required to use these functions."
                ],
                "lists": [],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/php/php_ref_error.asp",
        "cours": {
            "titre": "PHPErrorFunctions",
            "description": "",
            "lien": "https://www.w3schools.com/php/php_ref_error.asp",
            "contenus": {
                "paragraphs": [
                    "The error functions are used to deal with error handling and logging.",
                    "The error functions allow us to define own error handling rules, and modify \nthe way the errors can be logged.",
                    "The logging functions allow us to send messages \ndirectly to other machines, emails, or system logs.",
                    "The error reporting functions allow us to customize what level and kind of \nerror feedback is given.",
                    "The PHP error functions are part of the PHP core. No installation is required \nto use these functions.",
                    "The behavior of the error functions is affected by settings in php.ini.",
                    "Errors and logging configuration options:"
                ],
                "lists": [],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/php/php_ref_exception.asp",
        "cours": {
            "titre": "PHPExceptionReference",
            "description": "",
            "lien": "https://www.w3schools.com/php/php_ref_exception.asp",
            "contenus": {
                "paragraphs": [
                    "Exceptions are used by functions and methods to send information about errors and\nunexpected behaviour.",
                    "The Exception object has no public properties, but it has private and protected properties\nwhich can be written to or read from using the constructor and methods.",
                    "The Exception object has the following methods:"
                ],
                "lists": [],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/php/php_ref_filesystem.asp",
        "cours": {
            "titre": "PHPFilesystemFunctions",
            "description": "",
            "lien": "https://www.w3schools.com/php/php_ref_filesystem.asp",
            "contenus": {
                "paragraphs": [
                    "The filesystem functions allow you to access and manipulate the filesystem.",
                    "The filesystem functions are part of the PHP core. There is no installation \nneeded to use these functions.",
                    "When specifying a path on Unix platforms, a forward slash (/) is used as directory separator.",
                    "On Windows platforms, both \nforward slash (/) and backslash (\\) can be used.",
                    "The behavior of the filesystem functions is affected by settings in php.ini."
                ],
                "lists": [],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/php/php_ref_filter.asp",
        "cours": {
            "titre": "PHPFilterFunctions",
            "description": "",
            "lien": "https://www.w3schools.com/php/php_ref_filter.asp",
            "contenus": {
                "paragraphs": [
                    "PHP filters are used to validate and filter data coming from insecure sources, \nlike user input.",
                    "From PHP 5.2.0, the filter functions are enabled by default. There is no installation \nneeded to use these functions.",
                    "The behavior of these functions is affected by settings in php.ini:"
                ],
                "lists": [],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/php/php_ref_ftp.asp",
        "cours": {
            "titre": "PHPFTPFunctions",
            "description": "",
            "lien": "https://www.w3schools.com/php/php_ref_ftp.asp",
            "contenus": {
                "paragraphs": [
                    "The FTP functions give client access to file servers through the File \nTransfer Protocol (FTP).",
                    "The FTP functions are used to open, login and close connections, as well as \nupload, download, rename, delete, and get information on files from file \nservers. Not all of the FTP functions will work with every server or return the \nsame results. The FTP functions became available with PHP 3.",
                    "If you only \nwish to read from or write to a file on an FTP server, consider using the ftp:// \nwrapper with the Filesystem functions which provide a simpler and more intuitive \ninterface.",
                    "For these functions to work, you have to compile PHP with --enable-ftp.",
                    "The Windows version of PHP has built-in support for this extension."
                ],
                "lists": [],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/php/php_ref_json.asp",
        "cours": {
            "titre": "PHPJSONFunctions",
            "description": "",
            "lien": "https://www.w3schools.com/php/php_ref_json.asp",
            "contenus": {
                "paragraphs": [
                    "The JSON extension implements the JavaScript Object Notation data-interchange \nformat.",
                    "In PHP 5, the decoding is handled by a parser based on the JSON_checker by \nDouglas Crockford.",
                    "PHP 7 has a new and improved parser specifically written for PHP and licensed \nunder the PHP license.",
                    "From PHP 5.2.0, the JSON functions are enabled by default. There is no \ninstallation needed to use these functions."
                ],
                "lists": [],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/php/php_ref_keywords.asp",
        "cours": {
            "titre": "PHPKeywords",
            "description": "",
            "lien": "https://www.w3schools.com/php/php_ref_keywords.asp",
            "contenus": {
                "paragraphs": [
                    "PHP has a set of keywords that are reserved words which cannot be used as function\nnames, class names or method names. Prior to PHP 7, these keywords could not be used as\nclass property names either:"
                ],
                "lists": [],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/php/php_ref_libxml.asp",
        "cours": {
            "titre": "PHPlibxmlFunctions",
            "description": "",
            "lien": "https://www.w3schools.com/php/php_ref_libxml.asp",
            "contenus": {
                "paragraphs": [
                    "The libxml functions and constants are used together with SimpleXML, XSLT and \nDOM functions.",
                    "These functions require the libxml package.Download at xmlsoft.org",
                    "PHP: indicates the earliest version of PHP that supports the \n  function."
                ],
                "lists": [],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/php/php_ref_mail.asp",
        "cours": {
            "titre": "PHPMailFunctions",
            "description": "",
            "lien": "https://www.w3schools.com/php/php_ref_mail.asp",
            "contenus": {
                "paragraphs": [
                    "The mail() function allows you to send emails directly from a script.",
                    "For the mail functions to be available, PHP requires an installed and working \nemail system. The program to be used is defined by \nthe configuration settings in the php.ini file.",
                    "The mail functions are part of the PHP core. There is no installation \nneeded to use these functions.",
                    "The behavior of the mail functions is affected by settings in php.ini:"
                ],
                "lists": [],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/php/php_ref_math.asp",
        "cours": {
            "titre": "PHPMathFunctions",
            "description": "",
            "lien": "https://www.w3schools.com/php/php_ref_math.asp",
            "contenus": {
                "paragraphs": [
                    "The math functions can handle values within the range of integer and float types.",
                    "The PHP math functions are part of the PHP core. No installation is required to use these functions."
                ],
                "lists": [],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/php/php_ref_misc.asp",
        "cours": {
            "titre": "PHPMisc.Functions",
            "description": "",
            "lien": "https://www.w3schools.com/php/php_ref_misc.asp",
            "contenus": {
                "paragraphs": [
                    "The misc. functions were only placed here because none of the other \ncategories seemed to fit.",
                    "The misc. functions are part of the PHP core. No installation is required to \nuse these functions.",
                    "The behavior of the misc. functions is affected by settings in the php.ini file.",
                    "Misc. configuration options:"
                ],
                "lists": [],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/php/php_ref_mysqli.asp",
        "cours": {
            "titre": "PHPMySQLiFunctions",
            "description": "",
            "lien": "https://www.w3schools.com/php/php_ref_mysqli.asp",
            "contenus": {
                "paragraphs": [
                    "The MySQLi functions allows you to access MySQL database servers.",
                    "Note:The MySQLi extension is designed to work with MySQL version 4.1.13 or newer.",
                    "For the MySQLi functions to be available, you must compile PHP with support for the \nMySQLi extension.",
                    "The MySQLi extension was introduced with PHP version 5.0.0. The MySQL Native Driver was included in PHP version 5.3.0.",
                    "For installation details, go to:http://php.net/manual/en/mysqli.installation.php",
                    "For runtime configuration details, go to:http://php.net/manual/en/mysqli.configuration.php"
                ],
                "lists": [],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/php/php_ref_network.asp",
        "cours": {
            "titre": "PHP Network Functions",
            "description": "",
            "lien": "https://www.w3schools.com/php/php_ref_network.asp",
            "contenus": {
                "paragraphs": [
                    "The Network functions contains various network function and let you manipulate information sent to the browser by the \nWeb server, before any other output has been sent.",
                    "The Network functions are part of the PHP core. There is no installation needed to use these functions."
                ],
                "lists": [],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/php/php_ref_output_control.asp",
        "cours": {
            "titre": "PHPOutput ControlFunctions",
            "description": "",
            "lien": "https://www.w3schools.com/php/php_ref_output_control.asp",
            "contenus": {
                "paragraphs": [
                    "PHP provides a set of functions that control what content is sent to the browser and when.\nThis is referred to asoutput control.",
                    "Output can come from any of the following sources:",
                    "PHP and the backend on which it is running may hold the output in a buffer before sending\nit to the user.",
                    "Note:The output control functions can create any number of output buffers. Output buffers catch\noutput given by the program. Each new output buffer is placed on the top of a stack of\noutput buffers, and any output it provides will be caught by the buffer below it. The output\ncontrol functions handle only the topmost buffer, so the topmost buffer must be removed in\norder to control the buffers below it.",
                    "The PHP output control functions are part of the PHP core. No installation is required to use these functions.",
                    "The behavior of output control functions is affected by settings in php.ini:"
                ],
                "lists": [
                    [
                        "echo,print,printf,print_r... and other similar functions and statements",
                        "Notices, warnings and errors from PHP",
                        "Any content outside of the<?php ?>tags"
                    ]
                ],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/php/php_ref_regex.asp",
        "cours": {
            "titre": "PHPRegular ExpressionFunctions",
            "description": "",
            "lien": "https://www.w3schools.com/php/php_ref_regex.asp",
            "contenus": {
                "paragraphs": [
                    "Regular expressions allow you to search for and replace patterns in strings.",
                    "The PHP regular expression functions are part of the PHP core. No installation is required to use these functions.",
                    "These settings in php.ini can be used to limit the amount time or resources used when\nevaluating regular expressions.",
                    "Modifiers can change how a search is performed.",
                    "Brackets are used to find a range of characters:",
                    "Metacharacters are characters with a special meaning:",
                    "Quantifiers define quantities:",
                    "Note:If your expression needs to search for one of the special characters you can use a\nbackslash ( \\ ) to escape them.\nFor example, to search for one or more question marks you can use the following\nexpression: $pattern = '/\\?+/';"
                ],
                "lists": [],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/php/php_ref_simplexml.asp",
        "cours": {
            "titre": "PHPSimpleXMLFunctions",
            "description": "",
            "lien": "https://www.w3schools.com/php/php_ref_simplexml.asp",
            "contenus": {
                "paragraphs": [
                    "SimpleXML is an extension that allows us to easily manipulate and get XML \ndata.",
                    "SimpleXML provides an easy way of getting an element's name, attributes and \ntextual content if you know the XML document's structure or layout.",
                    "SimpleXML turns an XML document into a data structure you can iterate through \nlike a collection of arrays and objects.",
                    "From PHP 5, the SimpleXML functions are part of the PHP core. No installation is required to use these functions."
                ],
                "lists": [],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/php/php_ref_stream.asp",
        "cours": {
            "titre": "PHP Stream Functions",
            "description": "",
            "lien": "https://www.w3schools.com/php/php_ref_stream.asp",
            "contenus": {
                "paragraphs": [
                    "Streams are the way of generalizing file, network, data compression, and \nother operations which share a common set of functions and uses. In its simplest \ndefinition, a stream is a resource object which exhibits streamable behavior. \nThat is, it can be read from or written to in a linear fashion, and may be able \nto fseek() to an arbitrary location within the stream.A wrapper is \nadditional code which tells the stream how to handle specific \nprotocols/encodings.",
                    "The Stream functions are part of the PHP core. There is no installation needed to use these functions."
                ],
                "lists": [],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/php/php_ref_string.asp",
        "cours": {
            "titre": "PHPStringFunctions",
            "description": "",
            "lien": "https://www.w3schools.com/php/php_ref_string.asp",
            "contenus": {
                "paragraphs": [
                    "The PHP string functions are part of the PHP core. No installation is required to use these functions."
                ],
                "lists": [],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/php/php_ref_variable_handling.asp",
        "cours": {
            "titre": "PHPVariable HandlingFunctions",
            "description": "",
            "lien": "https://www.w3schools.com/php/php_ref_variable_handling.asp",
            "contenus": {
                "paragraphs": [
                    "The PHP variable handling functions are part of the PHP core. No installation is required to use these functions."
                ],
                "lists": [],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/php/php_ref_xml.asp",
        "cours": {
            "titre": "PHPXML ParserFunctions",
            "description": "",
            "lien": "https://www.w3schools.com/php/php_ref_xml.asp",
            "contenus": {
                "paragraphs": [
                    "The XML functions lets you parse, but not validate, XML documents.",
                    "XML is a data format for standardized structured document exchange. More \ninformation on XML can be found in ourXML Tutorial.",
                    "This extension uses the Expat XML parser.",
                    "Expat is an event-based parser, it views an XML document as a series of \nevents. When an event occurs, it calls a specified function to handle it.",
                    "Expat is a non-validating parser, and ignores any DTDs linked to a document. \nHowever, if the document is not well formed it will end with an error message.",
                    "Because it is an event-based, non validating parser, Expat is fast and well \nsuited for web applications.",
                    "The XML parser functions lets you create XML parsers and define handlers for XML \nevents.",
                    "The XML functions are part of the PHP core. There is no installation needed to use these functions."
                ],
                "lists": [],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/php/php_ref_zip.asp",
        "cours": {
            "titre": "PHPZipFunctions",
            "description": "",
            "lien": "https://www.w3schools.com/php/php_ref_zip.asp",
            "contenus": {
                "paragraphs": [
                    "The Zip files functions allows you to read ZIP files.",
                    "The ZIP extension requireslibzip.",
                    "Linux Systems",
                    "For these functions to work, you have to compile PHP with --enable-zip.",
                    "PHP 5.6:Use the--with-libzip=DIRconfigure option to use a system libzip installation. \nlibzip version 0.11 is required, with 0.11.2 or later recommended.",
                    "PHP 7.3:Building against the bundled libzip is discouraged, but still \npossible by adding --without-libzip to the configuration.",
                    "Windows Systems",
                    "Before PHP 5.3:Users must enable \"php_zip.dll\" inside of \"php.ini\" for \nthese functions to work.",
                    "From PHP 5.3:The ZIP extension is built-in."
                ],
                "lists": [],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/php/php_ref_timezones.asp",
        "cours": {
            "titre": "PHPTimezones",
            "description": "",
            "lien": "https://www.w3schools.com/php/php_ref_timezones.asp",
            "contenus": {
                "paragraphs": [
                    "Below is a complete list of the timezones supported by PHP, which are useful with several PHP date functions."
                ],
                "lists": [
                    [
                        "Africa",
                        "America",
                        "Antarctica",
                        "Arctic",
                        "Asia",
                        "Atlantic",
                        "Australia",
                        "Europe",
                        "Indian",
                        "Pacific"
                    ]
                ],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    }
]