[
    {
        "url": "https://www.w3schools.com/java/default.asp",
        "cours": {
            "titre": "JavaTutorial",
            "description": "Learn JavaJava is a popular programming language.Java is used to develop mobile apps, web apps, desktop apps, games and much \nmore.Start learning Java now »",
            "lien": "https://www.w3schools.com/java/default.asp",
            "contenus": {
                "paragraphs": [
                    "Java is a popular programming language.",
                    "Java is used to develop mobile apps, web apps, desktop apps, games and much \nmore.",
                    "Our \"Try it Yourself\" editor makes it easy to learn Java. You can edit Java code and view the result \nin your browser.",
                    "Try it Yourself »",
                    "Click on the \"Run example\" button to see how it works.",
                    "We recommend reading this tutorial, in the sequence listed in the left menu.",
                    "Java is an object oriented language and some concepts may be new. Take breaks when needed, and go\nover the examples as many times as needed.",
                    "Many chapters in this tutorial end with an exercise where you can check your level of knowledge.",
                    "See all Java Exercises",
                    "Test your Java skills with a quiz.",
                    "Start Java Quiz",
                    "Learn by examples! This tutorial supplements all explanations with clarifying examples.",
                    "See All Java Examples",
                    "Track your progress with the free \"My Learning\" program here at W3Schools.",
                    "Log in to your account, and start earning points!",
                    "This is an optional feature. You can study at W3Schools without using My Learning.",
                    "You will also find complete keyword and method references:",
                    "Java Keywords",
                    "Java String Methods",
                    "Java Math Methods",
                    "Java Output Methods",
                    "Java Arrays Methods",
                    "Java ArrayList Methods",
                    "Java LinkedList Methods",
                    "Java HashMap Methods",
                    "Java Scanner Methods",
                    "Java Iterator Methods",
                    "Java Errors and Exception Types",
                    "Download Java from the official Java web site:https://www.oracle.com",
                    "Get certified by completingthecourse"
                ],
                "lists": [],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/java/java_intro.asp",
        "cours": {
            "titre": "JavaIntroduction",
            "description": "",
            "lien": "https://www.w3schools.com/java/java_intro.asp",
            "contenus": {
                "paragraphs": [
                    "Java is a popular programming language, created in 1995.",
                    "It is owned by Oracle, and more than3 billiondevices run Java.",
                    "It is used for:",
                    "When you are finished with this tutorial, you will be able to write basic Java programs and create real-life examples.",
                    "It is not necessary to have any prior programming experience."
                ],
                "lists": [
                    [
                        "Mobile applications (specially Android apps)",
                        "Desktop applications",
                        "Web applications",
                        "Web servers and application servers",
                        "Games",
                        "Database connection",
                        "And much, much more!"
                    ],
                    [
                        "Java works on different platforms (Windows, Mac, Linux, Raspberry Pi, etc.)",
                        "It is one of the most popular programming languages in the world",
                        "It has a large demand in the current job market",
                        "It is easy to learn and simple to use",
                        "It is open-source and free",
                        "It is secure, fast and powerful",
                        "It has huge community support (tens of millions of developers)",
                        "Java is an object oriented language which gives a clear structure to programs and allows code to be reused, lowering development costs",
                        "As Java is close toC++andC#, it makes it easy for programmers to switch to Java or vice versa"
                    ]
                ],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/java/java_getstarted.asp",
        "cours": {
            "titre": "JavaGetting Started",
            "description": "",
            "lien": "https://www.w3schools.com/java/java_getstarted.asp",
            "contenus": {
                "paragraphs": [
                    "Some PCs might have Java already installed.",
                    "To check if you have Java installed on a Windows PC, search in the start bar for Java or type the following in Command Prompt (cmd.exe):",
                    "If Java is installed, you will see something like this (depending on version):",
                    "If you do not have Java installed on your computer, you can download it for free atoracle.com.",
                    "Note:In this tutorial, we will write Java code in a text editor. However, it is possible to write Java in an Integrated Development Environment, such as IntelliJ IDEA, Netbeans or Eclipse, which are particularly useful when managing larger collections of Java files.",
                    "In Java, every application begins with a class name, and that class must match the filename.",
                    "Let's create our first Java file, called Main.java, which can be done in any text editor \n(like Notepad).",
                    "The file should contain a \"Hello World\" message, which is written with the \nfollowing code:",
                    "Main.java",
                    "Try it Yourself »",
                    "Don't worry if you don't understand the code above - we will discuss it in detail in later chapters. \nFor now, focus onhowto run the code above.",
                    "Save the code in Notepad as \"Main.java\". Open Command Prompt (cmd.exe), navigate to the directory where you saved your file, and type \"javac \nMain.java\":",
                    "This will compile your code. If there are no errors in the code, the command prompt will take you to the next line. \nNow, type \"java Main\" to run the file:",
                    "The output should read:",
                    "Congratulations!You have written and executed your first Java program.",
                    "When learning Java at W3Schools.com, you can use our \"Try it Yourself\" tool, \nwhich shows both the code and the result. It is used to write, run, and test \ncode right in your browser:",
                    "Main.java",
                    "Try it Yourself »",
                    "This editor will be used in the entire tutorial to demonstrate the different aspects of Java."
                ],
                "lists": [],
                "examples": [
                    "C:\\Users\\Your Name>java -version",
                    "C:\\Users\\Your Name>javac Main.java",
                    "C:\\Users\\Your Name>java Main"
                ]
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/java/java_syntax.asp",
        "cours": {
            "titre": "JavaSyntax",
            "description": "",
            "lien": "https://www.w3schools.com/java/java_syntax.asp",
            "contenus": {
                "paragraphs": [
                    "In the previous chapter, we created a Java file calledMain.java, and we used the following code to print \"Hello World\" to the screen:",
                    "Main.java",
                    "Try it Yourself »",
                    "Every line of code that runs in Java must be inside aclass. \nAnd the class name should always start with \nan uppercase first letter. In our example, we named the classMain.",
                    "Note:Java is case-sensitive: \"MyClass\" and \"myclass\" has \ndifferent meaning.",
                    "The name of the java filemust matchthe class name.\nWhen saving the file, save it using the class name and add \".java\" to the end of \nthe filename. To run the example above on your computer, make sure that Java is \nproperly installed: Go to theGet Started Chapterfor how to install Java. The output should be:",
                    "Themain()method is required and you will \nsee it in every Java \nprogram:",
                    "Any code inside themain()method will be executed. \nDon't worry about the keywords before and after it. You will get to know \nthem bit by bit while reading this tutorial.",
                    "For now, just remember that every Java program has aclassname which \nmust match the filename, and that every program must contain themain()method.",
                    "Inside themain()method, we can use theprintln()method to print a line of text to the screen:",
                    "Try it Yourself »",
                    "Note:The curly braces{}marks the beginning and the end of a block of code.",
                    "Systemis a built-in Java class that contains useful members, such asout, \n  which is short for \"output\". Theprintln()method, short for \n  \"print line\", is used to print a value to the screen (or a file).",
                    "Don't worry too much about howSystem,outandprintln()works. Just know that you need them \ntogether to print stuff to the screen.",
                    "You should also note that each code statement must end with a semicolon (;)."
                ],
                "lists": [],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/java/java_output.asp",
        "cours": {
            "titre": "JavaOutput / Print",
            "description": "",
            "lien": "https://www.w3schools.com/java/java_output.asp",
            "contenus": {
                "paragraphs": [
                    "You learned from the previous chapter that you can use theprintln()method to output values or print text in Java:",
                    "Try it Yourself »",
                    "You can add as manyprintln()methods as you want. Note that it will add a new line for each method:",
                    "Try it Yourself »",
                    "Text must be wrapped inside double quotations marks\"\".",
                    "If you forget the double quotes, an error occurs:",
                    "Try it Yourself »",
                    "There is also aprint()method, which is similar toprintln().",
                    "The only difference is that it does not insert a new line at the end of the output:",
                    "Try it Yourself »",
                    "Note that we add an extra space (after \"Hello World!\" in the example above) \nfor better readability.",
                    "In this tutorial, we will only useprintln()as it makes the code output easier to read."
                ],
                "lists": [],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/java/java_output_numbers.asp",
        "cours": {
            "titre": "JavaOutput Numbers",
            "description": "",
            "lien": "https://www.w3schools.com/java/java_output_numbers.asp",
            "contenus": {
                "paragraphs": [
                    "You can also use theprintln()method to \nprint numbers.",
                    "However, unlike text, we don't put numbers inside double \nquotes:",
                    "Try it Yourself »",
                    "You can also perform mathematical calculations inside theprintln()method:",
                    "Try it Yourself »",
                    "Try it Yourself »"
                ],
                "lists": [],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/java/java_comments.asp",
        "cours": {
            "titre": "JavaComments",
            "description": "",
            "lien": "https://www.w3schools.com/java/java_comments.asp",
            "contenus": {
                "paragraphs": [
                    "Comments can be used to explain Java code, and to make it more readable. It can also be used to \nprevent execution when testing alternative code.",
                    "Single-line comments start with two forward slashes (//).",
                    "Any text between//and the end of the line \nis ignored by Java (will not be executed).",
                    "This example uses a single-line comment before a line of code:",
                    "Try it Yourself »",
                    "This example uses a single-line comment at the end of a line of code:",
                    "Try it Yourself »",
                    "Multi-line comments start with/*and ends with*/.",
                    "Any text between/*and*/will be ignored by Java.",
                    "This example uses a multi-line comment (a comment block) to explain the code:",
                    "Try it Yourself »",
                    "It's up to you which one you use. Normally, we use//for short comments, and/* */for longer."
                ],
                "lists": [],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/java/java_variables.asp",
        "cours": {
            "titre": "JavaVariables",
            "description": "",
            "lien": "https://www.w3schools.com/java/java_variables.asp",
            "contenus": {
                "paragraphs": [
                    "Variables are containers for storing data values.",
                    "In Java, there are differenttypesof variables, for example:",
                    "To create a variable, you must specify the type and assign it a value:",
                    "Wheretypeis one of Java's types (such asintorString), andvariableNameis the name of the variable (such asxorname). Theequal signis used to assign values to the variable.",
                    "To create a variable that should store text, look at the following example:",
                    "Create a variable callednameof typeStringand assign it the value \"John\".Then we useprintln()to print thenamevariable:",
                    "Try it Yourself »",
                    "To create a variable that should store a number, look at the following example:",
                    "Create a variable calledmyNumof typeintand assign it the value15:",
                    "Try it Yourself »",
                    "You can also declare a variable without assigning the value, and assign the value later:",
                    "Try it Yourself »",
                    "Note that if you assign a new value to an existing variable, it will overwrite the previous value:",
                    "Change the value ofmyNumfrom15to20:",
                    "Try it Yourself »",
                    "If you don't want others (or yourself) to overwrite existing values, use thefinalkeyword (this will declare the variable as \"final\" or \"constant\", which means unchangeable and read-only):",
                    "Try it Yourself »",
                    "A demonstration of how to declare variables of other types:",
                    "You will learn more aboutdata typesin the next section."
                ],
                "lists": [
                    [
                        "String- stores text, such as \"Hello\". String values are \n surrounded by double quotes",
                        "int- stores integers (whole numbers), without decimals, such as 123 or -123",
                        "float- stores floating point numbers, with decimals, such as 19.99 or -19.99",
                        "char- stores single characters, such as \n 'a' or 'B'. Char values are surrounded by single quotes",
                        "boolean- stores values with two states: \n true or false"
                    ]
                ],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/java/java_variables_print.asp",
        "cours": {
            "titre": "JavaPrint Variables",
            "description": "",
            "lien": "https://www.w3schools.com/java/java_variables_print.asp",
            "contenus": {
                "paragraphs": [
                    "Theprintln()method is often used to display variables.",
                    "To combine both text and a variable, use the+character:",
                    "Try it Yourself »",
                    "You can also use the+character to add a variable to another variable:",
                    "Try it Yourself »",
                    "For numeric values, the+character works as a mathematicaloperator(notice that we useint(integer) variables here):",
                    "Try it Yourself »",
                    "From the example above, you can expect:"
                ],
                "lists": [
                    [
                        "x stores the value 5",
                        "y stores the value 6",
                        "Then we use theprintln()method to display the value of x + y, \n which is11"
                    ]
                ],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/java/java_variables_multiple.asp",
        "cours": {
            "titre": "JavaDeclare Multiple Variables",
            "description": "",
            "lien": "https://www.w3schools.com/java/java_variables_multiple.asp",
            "contenus": {
                "paragraphs": [
                    "To declare more than one variable of thesame type, you can \nuse a comma-separated list:",
                    "Instead of writing:",
                    "You can simply write:",
                    "Try it Yourself »",
                    "You can also assign thesame valueto multiple variables in one line:",
                    "Try it Yourself »"
                ],
                "lists": [],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/java/java_variables_identifiers.asp",
        "cours": {
            "titre": "JavaIdentifiers",
            "description": "",
            "lien": "https://www.w3schools.com/java/java_variables_identifiers.asp",
            "contenus": {
                "paragraphs": [
                    "All Javavariablesmust beidentifiedwithunique names.",
                    "These unique names are calledidentifiers.",
                    "Identifiers can be short names (like x and y) or more descriptive names (age, sum, totalVolume).",
                    "Note:It is recommended to use descriptive names in order to \ncreate understandable and maintainable code:",
                    "Try it Yourself »",
                    "The general rules for naming variables are:"
                ],
                "lists": [
                    [
                        "Names can contain letters, digits, underscores, and dollar signs",
                        "Names must begin with a letter",
                        "Names should start with a lowercase letter, and cannot contain whitespace",
                        "Names can also begin with $ and _",
                        "Names are case-sensitive (\"myVar\" and \"myvar\" are different variables)",
                        "Reserved words (like Java keywords, such asintorboolean) cannot be used as names"
                    ]
                ],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/java/java_variables_reallife.asp",
        "cours": {
            "titre": "JavaVariables - Examples",
            "description": "",
            "lien": "https://www.w3schools.com/java/java_variables_reallife.asp",
            "contenus": {
                "paragraphs": [
                    "Often in our examples, we simplify variable names to match their data type (myInt or myNum forinttypes, myChar forchartypes, and so on). This is done to avoid confusion.",
                    "However, for a practical example of using variables, we have created a program that stores different data about a college student:",
                    "Try it Yourself »",
                    "In this real-life example, we create a program to calculate the area of a rectangle (by multiplying the length and width):",
                    "Try it Yourself »"
                ],
                "lists": [],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/java/java_data_types.asp",
        "cours": {
            "titre": "JavaData Types",
            "description": "",
            "lien": "https://www.w3schools.com/java/java_data_types.asp",
            "contenus": {
                "paragraphs": [
                    "As explained in the previous chapter, avariablein Java must be a specified data type:",
                    "Try it Yourself »",
                    "Data types are divided into two groups:",
                    "A primitive data type specifies the type of a variable and the kind of values it can hold.",
                    "There are eight primitive data types in Java:"
                ],
                "lists": [
                    [
                        "Primitive data types - includesbyte,short,int,long,float,double,booleanandchar",
                        "Non-primitive data types - such asString,ArraysandClasses(you will learn more about these in a later chapter)"
                    ]
                ],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/java/java_data_types_numbers.asp",
        "cours": {
            "titre": "JavaNumbers",
            "description": "",
            "lien": "https://www.w3schools.com/java/java_data_types_numbers.asp",
            "contenus": {
                "paragraphs": [
                    "Primitive number types are divided into two groups:",
                    "Integer typesstores whole numbers, positive or negative (such as 123 or -456), without decimals. \nValid types arebyte,short,intandlong. Which type you should use, depends on the numeric value.",
                    "Floating point typesrepresents numbers with a fractional part, \ncontaining one or more decimals. There are two types:floatanddouble.",
                    "Even though there are many numeric types in Java, the most used for numbers \nareint(for whole numbers) anddouble(for floating point numbers). However, we will describe them all as you continue to \nread.",
                    "Thebytedata type can store whole numbers \nfrom -128 to 127. This can be used instead ofintor other integer types to \nsave memory when you are certain that the value will be within -128 and 127:",
                    "Try it Yourself »",
                    "Theshortdata type can store whole numbers from -32768 to 32767:",
                    "Try it Yourself »",
                    "Theintdata type can store whole numbers from -2147483648 to 2147483647.In general, and in our tutorial, theintdata type is \nthe preferred data type when we create variables with a numeric value.",
                    "Try it Yourself »",
                    "Thelongdata type can store whole numbers from -9223372036854775808 to 9223372036854775807. This is used when int is not large enough to store the value. Note that you should end the value with an \"L\":",
                    "Try it Yourself »",
                    "You should use a floating point type whenever you need a number with a decimal, such as 9.99 or 3.14515.",
                    "Thefloatanddoubledata types can store fractional numbers. Note that you should end the value with an \"f\" for floats and \"d\" for doubles:",
                    "Try it Yourself »",
                    "Try it Yourself »",
                    "Usefloatordouble?",
                    "Theprecisionof a floating point value indicates how many digits the value can have \nafter the decimal point.\nThe precision offloatis only six or seven \ndecimal digits, whiledoublevariables have a \nprecision of about 16 digits. Therefore it is safer to usedoublefor most calculations.",
                    "A floating point number can also be a scientific number with an \"e\" to indicate the power of 10:",
                    "Try it Yourself »"
                ],
                "lists": [],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/java/java_data_types_boolean.asp",
        "cours": {
            "titre": "JavaBoolean Data Types",
            "description": "",
            "lien": "https://www.w3schools.com/java/java_data_types_boolean.asp",
            "contenus": {
                "paragraphs": [
                    "Very often in programming, you will need a data type that can only have one of two values, like:",
                    "For this, Java has abooleandata type, which can only take the valuestrueorfalse:",
                    "Try it Yourself »",
                    "Boolean values are mostly used for conditional testing.",
                    "You will learn much more aboutbooleansandconditionslater in this tutorial."
                ],
                "lists": [
                    [
                        "YES / NO",
                        "ON / OFF",
                        "TRUE / FALSE"
                    ]
                ],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/java/java_data_types_characters.asp",
        "cours": {
            "titre": "JavaCharacters",
            "description": "",
            "lien": "https://www.w3schools.com/java/java_data_types_characters.asp",
            "contenus": {
                "paragraphs": [
                    "Thechardata type is used to store asinglecharacter. The character must be \nsurrounded by single quotes, like 'A' or 'c':",
                    "Try it Yourself »",
                    "Alternatively, if you are familiar with ASCII values, you can use those to display certain characters:",
                    "Try it Yourself »",
                    "Tip:A list of all ASCII values can be found in ourASCII Table Reference.",
                    "TheStringdata type is used to store a sequence of characters (text). String values must be surrounded by double quotes:",
                    "Try it Yourself »",
                    "The String type is so much used and integrated in Java, that some call it \"the specialninthtype\".",
                    "A String in Java is actually anon-primitivedata type, because it refers to \nan object. The String object has methods that are used to perform certain \noperations on strings.Don't worry if you don't understand the term \"object\" just yet. We will learn more about strings and objects in a later chapter."
                ],
                "lists": [],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/java/java_data_types_reallife.asp",
        "cours": {
            "titre": "JavaData Types Example",
            "description": "",
            "lien": "https://www.w3schools.com/java/java_data_types_reallife.asp",
            "contenus": {
                "paragraphs": [
                    "Here's a real-life example of using different data types, to calculate and output the total cost of a number of items:",
                    "Try it Yourself »"
                ],
                "lists": [],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/java/java_data_types_non-prim.asp",
        "cours": {
            "titre": "JavaNon-Primitive Data Types",
            "description": "",
            "lien": "https://www.w3schools.com/java/java_data_types_non-prim.asp",
            "contenus": {
                "paragraphs": [
                    "Non-primitive data types are calledreference typesbecause \nthey refer to objects.",
                    "The main differences betweenprimitiveandnon-primitivedata types are:",
                    "Examples of non-primitive types areStrings,Arrays,Classesetc. You will learn more about these in a later chapter."
                ],
                "lists": [
                    [
                        "Primitive types in Java are predefined and built into the language, while \nnon-primitive types are created by the programmer (except forString).",
                        "Non-primitive types can be used to call methods to perform certain operations, \nwhereas primitive types cannot.",
                        "Primitive types start with a lowercase letter (likeint), while non-primitive types typically starts with an uppercase letter \n(likeString).",
                        "Primitive types always hold a value, whereas non-primitive types can benull."
                    ]
                ],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/java/java_type_casting.asp",
        "cours": {
            "titre": "JavaType Casting",
            "description": "",
            "lien": "https://www.w3schools.com/java/java_type_casting.asp",
            "contenus": {
                "paragraphs": [
                    "Type casting is when you assign a value of one primitive data type to another type.",
                    "In Java, there are two types of casting:",
                    "Widening casting is done automatically when passing a smaller size type to a \nlarger size type:",
                    "Try it Yourself »",
                    "Narrowing casting must be done manually by placing the type in parentheses()in front of the value:",
                    "Try it Yourself »",
                    "Here's a real-life example of type casting where we create a program to \ncalculate the percentage of a user's score in relation to the maximum score in a \ngame.",
                    "We use type casting to make sure that the result is afloating-pointvalue, rather than an integer:",
                    "Try it Yourself »"
                ],
                "lists": [
                    [
                        "Widening Casting(automatically) - converting a smaller type \nto a larger type sizebyte->short->char->int->long->float->doubleNarrowing Casting(manually) - converting a larger type \nto a smaller size typedouble->float->long->int->char->short->byte",
                        "Narrowing Casting(manually) - converting a larger type \nto a smaller size typedouble->float->long->int->char->short->byte"
                    ]
                ],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/java/java_operators.asp",
        "cours": {
            "titre": "JavaOperators",
            "description": "",
            "lien": "https://www.w3schools.com/java/java_operators.asp",
            "contenus": {
                "paragraphs": [
                    "Operators are used to perform operations on variables and values.",
                    "In the example below, we use the+operatorto add together two values:",
                    "Try it Yourself »",
                    "Although the+operator is often used to add together two values, like in the example above, it can also be used to add together a variable and a value, or a variable and another variable:",
                    "Try it Yourself »",
                    "Java divides the operators into the following groups:",
                    "Arithmetic operators are used to perform common mathematical operations.",
                    "Assignment operators are used to assign values to variables.",
                    "In the example below, we use theassignmentoperator (=) \nto assign the value10to a variable calledx:",
                    "Try it Yourself »",
                    "Theaddition assignmentoperator (+=) adds a value to a variable:",
                    "Try it Yourself »",
                    "A list of all assignment operators:",
                    "Comparison operators are used to compare two values (or variables). This is important in programming, because it helps us to find answers and make decisions.",
                    "The return value of a comparison is eithertrueorfalse. These values are known asBoolean values, and you will learn more about them in theBooleansandIf..Elsechapter.",
                    "In the following example, we use thegreater thanoperator (>) to find out if 5 is greater than 3:",
                    "Try it Yourself »",
                    "You can also test fortrueorfalsevalues with logical operators.",
                    "Logical operators are used to determine the logic between variables or \nvalues:"
                ],
                "lists": [
                    [
                        "Arithmetic operators",
                        "Assignment operators",
                        "Comparison operators",
                        "Logical operators",
                        "Bitwise operators"
                    ]
                ],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/java/java_strings.asp",
        "cours": {
            "titre": "JavaStrings",
            "description": "",
            "lien": "https://www.w3schools.com/java/java_strings.asp",
            "contenus": {
                "paragraphs": [
                    "Strings are used for storing text.",
                    "AStringvariable contains a collection of characters surrounded by double quotes:",
                    "Create a variable of typeStringand assign it a value:",
                    "Try it Yourself »",
                    "A String in Java is actually an object, which contain methods that can perform certain operations on strings. For example, the length of a string can be found with thelength()method:",
                    "Try it Yourself »",
                    "There are many string methods available, for exampletoUpperCase()andtoLowerCase():",
                    "Try it Yourself »",
                    "TheindexOf()method returns theindex(the position) \nof the first occurrence of a specified text in a string \n(including whitespace):",
                    "Try it Yourself »",
                    "Java counts positions from zero.0 is the first position in a \nstring, 1 is the second, 2 is the third ...",
                    "For a complete reference of String methods, go to ourJava String Methods Reference.",
                    "The reference contains descriptions and examples of all string methods."
                ],
                "lists": [],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/java/java_strings_concat.asp",
        "cours": {
            "titre": "JavaString Concatenation",
            "description": "",
            "lien": "https://www.w3schools.com/java/java_strings_concat.asp",
            "contenus": {
                "paragraphs": [
                    "The+operator can be used between strings to \ncombine them. This is calledconcatenation:",
                    "Try it Yourself »",
                    "Note that we have added an empty text (\" \") to create a space between firstName and lastName on print.",
                    "You can also use theconcat()method to concatenate two strings:",
                    "Try it Yourself »"
                ],
                "lists": [],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/java/java_strings_numbers.asp",
        "cours": {
            "titre": "JavaNumbers and Strings",
            "description": "",
            "lien": "https://www.w3schools.com/java/java_strings_numbers.asp",
            "contenus": {
                "paragraphs": [
                    "WARNING!",
                    "Java uses the+operator for both addition and concatenation.",
                    "Numbers are added. Strings are concatenated.",
                    "If you add two numbers, the result will be a number:",
                    "Try it Yourself »",
                    "If you add two strings, the result will be a string concatenation:",
                    "Try it Yourself »",
                    "If you add a number and a string, the result will be a string concatenation:",
                    "Try it Yourself »"
                ],
                "lists": [],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/java/java_strings_specchars.asp",
        "cours": {
            "titre": "JavaSpecial Characters",
            "description": "",
            "lien": "https://www.w3schools.com/java/java_strings_specchars.asp",
            "contenus": {
                "paragraphs": [
                    "Because strings must be written within quotes, Java will misunderstand this string, \nand generate an error:",
                    "The solution to avoid this problem, is to use thebackslash escape character.",
                    "The backslash (\\) escape character turns special characters into string characters:",
                    "The sequence\\\"inserts a double quote in a string:ExampleString txt = \"We are the so-called \\\"Vikings\\\" from the north.\";Try it Yourself »The sequence\\'inserts a single quote in a string:ExampleString txt = \"It\\'s alright.\";Try it Yourself »The sequence\\\\inserts a single backslash in a string:ExampleString txt = \"The character \\\\ is called backslash.\";Try it Yourself »Other common escape sequences that are valid in Java are:CodeResultTry it\\nNew LineTry it »\\rCarriage ReturnTry it »\\tTabTry it »\\bBackspaceTry it »\\fForm Feed❮ PreviousNext ❯★+1Track your progress - it's free!Log inSign Up",
                    "ExampleString txt = \"We are the so-called \\\"Vikings\\\" from the north.\";Try it Yourself »The sequence\\'inserts a single quote in a string:ExampleString txt = \"It\\'s alright.\";Try it Yourself »The sequence\\\\inserts a single backslash in a string:ExampleString txt = \"The character \\\\ is called backslash.\";Try it Yourself »Other common escape sequences that are valid in Java are:CodeResultTry it\\nNew LineTry it »\\rCarriage ReturnTry it »\\tTabTry it »\\bBackspaceTry it »\\fForm Feed❮ PreviousNext ❯★+1Track your progress - it's free!Log inSign Up",
                    "Try it Yourself »",
                    "The sequence\\'inserts a single quote in a string:ExampleString txt = \"It\\'s alright.\";Try it Yourself »The sequence\\\\inserts a single backslash in a string:ExampleString txt = \"The character \\\\ is called backslash.\";Try it Yourself »Other common escape sequences that are valid in Java are:CodeResultTry it\\nNew LineTry it »\\rCarriage ReturnTry it »\\tTabTry it »\\bBackspaceTry it »\\fForm Feed❮ PreviousNext ❯★+1Track your progress - it's free!Log inSign Up",
                    "ExampleString txt = \"It\\'s alright.\";Try it Yourself »The sequence\\\\inserts a single backslash in a string:ExampleString txt = \"The character \\\\ is called backslash.\";Try it Yourself »Other common escape sequences that are valid in Java are:CodeResultTry it\\nNew LineTry it »\\rCarriage ReturnTry it »\\tTabTry it »\\bBackspaceTry it »\\fForm Feed❮ PreviousNext ❯★+1Track your progress - it's free!Log inSign Up",
                    "Try it Yourself »",
                    "The sequence\\\\inserts a single backslash in a string:ExampleString txt = \"The character \\\\ is called backslash.\";Try it Yourself »Other common escape sequences that are valid in Java are:CodeResultTry it\\nNew LineTry it »\\rCarriage ReturnTry it »\\tTabTry it »\\bBackspaceTry it »\\fForm Feed❮ PreviousNext ❯★+1Track your progress - it's free!Log inSign Up",
                    "ExampleString txt = \"The character \\\\ is called backslash.\";Try it Yourself »Other common escape sequences that are valid in Java are:CodeResultTry it\\nNew LineTry it »\\rCarriage ReturnTry it »\\tTabTry it »\\bBackspaceTry it »\\fForm Feed❮ PreviousNext ❯★+1Track your progress - it's free!Log inSign Up",
                    "Try it Yourself »",
                    "Other common escape sequences that are valid in Java are:"
                ],
                "lists": [],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/java/java_math.asp",
        "cours": {
            "titre": "JavaMath",
            "description": "",
            "lien": "https://www.w3schools.com/java/java_math.asp",
            "contenus": {
                "paragraphs": [
                    "The Java Math class has many methods that allows you to perform mathematical tasks on numbers.",
                    "TheMath.max(x,y)method can be used to find the highest value ofxandy:",
                    "Try it Yourself »",
                    "TheMath.min(x,y)method can be used to find the lowest value ofxandy:",
                    "Try it Yourself »",
                    "TheMath.sqrt(x)method returns the square root ofx:",
                    "Try it Yourself »",
                    "TheMath.abs(x)method returns the absolute (positive) value ofx:",
                    "Try it Yourself »",
                    "Math.random()returns a random number between 0.0 (inclusive), and 1.0 (exclusive):",
                    "Try it Yourself »",
                    "To get more control over the random number, for example, if you only want a random \nnumber between 0 and 100, you can use the following formula:",
                    "Try it Yourself »",
                    "For a complete reference of Math methods, go to ourJava Math Methods Reference."
                ],
                "lists": [],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/java/java_booleans.asp",
        "cours": {
            "titre": "JavaBooleans",
            "description": "",
            "lien": "https://www.w3schools.com/java/java_booleans.asp",
            "contenus": {
                "paragraphs": [
                    "Very often, in programming, you will need a data type that can only have one of two values, like:",
                    "For this, Java has abooleandata type, which can storetrueorfalsevalues.",
                    "A boolean type is declared with thebooleankeyword and can only take the valuestrueorfalse:",
                    "Try it Yourself »",
                    "However, it is more common to return boolean values from boolean expressions, for conditional testing\n(see below).",
                    "A Boolean expression returns a boolean value:trueorfalse.",
                    "This is useful to build logic, and find answers.",
                    "For example, you can use acomparison operator, such as thegreater than(>) operator, to find out if an expression (or a variable) is true or false:",
                    "Try it Yourself »",
                    "Or even easier:",
                    "Try it Yourself »",
                    "In the examples below, we use theequal to(==) operator to evaluate an expression:",
                    "Try it Yourself »",
                    "Try it Yourself »",
                    "Let's think of a \"real \nlife example\" where we need to find out if a person is old enough to vote.",
                    "In the example below, we use the>=comparison operator to find out if the age (25) isgreater thanORequal tothe voting age limit, which is set \nto18:",
                    "Try it Yourself »",
                    "Cool, right? An even better approach (since we are on a roll now), would be to wrap the code above in anif...elsestatement, so we can perform \ndifferent actions depending on the result:",
                    "Output \"Old enough to vote!\" ifmyAgeisgreater than or equal to18. Otherwise output \"Not old enough to vote.\":",
                    "Try it Yourself »",
                    "Booleans are the basis for all Java comparisons and conditions.",
                    "You will learn more aboutconditions (if...else)in the next chapter."
                ],
                "lists": [
                    [
                        "YES / NO",
                        "ON / OFF",
                        "TRUE / FALSE"
                    ]
                ],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/java/java_conditions.asp",
        "cours": {
            "titre": "JavaIf ... Else",
            "description": "",
            "lien": "https://www.w3schools.com/java/java_conditions.asp",
            "contenus": {
                "paragraphs": [
                    "You already know that Java supports the usual logical conditions from mathematics:",
                    "You can use these conditions to perform different actions for different decisions.",
                    "Java has the following conditional statements:",
                    "Use theifstatement to specify a block of Java code to be executed if a condition istrue.",
                    "Note thatifis in lowercase letters. Uppercase letters (If or IF) will generate an error.",
                    "In the example below, we test two values to find out if 20 is greater than \n18. If the condition istrue, print some text:",
                    "Try it Yourself »",
                    "We can also test variables:",
                    "Try it Yourself »",
                    "In the example above we use two variables,xandy, \nto test whether x is greater than y \n(using the>operator). As x is 20, and y is 18, and we know that 20 is greater than 18, we print to the screen that \"x is greater than y\"."
                ],
                "lists": [
                    [
                        "Less than:a < b",
                        "Less than or equal to:a <= b",
                        "Greater than:a > b",
                        "Greater than or equal to:a >= b",
                        "Equal toa == b",
                        "Not Equal to:a != b"
                    ],
                    [
                        "Useifto specify a block of code to be executed, if a specified condition is true",
                        "Useelseto specify a block of code to be executed, if the same condition is false",
                        "Useelse ifto specify a new condition to test, if the first condition is false",
                        "Useswitchto specify many alternative blocks of code to be executed"
                    ]
                ],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/java/java_conditions_else.asp",
        "cours": {
            "titre": "JavaElse",
            "description": "",
            "lien": "https://www.w3schools.com/java/java_conditions_else.asp",
            "contenus": {
                "paragraphs": [
                    "Use theelsestatement to specify a block of code to be executed if the condition isfalse.",
                    "Try it Yourself »",
                    "In the example above, time (20) is greater than 18, so the condition isfalse. \nBecause of this, we move on to theelsecondition and print to the screen \"Good \nevening\". If the time was less than 18, the program would print \"Good day\"."
                ],
                "lists": [],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/java/java_conditions_elseif.asp",
        "cours": {
            "titre": "JavaElse If",
            "description": "",
            "lien": "https://www.w3schools.com/java/java_conditions_elseif.asp",
            "contenus": {
                "paragraphs": [
                    "Use theelse ifstatement to specify a new condition if the first condition isfalse.",
                    "Try it Yourself »",
                    "In the example above, time (22) is greater than 10, so thefirst conditionisfalse. The next condition, in theelse ifstatement, is alsofalse, so we move on to theelsecondition sincecondition1andcondition2is bothfalse- and print to the screen \"Good \nevening\".",
                    "However, if the time was 14, our program would print \"Good day.\""
                ],
                "lists": [],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/java/java_conditions_shorthand.asp",
        "cours": {
            "titre": "JavaShort Hand If...Else (Ternary Operator)",
            "description": "",
            "lien": "https://www.w3schools.com/java/java_conditions_shorthand.asp",
            "contenus": {
                "paragraphs": [
                    "There is also a short-handif else, which is known as theternary \noperatorbecause it consists of three operands.",
                    "It can be used to \nreplace multiple lines of code with a single line, and is most often used to replace \nsimple if else statements:",
                    "Instead of writing:",
                    "Try it Yourself »",
                    "You can simply write:",
                    "Try it Yourself »"
                ],
                "lists": [],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/java/java_conditions_reallife.asp",
        "cours": {
            "titre": "JavaIf ... Else Examples",
            "description": "",
            "lien": "https://www.w3schools.com/java/java_conditions_reallife.asp",
            "contenus": {
                "paragraphs": [
                    "This example shows how you can useif..elseto \"open a door\" if the user enters the correct code:",
                    "Try it Yourself »",
                    "This example shows how you can useif..elseto find out if a number is positive or negative:",
                    "Try it Yourself »",
                    "Find out if a person is old enough to vote:",
                    "Try it Yourself »",
                    "Find out if a number is even or odd:",
                    "Try it Yourself »"
                ],
                "lists": [],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/java/java_switch.asp",
        "cours": {
            "titre": "JavaSwitch",
            "description": "",
            "lien": "https://www.w3schools.com/java/java_switch.asp",
            "contenus": {
                "paragraphs": [
                    "Instead of writingmanyif..elsestatements, you can use theswitchstatement.",
                    "Theswitchstatement selects one of many code blocks to be executed:",
                    "This is how it works:",
                    "The example below uses the weekday number to calculate the weekday name:",
                    "Try it Yourself »",
                    "When Java reaches abreakkeyword, it breaks out of the switch block.",
                    "This will stop the execution of more code and case testing inside \nthe block.",
                    "When a match is found, and the job is done, it's time for a break. There is no need for more testing.",
                    "A break can save a lot of execution time because it \"ignores\" the execution \nof all the rest of the code in the switch block.",
                    "Thedefaultkeyword specifies some code to run if there is no \ncase match:",
                    "Try it Yourself »",
                    "Note that if thedefaultstatement is used \nas the last statement in a switch block, it does not need a break."
                ],
                "lists": [
                    [
                        "Theswitchexpression is evaluated once.",
                        "The value of the expression is compared with the values of eachcase.",
                        "If there is a match, the associated block of code is executed.",
                        "Thebreakanddefaultkeywords are optional, and will be described later in this chapter"
                    ]
                ],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/java/java_while_loop.asp",
        "cours": {
            "titre": "JavaWhile Loop",
            "description": "",
            "lien": "https://www.w3schools.com/java/java_while_loop.asp",
            "contenus": {
                "paragraphs": [
                    "Loops can execute a block of code as long as a specified condition is reached.",
                    "Loops are handy because they save time, reduce errors, and they make code \nmore readable.",
                    "Thewhileloop loops through a block of code as long as a specified condition istrue:",
                    "In the example below, the code in the loop will run, over and over again, as long as \na variable (i) is less than 5:",
                    "Try it Yourself »",
                    "Note:Do not forget to increase the variable used in the condition, otherwise \nthe loop will never end!"
                ],
                "lists": [],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/java/java_while_loop_do.asp",
        "cours": {
            "titre": "JavaDo/While Loop",
            "description": "",
            "lien": "https://www.w3schools.com/java/java_while_loop_do.asp",
            "contenus": {
                "paragraphs": [
                    "Thedo/whileloop is a variant of thewhileloop. This loop will \nexecute the code block once, before checking if the condition is true, then it will\nrepeat the loop as long as the condition is true.",
                    "The example below uses ado/whileloop. The loop will always be \nexecuted at least once, even if the condition is false, because the code block \nis executed before the condition is tested:",
                    "Try it Yourself »",
                    "Do not forget to increase the variable used in the condition, otherwise \nthe loop will never end!"
                ],
                "lists": [],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/java/java_while_loop_reallife.asp",
        "cours": {
            "titre": "JavaWhile Loop Examples",
            "description": "",
            "lien": "https://www.w3schools.com/java/java_while_loop_reallife.asp",
            "contenus": {
                "paragraphs": [
                    "To demonstrate a practical example of thewhile loop, we have created a simple \"countdown\" program:",
                    "Try it Yourself »",
                    "To demonstrate a practical example of thewhile loopcombined with anif else statement, let's say we play a game of Yatzy:",
                    "Print \"Yatzy!\" If the dice number is 6:",
                    "Try it Yourself »",
                    "If the loop passes the values ranging from 1 to 5, it prints \"No Yatzy\". Whenever it passes the value 6, it prints \"Yatzy!\"."
                ],
                "lists": [],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/java/java_for_loop.asp",
        "cours": {
            "titre": "JavaFor Loop",
            "description": "",
            "lien": "https://www.w3schools.com/java/java_for_loop.asp",
            "contenus": {
                "paragraphs": [
                    "When you know exactly how many times you want to loop through a block of \ncode, use theforloop instead of awhileloop:",
                    "Statement 1is executed (one time) before the execution of the code block.",
                    "Statement 2defines the condition for executing the code block.",
                    "Statement 3is executed (every time) after the code block has been executed.",
                    "The example below will print the numbers 0 to 4:",
                    "Try it Yourself »",
                    "Statement 1 sets a variable before the loop starts (int i = 0).",
                    "Statement 2 defines the condition for the loop to run (i must be less than \n5). If the condition is true, the loop will start over again, if it is false, \nthe loop will end.",
                    "Statement 3 increases a value (i++) each time the code block in the loop has \nbeen executed.",
                    "This example will only print even values between 0 and 10:",
                    "Try it Yourself »"
                ],
                "lists": [],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/java/java_for_loop_nested.asp",
        "cours": {
            "titre": "JavaNested Loops",
            "description": "",
            "lien": "https://www.w3schools.com/java/java_for_loop_nested.asp",
            "contenus": {
                "paragraphs": [
                    "It is also possible to place a loop inside another loop. This is called anested loop.",
                    "The \"inner loop\" will be executed one time for each iteration of the \"outer loop\":",
                    "Try it Yourself »"
                ],
                "lists": [],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/java/java_foreach_loop.asp",
        "cours": {
            "titre": "JavaFor Each Loop",
            "description": "",
            "lien": "https://www.w3schools.com/java/java_foreach_loop.asp",
            "contenus": {
                "paragraphs": [
                    "There is also a \"for-each\" loop, which is used exclusively to loop through elements in anarray(or other data sets):",
                    "The following example outputs all elements in thecarsarray, using a \"for-each\" loop:",
                    "Try it Yourself »",
                    "Note:Don't worry if you don't understand the example above. You will learn more about Arrays in theJava Arrays chapter."
                ],
                "lists": [],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/java/java_for_loop_reallife.asp",
        "cours": {
            "titre": "JavaFor Loop Examples",
            "description": "",
            "lien": "https://www.w3schools.com/java/java_for_loop_reallife.asp",
            "contenus": {
                "paragraphs": [
                    "To demonstrate a practical example of thefor loop, let's create a program that counts to 100 by tens:",
                    "Try it Yourself »",
                    "In this example, we create a program that only print even values between 0 and 10:",
                    "Try it Yourself »",
                    "And in this example, we create a program that prints the multiplication table for a specified number:",
                    "Try it Yourself »"
                ],
                "lists": [],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/java/java_break.asp",
        "cours": {
            "titre": "JavaBreak and Continue",
            "description": "",
            "lien": "https://www.w3schools.com/java/java_break.asp",
            "contenus": {
                "paragraphs": [
                    "You have already seen thebreakstatement used in an earlier chapter of this tutorial. It was used to \"jump out\" of aswitchstatement.",
                    "Thebreakstatement can also be used to jump out of aloop.",
                    "This example stops the loop when i is equal to 4:",
                    "Try it Yourself »",
                    "Thecontinuestatement breaks one iteration (in the loop), if a specified condition occurs, and continues with the next iteration in the loop.",
                    "This example skips the value of 4:",
                    "Try it Yourself »",
                    "You can also usebreakandcontinuein while loops:",
                    "Try it Yourself »",
                    "Try it Yourself »"
                ],
                "lists": [],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/java/java_arrays.asp",
        "cours": {
            "titre": "JavaArrays",
            "description": "",
            "lien": "https://www.w3schools.com/java/java_arrays.asp",
            "contenus": {
                "paragraphs": [
                    "Arrays are used to store multiple values in a single variable, instead of declaring separate variables for each \nvalue.",
                    "To declare an array, define the variable type withsquare brackets:",
                    "We have now declared a variable that holds an array of strings. To insert \nvalues to it, you can place the values in a \ncomma-separated list, inside curly braces:",
                    "To create an array of integers, you could write:",
                    "You can access an array element by referring to the index number.",
                    "This statement accesses the value of the first element in cars:",
                    "Try it Yourself »",
                    "Note:Array indexes start with 0: [0] is the first element. [1] is the second \nelement, etc.",
                    "To change the value of a specific element, refer to the index number:",
                    "Try it Yourself »",
                    "To find out how many elements an array has, use thelengthproperty:",
                    "Try it Yourself »"
                ],
                "lists": [],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/java/java_arrays_loop.asp",
        "cours": {
            "titre": "JavaArrays Loop",
            "description": "",
            "lien": "https://www.w3schools.com/java/java_arrays_loop.asp",
            "contenus": {
                "paragraphs": [
                    "You can loop through the array elements with theforloop, and use thelengthproperty to specify how many times the loop should run.",
                    "The following example outputs all elements in thecarsarray:",
                    "Try it Yourself »",
                    "There is also a \"for-each\" loop, which is used exclusively to loop through elements in arrays:",
                    "The following example outputs all elements in thecarsarray, using a \"for-each\" loop:",
                    "Try it Yourself »",
                    "The example above can be read like this:for eachStringelement (calledi- as inindex) incars, print out the value ofi.",
                    "If you compare theforloop andfor-eachloop, you will see that thefor-eachmethod is easier to write, it \ndoes not require a counter (using the length property), and it is more readable."
                ],
                "lists": [],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/java/java_arrays_reallife.asp",
        "cours": {
            "titre": "JavaArrays - Real-Life Examples",
            "description": "",
            "lien": "https://www.w3schools.com/java/java_arrays_reallife.asp",
            "contenus": {
                "paragraphs": [
                    "To demonstrate a practical example of using arrays, let's create a program that calculates the average of different ages:",
                    "Try it Yourself »",
                    "And in this example, we create a program that finds the lowest age among different ages:",
                    "Try it Yourself »"
                ],
                "lists": [],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/java/java_arrays_multi.asp",
        "cours": {
            "titre": "JavaMulti-Dimensional Arrays",
            "description": "",
            "lien": "https://www.w3schools.com/java/java_arrays_multi.asp",
            "contenus": {
                "paragraphs": [
                    "A multidimensional array is an array of arrays.",
                    "Multidimensional arrays are useful when you want to store data as a tabular form, like a table with rows and columns.",
                    "To create a two-dimensional array, add each array within its own set ofcurly braces:",
                    "myNumbersis now an array with two arrays as its elements.",
                    "To access the elements of themyNumbersarray, \nspecify two indexes: one for the array, and one for the element inside that array. \nThis example accesses the third element (2) in the second array (1) of \nmyNumbers:",
                    "Try it Yourself »",
                    "Remember that:Array indexes start with 0: [0] is the first element. [1] is the second element, etc.",
                    "You can also change the value of an element:",
                    "Try it Yourself »",
                    "You can also use afor loopinside anotherfor loopto get the elements of a two-dimensional array (we still have to point to the two indexes):",
                    "Try it Yourself »",
                    "Or you could just use afor-eachloop, which is considered easier \nto read and write:",
                    "Try it Yourself »"
                ],
                "lists": [],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/java/java_methods.asp",
        "cours": {
            "titre": "JavaMethods",
            "description": "",
            "lien": "https://www.w3schools.com/java/java_methods.asp",
            "contenus": {
                "paragraphs": [
                    "Amethodis a block of code which only runs when it is called.",
                    "You can pass data, known as parameters, into a method.",
                    "Methods are used to perform certain actions, and they are also known asfunctions.",
                    "Why use methods? To reuse code: define the code once, and use \nit many times.",
                    "A method must be declared within a class. It is defined \nwith the name of the method, followed by parentheses(). Java provides some pre-defined methods, such asSystem.out.println(), but you can also create your own methods to perform certain actions:",
                    "Create a method inside Main:",
                    "To call a method in Java, write the method's name followed by two \nparentheses()and a semicolon;",
                    "In the following example,myMethod()is used to print a text (the action), when it is called:",
                    "Insidemain, call themyMethod()method:",
                    "Try it Yourself »",
                    "A method can also be called multiple times:",
                    "Try it Yourself »",
                    "In the next chapter,Method Parameters, you will learn how to pass data (parameters) into a method."
                ],
                "lists": [
                    [
                        "myMethod()is the name of the method",
                        "staticmeans that the method belongs to the \nMain class and not an object of the Main class. You will learn more about objects and how to access methods through objects later in this tutorial.",
                        "voidmeans that this method does not have a \nreturn value. You will learn more about return values later in this chapter"
                    ]
                ],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/java/java_methods_param.asp",
        "cours": {
            "titre": "JavaMethod Parameters",
            "description": "",
            "lien": "https://www.w3schools.com/java/java_methods_param.asp",
            "contenus": {
                "paragraphs": [
                    "Information can be passed to methods as a parameter. Parameters act as variables inside the method.",
                    "Parameters are specified after the method name, inside the parentheses.\nYou can add as many parameters as you want, just separate them with a comma.",
                    "The following example has a \nmethod that takes aStringcalledfnameas parameter.\nWhen the method is called, we pass along a first name,\nwhich is used inside the method to print the full name:",
                    "Try it Yourself »",
                    "When aparameteris passed to the method, it is called anargument. So, from the example above:fnameis aparameter, whileLiam,JennyandAnjaarearguments.",
                    "You can have as many parameters as you like:",
                    "Try it Yourself »",
                    "Note that when you are working with multiple parameters, the method call must \nhave the same number of arguments as there are parameters, and the arguments must be passed in the same order.",
                    "It is common to useif...elsestatements inside methods:",
                    "Try it Yourself »"
                ],
                "lists": [],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/java/java_methods_return.asp",
        "cours": {
            "titre": "JavaReturn",
            "description": "",
            "lien": "https://www.w3schools.com/java/java_methods_return.asp",
            "contenus": {
                "paragraphs": [
                    "In theprevious page, we used thevoidkeyword in all examples, which indicates that the method should not return a value.",
                    "If you want the method to return a value, you can use a primitive data type (such asint,char, etc.) instead ofvoid, and use thereturnkeyword inside the method:",
                    "Try it Yourself »",
                    "This example returns the sum of a method'stwo parameters:",
                    "Try it Yourself »",
                    "You can also store the result in a variable (recommended, as it is easier to read and maintain):",
                    "Try it Yourself »"
                ],
                "lists": [],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/java/java_methods_overloading.asp",
        "cours": {
            "titre": "JavaMethod Overloading",
            "description": "",
            "lien": "https://www.w3schools.com/java/java_methods_overloading.asp",
            "contenus": {
                "paragraphs": [
                    "Withmethod overloading, multiple methods can have the same name with different\nparameters:",
                    "Consider the following example, which has two methods that add numbers of different type:",
                    "Try it Yourself »",
                    "Instead of defining two methods that should do the same thing, it is better to overload one.",
                    "In the example below, we overload theplusMethodmethod to work for bothintanddouble:",
                    "Try it Yourself »",
                    "Note:Multiple methods can have the same name \n  as long as the number and/or type of parameters are different."
                ],
                "lists": [],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/java/java_scope.asp",
        "cours": {
            "titre": "JavaScope",
            "description": "",
            "lien": "https://www.w3schools.com/java/java_scope.asp",
            "contenus": {
                "paragraphs": [
                    "In Java, variables are only accessible inside the region they are created. This is calledscope.",
                    "Variables declared directly inside a method are available anywhere in the method following the line of code in which they were declared:",
                    "Try it Yourself »",
                    "A block of code refers to all of the code between curly braces{}.",
                    "Variables\ndeclared inside blocks of code are only accessible by the code between the curly braces, which follows the line in which the variable was declared:",
                    "Try it Yourself »",
                    "A block of code may exist on its\nown or it can belong to anif,whileorforstatement. In the case offorstatements,\nvariables declared in the statement itself are also available inside the block's scope."
                ],
                "lists": [],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/java/java_recursion.asp",
        "cours": {
            "titre": "JavaRecursion",
            "description": "",
            "lien": "https://www.w3schools.com/java/java_recursion.asp",
            "contenus": {
                "paragraphs": [
                    "Recursion is the technique of making a function call itself. This technique provides a way\nto break complicated problems down into simple problems which are easier to solve.",
                    "Recursion may be a bit difficult to understand. The\nbest way to figure out how it works is to experiment with it.",
                    "Adding two numbers together is easy to do, but adding a range of numbers is more\ncomplicated. In the following example, recursion is used to add a range of numbers\ntogether by breaking it down into the simple task of adding two numbers:",
                    "Use recursion to add all of the numbers up to 10.",
                    "Try it Yourself »",
                    "When thesum()function is called, it adds parameterkto the sum of all numbers smaller\nthankand returns the result. When k becomes 0, the function just returns 0. When\nrunning, the program follows these steps:",
                    "Since the function does not call itself whenkis 0, the program stops there and returns the\nresult.",
                    "Just as loops can run into the problem of infinite looping, recursive functions can run into\nthe problem of infinite recursion. Infinite recursion is when the function never stops calling\nitself. Every recursive function should have a halting condition, which is the condition\nwhere the function stops calling itself. In the previous example, the halting condition is\nwhen the parameterkbecomes 0.",
                    "It is helpful to see a variety of different examples to better understand the concept. In this\nexample, the function adds a range of numbers between a start and an end. The halting\ncondition for this recursive function is whenendis not greater thanstart:",
                    "Use recursion to add all of the numbers between 5 to 10.",
                    "Try it Yourself »",
                    "The developer should be very careful with recursion as it can be quite easy to slip into writing a function which never terminates, or one that uses excess amounts of memory or processor power. However, when written correctly recursion can be a very efficient and mathematically-elegant approach to programming."
                ],
                "lists": [],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/java/java_oop.asp",
        "cours": {
            "titre": "JavaOOP",
            "description": "",
            "lien": "https://www.w3schools.com/java/java_oop.asp",
            "contenus": {
                "paragraphs": [
                    "OOP stands forObject-Oriented Programming.",
                    "Procedural programming is about writing procedures or methods that perform \noperations on the data, while object-oriented programming is about \ncreating objects that contain both data and methods.",
                    "Object-oriented programming has several advantages over procedural \nprogramming:",
                    "Tip:The \"Don't Repeat Yourself\" (DRY) principle is about \nreducing the repetition of code. You should extract out the codes that are \ncommon for the application, and place them at a single place and reuse them \ninstead of repeating it.",
                    "Classes and objects are the two main aspects of object-oriented programming.",
                    "Look at the following illustration to see the difference between class and \nobjects:",
                    "Fruit",
                    "Apple",
                    "Banana",
                    "Mango",
                    "Another example:",
                    "Car",
                    "Volvo",
                    "Audi",
                    "Toyota",
                    "So, a class is a template for objects, and an object is an instance of a class.",
                    "When the individual objects are created, they inherit all the \nvariables and methods from the class.",
                    "You will learn much more aboutclasses and objectsin the next chapter."
                ],
                "lists": [
                    [
                        "OOP is faster and easier to execute",
                        "OOP provides a clear structure for the programs",
                        "OOP helps to keep the Java code DRY \"Don't Repeat Yourself\", and makes \n  the \n  code easier to maintain, modify and debug",
                        "OOP makes it possible to create full reusable \n  applications with less code and shorter development time"
                    ]
                ],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/java/java_classes.asp",
        "cours": {
            "titre": "JavaClasses and Objects",
            "description": "",
            "lien": "https://www.w3schools.com/java/java_classes.asp",
            "contenus": {
                "paragraphs": [
                    "Java is an object-oriented programming language.",
                    "Everything in Java is associated with classes and objects, along with its attributes and \nmethods. For example: in real life, a car is an object. The car hasattributes, such as weight and color, andmethods, such as drive and brake.",
                    "A Class is like an object constructor, or a \"blueprint\" for creating objects.",
                    "To create a class, use the keywordclass:",
                    "Create a class named \"Main\" with a \nvariable x:",
                    "Remember from theJava Syntax chapterthat a class should always start with an uppercase first letter, and that the name of the java file should match the class name.",
                    "In Java, an object is created from a class. We have already created the class namedMain, \nso now we can use this to create objects.",
                    "To create an object ofMain, \nspecify the class name, followed by the object name, and use the keywordnew:",
                    "Create an object called \"myObj\" and print the value of x:",
                    "Try it Yourself »",
                    "You can create multiple objects of one class:",
                    "Create two objects ofMain:",
                    "Try it Yourself »",
                    "You can also create an object of a class and access it in another class. This \nis often used for better organization of classes (one class has all the \nattributes and methods, while the other class holds themain()method (code to \nbe executed)).",
                    "Remember that the name of the java file should match the class name. In this \nexample, we have created two files in the same directory/folder:",
                    "When both files have been compiled:",
                    "Run the Second.java file:",
                    "And the output will be:",
                    "You will learn much more about classes and objects in the next chapters."
                ],
                "lists": [
                    [
                        "Main.java",
                        "Second.java"
                    ]
                ],
                "examples": [
                    "C:\\Users\\Your Name>javac Main.javaC:\\Users\\Your Name>javac Second.java",
                    "C:\\Users\\Your Name>java Second"
                ]
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/java/java_class_attributes.asp",
        "cours": {
            "titre": "JavaClass Attributes",
            "description": "",
            "lien": "https://www.w3schools.com/java/java_class_attributes.asp",
            "contenus": {
                "paragraphs": [
                    "In the previous chapter, we used the term \"variable\" forxin the example (as shown below). It is actually anattributeof the class. Or you could say that class attributes are variables within a class:",
                    "Create a class called \"Main\" with two attributes:xandy:",
                    "Another term for class attributes isfields.",
                    "You can access attributes by creating an object of the class, and by using the dot syntax (.):",
                    "The following example will create an object of theMainclass, with the \nnamemyObj. We use thexattribute on the object to print its value:",
                    "Create an object called \"myObj\" and print the value ofx:",
                    "Try it Yourself »",
                    "You can also modify attribute values:",
                    "Set the value ofxto 40:",
                    "Try it Yourself »",
                    "Or override existing values:",
                    "Change the value ofxto 25:",
                    "Try it Yourself »",
                    "If you don't want the ability to override existing values, declare the attribute asfinal:",
                    "Try it Yourself »",
                    "Thefinalkeyword is useful when you want a variable to always store the same value, like PI (3.14159...).",
                    "Thefinalkeyword is called a \"modifier\". You will learn more about these in theJava Modifiers Chapter.",
                    "If you create multiple objects of one class, you can change the attribute values in one object, without affecting the attribute values in the other:",
                    "Change the value ofxto 25 inmyObj2, and leavexinmyObj1unchanged:",
                    "Try it Yourself »",
                    "You can specify as many attributes as you want:",
                    "Try it Yourself »",
                    "The next chapter will teach you how to create class methods and how to access them with objects."
                ],
                "lists": [],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/java/java_class_methods.asp",
        "cours": {
            "titre": "JavaClass Methods",
            "description": "",
            "lien": "https://www.w3schools.com/java/java_class_methods.asp",
            "contenus": {
                "paragraphs": [
                    "You learned from theJava Methodschapter that methods are declared within a \nclass, and that they are used to perform certain actions:",
                    "Create a \nmethod namedmyMethod()in Main:",
                    "myMethod()prints a text (the action), when it iscalled. To \ncall a method, write the method's name followed by two parentheses()and a semicolon;",
                    "Insidemain, callmyMethod():",
                    "Try it Yourself »",
                    "You will often see Java programs that have eitherstaticorpublicattributes and methods.",
                    "In the example above, we created astaticmethod, which means that it can be accessed without creating an object of the class, \nunlikepublic, which can only be accessed by \nobjects:",
                    "An example to demonstrate the differences betweenstaticandpublicmethods:",
                    "Try it Yourself »",
                    "Note:You will learn more about these keywords (called modifiers) in theJava Modifierschapter.",
                    "Create a Car object namedmyCar. Call thefullThrottle()andspeed()methods on themyCarobject, and run the program:",
                    "Try it Yourself »",
                    "1) We created a customMainclass with theclasskeyword.",
                    "2) We created thefullThrottle()andspeed()methods in theMainclass.",
                    "3) ThefullThrottle()method and thespeed()method will print out some text, when they are called.",
                    "4) Thespeed()method accepts anintparameter calledmaxSpeed- we \nwill use this in8).",
                    "5) In order to use theMainclass and its \nmethods, we need to create anobjectof theMainClass.",
                    "6) Then, go to themain()method, which you know by now is a built-in \nJava method that runs your program (any code inside main is executed).",
                    "7) By using thenewkeyword we created an object with the namemyCar.",
                    "8) Then, we call thefullThrottle()andspeed()methods on themyCarobject, and run the program using the name of the object (myCar), followed by a dot (.), followed by the name of the method (fullThrottle();andspeed(200);). \nNotice that we add anintparameter of200inside thespeed()method.",
                    "The dot (.) is used to access the object's attributes and methods.",
                    "To call a method in Java, write the method name followed by a set of parentheses(), followed by a semicolon (;).",
                    "A class must have a matching filename (MainandMain.java).",
                    "Like we specified in theClasses chapter, it is \na good practice to create an object of a class and access it in another class.",
                    "Remember that the name of the java file should match the class name. In this \nexample, we have created two files in the same directory:",
                    "When both files have been compiled:",
                    "Run the Second.java file:",
                    "And the output will be:"
                ],
                "lists": [
                    [
                        "Main.java",
                        "Second.java"
                    ]
                ],
                "examples": [
                    "C:\\Users\\Your Name>javac Main.javaC:\\Users\\Your Name>javac Second.java",
                    "C:\\Users\\Your Name>java Second"
                ]
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/java/java_constructors.asp",
        "cours": {
            "titre": "JavaConstructors",
            "description": "",
            "lien": "https://www.w3schools.com/java/java_constructors.asp",
            "contenus": {
                "paragraphs": [
                    "A constructor in Java is aspecial methodthat is used to initialize objects. \nThe constructor is called when an object of a class is created. It can be used to \nset initial values for object attributes:",
                    "Create a constructor:",
                    "Try it Yourself »",
                    "Note that the constructor name mustmatch the class name, and it cannot have areturn type(likevoid).",
                    "Also note that the constructor is called when the object is created.",
                    "All classes have constructors by default: if you do not create a class constructor \nyourself, Java creates one for you. However, then you are not able to set initial values for object attributes.",
                    "Constructors can also take parameters, which is used to initialize \nattributes.",
                    "The following example adds anint yparameter \nto the constructor. \nInside the constructor we set x to y (x=y). When we call \nthe constructor, we pass a parameter to the constructor (5), which will set the value of \nx to 5:",
                    "Try it Yourself »",
                    "You can have as many parameters as you want:",
                    "Try it Yourself »"
                ],
                "lists": [],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/java/java_modifiers.asp",
        "cours": {
            "titre": "JavaModifiers",
            "description": "",
            "lien": "https://www.w3schools.com/java/java_modifiers.asp",
            "contenus": {
                "paragraphs": [
                    "By now, you are quite familiar with thepublickeyword that appears in almost \nall of our examples:",
                    "Thepublickeyword is anaccess modifier, \nmeaning that it is used to set the access level for classes, attributes, methods and \nconstructors.",
                    "We divide modifiers into two groups:",
                    "Forclasses, you can use eitherpublicordefault:",
                    "Forattributes, methods and constructors, you can use the one of the \nfollowing:",
                    "Forclasses, you can use eitherfinalorabstract:",
                    "Forattributes and methods, you can use the one of the \nfollowing:",
                    "If you don't want the ability to override existing attribute values, declare \nattributes asfinal:",
                    "Try it Yourself »",
                    "Astaticmethod means that it can be \naccessed without creating an object of the class, unlikepublic:",
                    "An example to demonstrate the differences betweenstaticandpublicmethods:",
                    "Try it Yourself »",
                    "Anabstractmethod belongs to anabstractclass, and it does not have a body. \nThe body is provided by the subclass:",
                    "Try it Yourself »"
                ],
                "lists": [
                    [
                        "Access Modifiers- controls the access level",
                        "Non-Access Modifiers- do not control access level, but provides other functionality"
                    ]
                ],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/java/java_encapsulation.asp",
        "cours": {
            "titre": "JavaEncapsulation",
            "description": "",
            "lien": "https://www.w3schools.com/java/java_encapsulation.asp",
            "contenus": {
                "paragraphs": [
                    "The meaning ofEncapsulation, is to make sure that \"sensitive\" data is hidden \nfrom users. To achieve this, you must:declare class variables/attributes asprivateprovide publicgetandsetmethods to access and update the value of aprivatevariableGet and SetYou learned from the previous chapter thatprivatevariables can only be \naccessed within the same class (an outside class has no access to it). However, \nit is possible to access them if we provide publicgetandsetmethods.Thegetmethod returns the variable value, and thesetmethod sets the value.Syntax for both is that they start with eithergetorset, followed by the \nname of the variable, with the first letter in upper case:Examplepublic class Person {\n  private String name; // private = restricted access\n\n  // Getter\n  public String getName() {\n    return name;\n  }\n\n  // Setter\n  public void setName(String newName) {\n    this.name = newName;\n  }\n}Example explainedThegetmethod returns the value of the variablename.Thesetmethod takes a parameter (newName) and assigns it to thenamevariable. Thethiskeyword is used to refer to the current \nobject.However, as thenamevariable is declared asprivate, wecannotaccess it from outside this class:Examplepublic class Main {\n  public static void main(String[] args) {\n    Person myObj = new Person();\n    myObj.name = \"John\";  // error\n    System.out.println(myObj.name); // error \n  }\n}Run Example »If the variable was declared aspublic, we would expect the following output:JohnHowever, as we try to access aprivatevariable, we get an error:MyClass.java:4: error: name has private access in PersonmyObj.name = \"John\";^MyClass.java:5: error: name has private access in PersonSystem.out.println(myObj.name);^2 errorsInstead, we use thegetName()andsetName()methods to access and update the variable:Examplepublic class Main {\n  public static void main(String[] args) {\n    Person myObj = new Person();\n    myObj.setName(\"John\"); // Set the value of the name variable to \"John\"\n    System.out.println(myObj.getName());\n  }\n}\n\n// Outputs \"John\"Try it Yourself »Why Encapsulation?Better control of class attributes and methodsClass attributes can be maderead-only(if you only use thegetmethod), orwrite-only(if you only use thesetmethod)Flexible: the programmer can change one part of the code without affecting other partsIncreased security of data❮ PreviousNext ❯★+1Track your progress - it's free!Log inSign Up",
                    "You learned from the previous chapter thatprivatevariables can only be \naccessed within the same class (an outside class has no access to it). However, \nit is possible to access them if we provide publicgetandsetmethods.",
                    "Thegetmethod returns the variable value, and thesetmethod sets the value.",
                    "Syntax for both is that they start with eithergetorset, followed by the \nname of the variable, with the first letter in upper case:",
                    "Thegetmethod returns the value of the variablename.",
                    "Thesetmethod takes a parameter (newName) and assigns it to thenamevariable. Thethiskeyword is used to refer to the current \nobject.",
                    "However, as thenamevariable is declared asprivate, wecannotaccess it from outside this class:",
                    "Run Example »",
                    "If the variable was declared aspublic, we would expect the following output:",
                    "However, as we try to access aprivatevariable, we get an error:",
                    "Instead, we use thegetName()andsetName()methods to access and update the variable:",
                    "Try it Yourself »"
                ],
                "lists": [
                    [
                        "declare class variables/attributes asprivate",
                        "provide publicgetandsetmethods to access and update the value of aprivatevariable"
                    ],
                    [
                        "Better control of class attributes and methods",
                        "Class attributes can be maderead-only(if you only use thegetmethod), orwrite-only(if you only use thesetmethod)",
                        "Flexible: the programmer can change one part of the code without affecting other parts",
                        "Increased security of data"
                    ]
                ],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/java/java_packages.asp",
        "cours": {
            "titre": "JavaPackages",
            "description": "",
            "lien": "https://www.w3schools.com/java/java_packages.asp",
            "contenus": {
                "paragraphs": [
                    "A package in Java is used to group related classes. Think of it asa folder in a file directory. We use packages to avoid name conflicts, and \nto write a better maintainable code. Packages are divided into two categories:",
                    "The Java API is a library of prewritten classes, that are free to use, included in the\nJava Development Environment.",
                    "The library contains components for managing input, database programming, and much much \nmore. The complete list can be found at Oracles website:https://docs.oracle.com/javase/8/docs/api/.",
                    "The library is divided intopackagesandclasses. \nMeaning you can either import a single class (along with its methods and \nattributes), or a whole package that contain \nall the classes that belong to the specified package.",
                    "To use a class or a package from the library, you need to use theimportkeyword:",
                    "If you find a class you want to use, for example, theScannerclass,which is used to get \nuser input, write the following code:",
                    "In the example above,java.utilis a package, whileScanneris a class of \nthejava.utilpackage.",
                    "To use theScannerclass, create an object of the class and use any of the available methods found in theScannerclass documentation. \nIn our example, we will use thenextLine()method, which is used to read a \ncomplete line:",
                    "Using theScannerclass to get user input:",
                    "Run Example »",
                    "There are many packages to choose from. In the previous example, we used theScannerclass from thejava.utilpackage. This package also contains date and time \nfacilities, random-number generator and other utility classes.",
                    "To import a whole package, end the sentence with an asterisk sign (*). \nThe following example \nwill import ALL the classes in thejava.utilpackage:",
                    "Run Example »",
                    "To create your own package, you need to understand that Java uses a file system directory to store them. Just like folders on your computer:",
                    "To create a package, use thepackagekeyword:",
                    "Run Example »",
                    "Save the file asMyPackageClass.java, and compile it:",
                    "Then compile the package:",
                    "This forces the compiler to create the \"mypack\" package.",
                    "The-dkeyword specifies the destination for where to save the class file. You \n  can use any directory name, like c:/user (windows), or, if you want to keep \n  the package within the same directory, you can use the dot sign \".\", like in \n  the example above.",
                    "Note:The package name should be written in lower case to avoid conflict with class names.",
                    "When we compiled the package in the example above, a new folder was created, called \"mypack\".",
                    "To run theMyPackageClass.javafile, write the following:",
                    "The output will be:"
                ],
                "lists": [
                    [
                        "Built-in Packages (packages from the Java API)",
                        "User-defined Packages (create your own packages)"
                    ]
                ],
                "examples": [
                    "C:\\Users\\Your Name>javac MyPackageClass.java",
                    "C:\\Users\\Your Name>javac -d . MyPackageClass.java",
                    "C:\\Users\\Your Name>java mypack.MyPackageClass"
                ]
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/java/java_inheritance.asp",
        "cours": {
            "titre": "JavaInheritance",
            "description": "",
            "lien": "https://www.w3schools.com/java/java_inheritance.asp",
            "contenus": {
                "paragraphs": [
                    "In Java, it is possible to inherit attributes and methods from one class to another. We group the \"inheritance concept\" into two categories:",
                    "To inherit from a class, use theextendskeyword.",
                    "In the example below, theCarclass \n(subclass) inherits the attributes and methods from theVehicleclass \n(superclass):",
                    "Try it Yourself »",
                    "Did you notice theprotectedmodifier in Vehicle?",
                    "We set thebrandattribute inVehicleto aprotectedaccess \nmodifier. If it was set toprivate, the Car class would not be able to access \nit.",
                    "- It is useful for code reusability: reuse attributes and methods of an existing class when you create a new class.",
                    "Tip:Also take a look at the next chapter,Polymorphism, which uses inherited methods to perform different tasks.",
                    "If you don't want other classes to inherit from a class, use thefinalkeyword:",
                    "If you try to access afinalclass, Java will generate an error:",
                    "The output will be something like this:"
                ],
                "lists": [
                    [
                        "subclass(child) - the class that inherits from another class",
                        "superclass(parent) - the class being inherited from"
                    ]
                ],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/java/java_polymorphism.asp",
        "cours": {
            "titre": "JavaPolymorphism",
            "description": "",
            "lien": "https://www.w3schools.com/java/java_polymorphism.asp",
            "contenus": {
                "paragraphs": [
                    "Polymorphism means \"many forms\", and it occurs when we have many classes that are related to each other by inheritance.",
                    "Like we specified in the previous chapter;Inheritancelets us \ninherit attributes and methods from another class.Polymorphismuses those methods to perform different tasks. This allows us to perform a single \naction in different ways.",
                    "For example, think of a superclass calledAnimalthat has a method calledanimalSound(). Subclasses of Animals could be Pigs, Cats, Dogs, Birds - And they also have their own implementation of an animal sound (the pig oinks, and the cat meows, etc.):",
                    "Remember from theInheritance chapterthat we use theextendskeyword to inherit from a class.",
                    "Now we can createPigandDogobjects and call theanimalSound()method on both of them:",
                    "Try it Yourself »",
                    "- It is useful for code reusability: reuse attributes and methods of an existing class when you create a new class."
                ],
                "lists": [],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/java/java_inner_classes.asp",
        "cours": {
            "titre": "JavaInner Classes",
            "description": "",
            "lien": "https://www.w3schools.com/java/java_inner_classes.asp",
            "contenus": {
                "paragraphs": [
                    "In Java, it is also possible to nest classes (a class within a class). The purpose \nof nested classes is to group classes that belong together, which makes your code more readable and maintainable.",
                    "To access the inner class, create an object of the outer class, and then create an object of the inner class:",
                    "Try it Yourself »",
                    "Unlike a \"regular\" class, an inner class can beprivateorprotected. \nIf you don't want outside objects to access the inner class, declare \nthe class asprivate:",
                    "If you try to access a private inner class from an outside class, an error occurs:",
                    "Try it Yourself »",
                    "An inner class can also bestatic, which means that you can access it without \ncreating an object of the outer class:",
                    "Try it Yourself »",
                    "Note:just likestaticattributes and methods, astaticinner class does not have access to members of the outer class.",
                    "One advantage of inner classes, is that they can access attributes and methods of the outer class:",
                    "Try it Yourself »"
                ],
                "lists": [],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/java/java_abstract.asp",
        "cours": {
            "titre": "JavaAbstraction",
            "description": "",
            "lien": "https://www.w3schools.com/java/java_abstract.asp",
            "contenus": {
                "paragraphs": [
                    "Dataabstractionis the process of hiding certain details and showing only essential information to the user.Abstraction can be achieved with eitherabstract classesorinterfaces(which you will learn more about in the next chapter).",
                    "Theabstractkeyword is a non-access modifier, used for classes and methods:Abstract class:is a restricted class that cannot be used to create objects (to access it, it must be inherited from another class).Abstract method:can only be used in an abstract class, and it does not have a body. The body is provided by the subclass (inherited from).An abstract class can have both abstract and regular methods:abstract class Animal {\n  public abstract void animalSound();\n  public void sleep() {\n    System.out.println(\"Zzz\");\n  }\n}From the example above, it is not possible to create an object of the Animal class:Animal myObj = new Animal(); // will generate an errorTo access the abstract class, it must be inherited from another class. Let's convert the Animal class we used in thePolymorphismchapter to an abstract class:Remember from theInheritance chapterthat we use theextendskeyword to inherit from a class.Example// Abstract class\nabstract class Animal {\n  // Abstract method (does not have a body)\n  public abstract void animalSound();\n  // Regular method\n  public void sleep() {\n    System.out.println(\"Zzz\");\n  }\n}\n\n// Subclass (inherit from Animal)\nclass Pig extends Animal {\n  public void animalSound() {\n    // The body of animalSound() is provided here\n    System.out.println(\"The pig says: wee wee\");\n  }\n}\n\nclass Main {\n  public static void main(String[] args) {\n    Pig myPig = new Pig(); // Create a Pig object\n    myPig.animalSound();\n    myPig.sleep();\n  }\n}Try it Yourself »Why And When To Use Abstract Classes and Methods?To achieve security - hide certain details and only show the important \ndetails of an object.Note:Abstraction can also be achieved withInterfaces, which you will learn more about in the next chapter.❮ PreviousNext ❯★+1Track your progress - it's free!Log inSign Up",
                    "An abstract class can have both abstract and regular methods:",
                    "From the example above, it is not possible to create an object of the Animal class:",
                    "To access the abstract class, it must be inherited from another class. Let's convert the Animal class we used in thePolymorphismchapter to an abstract class:",
                    "Remember from theInheritance chapterthat we use theextendskeyword to inherit from a class.",
                    "Try it Yourself »",
                    "To achieve security - hide certain details and only show the important \ndetails of an object.",
                    "Note:Abstraction can also be achieved withInterfaces, which you will learn more about in the next chapter."
                ],
                "lists": [
                    [
                        "Abstract class:is a restricted class that cannot be used to create objects (to access it, it must be inherited from another class).",
                        "Abstract method:can only be used in an abstract class, and it does not have a body. The body is provided by the subclass (inherited from)."
                    ]
                ],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/java/java_interface.asp",
        "cours": {
            "titre": "JavaInterface",
            "description": "",
            "lien": "https://www.w3schools.com/java/java_interface.asp",
            "contenus": {
                "paragraphs": [
                    "Another way to achieveabstractionin Java, is with interfaces.",
                    "Aninterfaceis a completely \"abstract class\" \nthat is used to group related methods with empty bodies:",
                    "To access the interface methods, the interface must be \"implemented\" \n(kinda like inherited) by another class with theimplementskeyword (instead ofextends). The body of the \ninterface method is provided by the \"implement\" class:",
                    "Try it Yourself »",
                    "1) To achieve security - hide certain details and only show the important \ndetails of an object (interface).",
                    "2) Java does not support \"multiple inheritance\" (a class can only inherit from one superclass). However, it can be achieved \n  with interfaces, because the class canimplementmultiple interfaces.Note:To implement multiple interfaces, separate them with a comma (see example below).",
                    "To implement multiple interfaces, separate them with a comma:",
                    "Try it Yourself »"
                ],
                "lists": [
                    [
                        "Likeabstract classes, interfacescannotbe used to create objects (in the example above, \nit is not possible to create an \"Animal\" object in the MyMainClass)",
                        "Interface methods do not have a body - the \nbody is provided by the \"implement\" class",
                        "On implementation of an interface, you must override all of its methods",
                        "Interface methods are by defaultabstractandpublic",
                        "Interface attributes are by defaultpublic,staticandfinal",
                        "An interface cannot contain a constructor (as it cannot be used to create objects)"
                    ]
                ],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/java/java_enums.asp",
        "cours": {
            "titre": "JavaEnums",
            "description": "",
            "lien": "https://www.w3schools.com/java/java_enums.asp",
            "contenus": {
                "paragraphs": [
                    "Anenumis a special \"class\" that represents a group ofconstants(unchangeable variables, likefinalvariables).",
                    "To create anenum, use theenumkeyword (instead of class or interface), and separate \nthe constants with a comma. Note that they should be in uppercase letters:",
                    "You can accessenumconstants with thedotsyntax:",
                    "Enumis short for \"enumerations\", which means \"specifically listed\".",
                    "You can also have anenuminside a class:",
                    "The output will be:",
                    "Enums are often used inswitchstatements to check for corresponding values:",
                    "The output will be:",
                    "The enum type has avalues()method, which returns an array of all enum constants. This method is useful when you want to loop through the constants of an enum:",
                    "The output will be:",
                    "Anenumcan, just like aclass, have attributes and methods. The only \ndifference is that enum constants arepublic,staticandfinal(unchangeable - cannot be overridden).",
                    "Anenumcannot be used to create objects, and it cannot extend other classes (but it can implement interfaces).",
                    "Use enums when you have values that you know aren't going to change, like month days, days, colors, deck of cards, etc."
                ],
                "lists": [],
                "examples": [
                    "Level myVar = Level.MEDIUM;"
                ]
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/java/java_user_input.asp",
        "cours": {
            "titre": "JavaUser Input (Scanner)",
            "description": "",
            "lien": "https://www.w3schools.com/java/java_user_input.asp",
            "contenus": {
                "paragraphs": [
                    "TheScannerclass is used to get \nuser input, and it is found in thejava.utilpackage.",
                    "To use theScannerclass, create an object of the class and use any of the available methods found in theScannerclass documentation. \nIn our example, we will use thenextLine()method, which is used to read Strings:",
                    "Run Example »",
                    "If you don't know what a package is, read ourJava Packages Tutorial.",
                    "In the example above, we used thenextLine()method, which is used to read Strings. To read other types, look at the table below:",
                    "In the example below, we use different methods to read data of various types:",
                    "Run Example »",
                    "Note:If you enter wrong input (e.g. text in a numerical input), you will get an exception/error message (like \"InputMismatchException\").",
                    "You can read more about exceptions and how to handle errors in theExceptions chapter.",
                    "Tip:For a complete reference of Scanner methods, go to ourJava Scanner Reference."
                ],
                "lists": [],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/java/java_date.asp",
        "cours": {
            "titre": "JavaDate and Time",
            "description": "",
            "lien": "https://www.w3schools.com/java/java_date.asp",
            "contenus": {
                "paragraphs": [
                    "Java does not have a built-in Date class, but we can import thejava.timepackage to work with the date and time API. The package includes many date and time classes. \nFor example:",
                    "If you don't know what a package is, read ourJava Packages Tutorial.",
                    "To display the current date, import thejava.time.LocalDateclass, and use itsnow()method:",
                    "The output will be:",
                    "To display the current time (hour, minute, second, and nanoseconds), import thejava.time.LocalTimeclass, and use itsnow()method:",
                    "This example displays the server's local time, which may differ from your \nlocal time:",
                    "To display the current date and time, import thejava.time.LocalDateTimeclass, and use itsnow()method:",
                    "The output will be something like this:",
                    "The \"T\" in the example above is used to separate the date from the time. You can use theDateTimeFormatterclass \nwith theofPattern()method in the same package to format or parse date-time objects. \nThe following example will remove both the \"T\" and nanoseconds from the date-time:",
                    "The output will be:",
                    "TheofPattern()method accepts all sorts of values, if you want to display \nthe date and time in a different format. For example:"
                ],
                "lists": [],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/java/java_arraylist.asp",
        "cours": {
            "titre": "JavaArrayList",
            "description": "",
            "lien": "https://www.w3schools.com/java/java_arraylist.asp",
            "contenus": {
                "paragraphs": [
                    "TheArrayListclass is a resizablearray, which can be found in thejava.utilpackage.",
                    "The difference between a built-in array and anArrayListin Java, is that the size of an array cannot be modified (if you want to \nadd or remove elements to/from an array, you have to create a new one). While elements can be added and removed from anArrayListwhenever you want. The syntax is also slightly different:",
                    "Create anArrayListobject calledcarsthat will store strings:",
                    "If you don't know what a package is, read ourJava Packages Tutorial.",
                    "TheArrayListclass has many useful methods. For example, to add elements to the \nlist, use theadd()method:",
                    "Try it Yourself »",
                    "You can also add an item at a specified position by referring to the index \nnumber:",
                    "Try it Yourself »",
                    "Remember:Array indexes start with 0: [0] is the first element. [1] is the second \nelement, etc.",
                    "To access an element in theArrayList, use theget()method and refer to the index number:",
                    "Try it Yourself »",
                    "To modify an element, use theset()method \nand refer to the index number:",
                    "Try it Yourself »",
                    "To remove an element, use theremove()method \nand refer to the index number:",
                    "Try it Yourself »",
                    "To remove all the elements in theArrayList, use theclear()method:",
                    "Try it Yourself »",
                    "To find out how many elements an ArrayList have, use thesizemethod:",
                    "Try it Yourself »",
                    "Loop through the elements of anArrayListwith aforloop, and use thesize()method to specify how many times the loop should run:",
                    "Try it Yourself »",
                    "You can also loop through anArrayListwith thefor-eachloop:",
                    "Try it Yourself »",
                    "Elements in an ArrayList are actually objects. In the examples above, we created elements \n(objects) of type \"String\". Remember that a String in Java is an object (not a primitive type). To use other types, such as int, you must specify an equivalentwrapper class:Integer. For other primitive types, \nuse:Booleanfor boolean,Characterfor char,Doublefor double, \netc:",
                    "Create anArrayListto store numbers (add elements of typeInteger):",
                    "Try it Yourself »",
                    "Another useful class in thejava.utilpackage is theCollectionsclass, which include thesort()method for sorting lists \nalphabetically or numerically:",
                    "Sort an ArrayList of Strings:",
                    "Try it Yourself »",
                    "Sort an ArrayList of Integers:",
                    "Try it Yourself »",
                    "For a complete reference of ArrayList methods, go to ourJava ArrayList Reference."
                ],
                "lists": [],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/java/java_linkedlist.asp",
        "cours": {
            "titre": "JavaLinkedList",
            "description": "",
            "lien": "https://www.w3schools.com/java/java_linkedlist.asp",
            "contenus": {
                "paragraphs": [
                    "In the previous chapter, you learned about theArrayListclass. TheLinkedListclass is \nalmost identical to theArrayList:",
                    "Try it Yourself »",
                    "TheLinkedListclass is a collection which can contain many objects of the same type,\njust like theArrayList.",
                    "TheLinkedListclass has all of the same methods as theArrayListclass because\nthey both implement theListinterface. This means that you can add items, change\nitems, remove items and clear the list in the same way.",
                    "However, while theArrayListclass and theLinkedListclass can be used in the same way,\nthey are built very differently.",
                    "TheArrayListclass has a regular array inside it. When an element is added, it is placed\ninto the array. If the array is not big enough, a new, larger array is created to replace the\nold one and the old one is removed.",
                    "TheLinkedListstores its items in \"containers.\" The list has a link to the first container\nand each container has a link to the next container in the list. To add an element to the list,\nthe element is placed into a new container and that container is linked to one of the other\ncontainers in the list.",
                    "Use anArrayListfor storing and accessing data, andLinkedListto \nmanipulate data.",
                    "For many cases, theArrayListis more efficient as it is common to need access to\nrandom items in the list, but theLinkedListprovides several methods to do certain\noperations more efficiently:",
                    "For a complete reference of LinkedList methods, go to ourJava LinkedList Reference."
                ],
                "lists": [],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/java/java_sort_list.asp",
        "cours": {
            "titre": "JavaList Sorting",
            "description": "",
            "lien": "https://www.w3schools.com/java/java_sort_list.asp",
            "contenus": {
                "paragraphs": [
                    "In the previous chapters, you learned how to use two popular lists in Java:ArrayListandLinkedList, which are found in thejava.utilpackage.Another useful class in thejava.utilpackage is theCollectionsclass, which include thesort()method for sorting lists \nalphabetically or numerically.Sort an ArrayListSort an ArrayList of Strings alphabetically in ascending order:Exampleimport java.util.ArrayList;\nimport java.util.Collections;  // Import the Collections class\n\npublic class Main {\n  public static void main(String[] args) {\n    ArrayList<String> cars = new ArrayList<String>();\n    cars.add(\"Volvo\");\n    cars.add(\"BMW\");\n    cars.add(\"Ford\");\n    cars.add(\"Mazda\");\n\n    Collections.sort(cars);  // Sort cars\n\n    for (String i : cars) {\n      System.out.println(i);\n    }\n  }\n}Try it Yourself »Sort an ArrayList of Integers numerically in ascending order:Exampleimport java.util.ArrayList;\nimport java.util.Collections;  // Import the Collections class\n\npublic class Main {\n  public static void main(String[] args) {\n    ArrayList<Integer> myNumbers = new ArrayList<Integer>();\n    myNumbers.add(33);\n    myNumbers.add(15);\n    myNumbers.add(20);\n    myNumbers.add(34);\n    myNumbers.add(8);\n    myNumbers.add(12);\n\n    Collections.sort(myNumbers);  // Sort myNumbers\n\n    for (int i : myNumbers) {\n      System.out.println(i);\n    }\n  }\n}Try it Yourself »Reverse the OrderYou can also sort a list in reverse order, by using thereverseOrder()method.In the following example, we sort an ArrayList of Strings alphabetically in \nreverse/descending order:Exampleimport java.util.ArrayList;\nimport java.util.Collections;  // Import the Collections class\n\npublic class Main {\n  public static void main(String[] args) {\n    ArrayList<String> cars = new ArrayList<String>();\n    cars.add(\"Volvo\");\n    cars.add(\"BMW\");\n    cars.add(\"Ford\");\n    cars.add(\"Mazda\");\n\n    Collections.sort(cars, Collections.reverseOrder()); // Sort myNumbers\n\n    for (String i : cars) {\n      System.out.println(i);\n    }\n  }\n}Try it Yourself »Sort an ArrayList of Integers numerically in reverse/descending order:Exampleimport java.util.ArrayList;\nimport java.util.Collections;  // Import the Collections class\n\npublic class Main {\n  public static void main(String[] args) {\n    ArrayList<Integer> myNumbers = new ArrayList<Integer>();\n    myNumbers.add(33);\n    myNumbers.add(15);\n    myNumbers.add(20);\n    myNumbers.add(34);\n    myNumbers.add(8);\n    myNumbers.add(12);\n\n    Collections.sort(myNumbers, Collections.reverseOrder()); // Sort myNumbers\n\n    for (int i : myNumbers) {\n      System.out.println(i);\n    }\n  }\n}Try it Yourself »❮ PreviousNext ❯★+1Track your progress - it's free!Log inSign Up",
                    "Another useful class in thejava.utilpackage is theCollectionsclass, which include thesort()method for sorting lists \nalphabetically or numerically.",
                    "Sort an ArrayList of Strings alphabetically in ascending order:",
                    "Try it Yourself »",
                    "Sort an ArrayList of Integers numerically in ascending order:",
                    "Try it Yourself »",
                    "You can also sort a list in reverse order, by using thereverseOrder()method.",
                    "In the following example, we sort an ArrayList of Strings alphabetically in \nreverse/descending order:",
                    "Try it Yourself »",
                    "Sort an ArrayList of Integers numerically in reverse/descending order:",
                    "Try it Yourself »"
                ],
                "lists": [],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/java/java_hashmap.asp",
        "cours": {
            "titre": "JavaHashMap",
            "description": "",
            "lien": "https://www.w3schools.com/java/java_hashmap.asp",
            "contenus": {
                "paragraphs": [
                    "In theArrayListchapter, you learned that Arrays store items as an ordered collection, and you have to access them with an index number (inttype).\nAHashMaphowever, store items in \"key/value\" pairs, and you can access them by an index of another type (e.g. aString).",
                    "One object is used as a key (index) to another \nobject (value). It can store different types:Stringkeys andIntegervalues, or the \nsame type, like:Stringkeys andStringvalues:",
                    "Create aHashMapobject calledcapitalCitiesthat will storeStringkeysandStringvalues:",
                    "TheHashMapclass has many useful methods. For example, to \nadd items to it, use theput()method:",
                    "Try it Yourself »",
                    "To access a value in theHashMap, use theget()method and refer to \nits key:",
                    "Try it Yourself »",
                    "To remove an item, use theremove()method \nand refer to the key:",
                    "Try it Yourself »",
                    "To remove all items, use theclear()method:",
                    "Try it Yourself »",
                    "To find out how many items there are, use thesize()method:",
                    "Try it Yourself »",
                    "Loop through the items of aHashMapwith afor-eachloop.",
                    "Note:Use thekeySet()method if you only want the keys, and use thevalues()method if you only want the values:",
                    "Try it Yourself »",
                    "Try it Yourself »",
                    "Try it Yourself »",
                    "Keys and values in a HashMap are actually objects. In the examples above, we used objects of type \"String\". Remember that a String in Java is an object (not a primitive type). To use other types, such as int, you must specify an equivalentwrapper class:Integer. For other primitive types, \nuse:Booleanfor boolean,Characterfor char,Doublefor double, \netc:",
                    "Create aHashMapobject calledpeoplethat will storeStringkeysandIntegervalues:",
                    "Try it Yourself »",
                    "For a complete reference of HashMap methods, go to ourJava HashMap Reference."
                ],
                "lists": [],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/java/java_hashset.asp",
        "cours": {
            "titre": "JavaHashSet",
            "description": "",
            "lien": "https://www.w3schools.com/java/java_hashset.asp",
            "contenus": {
                "paragraphs": [
                    "A HashSet is a collection of items where every item is unique, and it is found in thejava.utilpackage:",
                    "Create aHashSetobject calledcarsthat will store strings:",
                    "TheHashSetclass has many useful methods. For example, to \nadd items to it, use theadd()method:",
                    "Try it Yourself »",
                    "Note:In the example above, even though BMW is added twice it only appears once in the set\nbecause every item in a set has to be unique.",
                    "To check whether an item exists in a HashSet, use thecontains()method:",
                    "Try it Yourself »",
                    "To remove an item, use theremove()method:",
                    "Try it Yourself »",
                    "To remove all items, use theclear()method:",
                    "Try it Yourself »",
                    "To find out how many items there are, use thesizemethod:",
                    "Try it Yourself »",
                    "Loop through the items of anHashSetwith afor-eachloop:",
                    "Try it Yourself »",
                    "Items in an HashSet are actually objects. In the examples above, we created \nitems \n(objects) of type \"String\". Remember that a String in Java is an object (not a primitive type). To use other types, such as int, you must specify an equivalentwrapper class:Integer. For other primitive types, \nuse:Booleanfor boolean,Characterfor char,Doublefor double, \netc:",
                    "Use aHashSetthat storesIntegerobjects:",
                    "Try it Yourself »"
                ],
                "lists": [],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/java/java_iterator.asp",
        "cours": {
            "titre": "JavaIterator",
            "description": "",
            "lien": "https://www.w3schools.com/java/java_iterator.asp",
            "contenus": {
                "paragraphs": [
                    "AnIteratoris an object that can be used to loop through collections, likeArrayListandHashSet. It is called an \"iterator\" because \"iterating\" is the technical term for looping.",
                    "To use an Iterator, you must import it from thejava.utilpackage.",
                    "Theiterator()method can be used to get anIteratorfor any collection:",
                    "Try it Yourself »",
                    "To loop through a collection, use thehasNext()andnext()methods of theIterator:",
                    "Try it Yourself »",
                    "Iterators are designed to easily change the collections that they loop through. Theremove()method can remove items from a collection while looping.",
                    "Use an iterator to remove numbers less than 10 from a collection:",
                    "Try it Yourself »",
                    "Note:Trying to remove items using afor loopor afor-each loopwould not work correctly\nbecause the collection is changing size at the same time that the code is trying to loop."
                ],
                "lists": [],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/java/java_wrapper_classes.asp",
        "cours": {
            "titre": "JavaWrapper Classes",
            "description": "",
            "lien": "https://www.w3schools.com/java/java_wrapper_classes.asp",
            "contenus": {
                "paragraphs": [
                    "Wrapper classes provide a way to use primitive data types (int,boolean, \netc..) as objects.",
                    "The table below shows the primitive type and the equivalent wrapper class:",
                    "Sometimes you must use wrapper classes, for example when working with Collection objects, such \nasArrayList, where primitive types cannot be \nused (the list can only store objects):",
                    "Try it Yourself »",
                    "To create a wrapper object, use the wrapper class instead of the primitive \ntype. To get the value, you can just print the object:",
                    "Try it Yourself »",
                    "Since you're now working with objects, you can use certain methods to get \ninformation about the specific object.",
                    "For example, the following methods are used to get the value associated with \nthe corresponding wrapper object:intValue(),byteValue(),shortValue(),longValue(),floatValue(),doubleValue(),charValue(),booleanValue().",
                    "This example will output the same result as the example above:",
                    "Try it Yourself »",
                    "Another useful method is thetoString()method, which is used to convert wrapper objects to strings.",
                    "In the following example, we convert anIntegerto aString, and use thelength()method of theStringclass to output the length of the \"string\":",
                    "Try it Yourself »"
                ],
                "lists": [],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/java/java_try_catch.asp",
        "cours": {
            "titre": "Java Exceptions -Try...Catch",
            "description": "",
            "lien": "https://www.w3schools.com/java/java_try_catch.asp",
            "contenus": {
                "paragraphs": [
                    "When executing Java code, different errors can occur: coding errors made by the programmer, errors due to wrong input, \nor other unforeseeable things.",
                    "When an error occurs, Java will normally stop and generate an error message. The technical term for this is: Java will throw anexception(throw an error).",
                    "Thetrystatement allows you to define a block of code to be \ntested for errors while it is being executed.",
                    "Thecatchstatement allows you to define a block of code to \nbe executed, if an error occurs in the try block.",
                    "Thetryandcatchkeywords \ncome in pairs:",
                    "Consider the following example:",
                    "This will generate an error, becausemyNumbers[10]does not exist.",
                    "The output will be something like this:",
                    "Note:ArrayIndexOutOfBoundsExceptionoccurs when you try to access an index number that does not exist.",
                    "If an error occurs, we can usetry...catchto catch the error and execute some code to handle it:",
                    "The output will be:",
                    "Thefinallystatement lets you execute code, aftertry...catch, regardless of the result:",
                    "The output will be:",
                    "Thethrowstatement allows you to create a custom error.",
                    "Thethrowstatement is used together with anexception type. There are many exception types available in Java:ArithmeticException,FileNotFoundException,ArrayIndexOutOfBoundsException,SecurityException, etc:",
                    "Throw an exception ifageis below 18 (print \"Access \ndenied\"). If age is 18 or older, print \"Access granted\":",
                    "The output will be:",
                    "Ifagewas 20, you wouldnotget an exception:",
                    "The output will be:",
                    "Insert the missing parts to handle the error in the code below.",
                    "Start the Exercise",
                    "For a list of different errors and exception types, go to ourJava Errors and Exception Types Reference."
                ],
                "lists": [],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/java/java_regex.asp",
        "cours": {
            "titre": "JavaRegular Expressions",
            "description": "",
            "lien": "https://www.w3schools.com/java/java_regex.asp",
            "contenus": {
                "paragraphs": [
                    "A regular expression is a sequence of characters that forms a search pattern.\nWhen you search for data in a text, you can use this search pattern to describe what you\nare searching for.",
                    "A regular expression can be a single character, or a more complicated pattern.",
                    "Regular expressions can be used to perform all types oftext searchandtext replaceoperations.",
                    "Java does not have a built-in Regular Expression class, but we can import thejava.util.regexpackage to work with regular expressions. The package includes the following \nclasses:",
                    "Find out if there are any occurrences of the word \"w3schools\" in a sentence:",
                    "Try it Yourself »",
                    "In this example, The word \"w3schools\" is being searched for in a sentence.",
                    "First, the pattern is created using thePattern.compile()method. The first parameter\nindicates which pattern is being searched for and the second parameter has a flag to\nindicates that the search should be case-insensitive. The second parameter is optional.",
                    "Thematcher()method is used to search for the pattern in a string. It returns a Matcher\nobject which contains information about the search that was performed.",
                    "Thefind()method returns true if the pattern was found in the string and false if it was not\nfound.",
                    "Flags in thecompile()method change how the search is performed. Here are a few of\nthem:",
                    "The first parameter of thePattern.compile()method is the pattern. It describes what\nis being searched for.",
                    "Brackets are used to find a range of characters:",
                    "Metacharacters are characters with a special meaning:",
                    "Quantifiers define quantities:"
                ],
                "lists": [
                    [
                        "PatternClass - Defines a pattern (to be used in a search)",
                        "MatcherClass - Used to search for the \npattern",
                        "PatternSyntaxExceptionClass - Indicates syntax error in a regular \nexpression pattern"
                    ],
                    [
                        "Pattern.CASE_INSENSITIVE- The case of letters will be ignored when performing\na search.",
                        "Pattern.LITERAL- Special characters in the pattern will not have any special\nmeaning and will be treated as ordinary characters when performing a search.",
                        "Pattern.UNICODE_CASE- Use it together with theCASE_INSENSITIVEflag to\nalso ignore the case of letters outside of the English alphabet"
                    ]
                ],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/java/java_threads.asp",
        "cours": {
            "titre": "JavaThreads",
            "description": "",
            "lien": "https://www.w3schools.com/java/java_threads.asp",
            "contenus": {
                "paragraphs": [
                    "Threads allows a program to operate more efficiently by doing multiple things at the same\ntime.",
                    "Threads can be used to perform complicated tasks in the background without interrupting\nthe main program.",
                    "There are two ways to create a thread.",
                    "It can be created by extending theThreadclass and overriding itsrun()method:",
                    "Another way to create a thread is to implement theRunnableinterface:",
                    "If the class extends theThreadclass, the thread can be run by creating an instance of the\nclass and call itsstart()method:",
                    "Try it Yourself »",
                    "If the class implements theRunnableinterface, the thread can be run by passing an\ninstance of the class to aThreadobject's constructor and then calling the thread'sstart()method:",
                    "Try it Yourself »",
                    "Differences between \"extending\" and \"implementing\" Threads",
                    "The major difference is that when a class extends the Thread class, you cannot extend any other class, but by implementing the Runnable interface, \nit is possible to extend from another class as well, like: classMyClass extends OtherClass implements Runnable.",
                    "Because threads run at the same time as other parts of the program, there is no way to\nknow in which order the code will run. When the threads and main program are reading\nand writing the same variables, the values are unpredictable. The problems that result\nfrom this are called concurrency problems.",
                    "A code example where the value of the variableamountis unpredictable:",
                    "Try it Yourself »",
                    "To avoid concurrency problems, it is best to share as few attributes between threads as\npossible. If attributes need to be shared, one possible solution is to use theisAlive()method of the thread to check whether the thread has finished running before using any \nattributes that the thread can change.",
                    "UseisAlive()to prevent concurrency problems:",
                    "Try it Yourself »"
                ],
                "lists": [],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/java/java_lambda.asp",
        "cours": {
            "titre": "JavaLambda Expressions",
            "description": "",
            "lien": "https://www.w3schools.com/java/java_lambda.asp",
            "contenus": {
                "paragraphs": [
                    "Lambda Expressions were added in Java 8.",
                    "A lambda expression is a short block of code which takes in parameters and returns a\nvalue. Lambda expressions are similar to methods, but they do not need a name and they\ncan be implemented right in the body of a method.",
                    "The simplest lambda expression contains a single parameter and an expression:",
                    "To use more than one parameter, wrap them in parentheses:",
                    "Expressions are limited. They have to immediately return a value, and they cannot contain\nvariables, assignments or statements such asiforfor. In order to do more complex\noperations, a code block can be used with curly braces. If the lambda expression needs to\nreturn a value, then the code block should have areturnstatement.",
                    "Lambda expressions are usually passed as parameters to a function:",
                    "Use a lambda expression in theArrayList'sforEach()method to print\nevery item in the list:",
                    "Try it Yourself »",
                    "Lambda expressions can be stored in variables if the variable's type is an interface which\nhas only one method. The lambda expression should have the same number of\nparameters and the same return type as that method. Java has many of these kinds of\ninterfaces built in, such as theConsumerinterface (found in thejava.utilpackage) used by lists.",
                    "Use Java'sConsumerinterface to store a lambda expression in a variable:",
                    "Try it Yourself »",
                    "To use a lambda expression in a method, the method should have a parameter with a\nsingle-method interface as its type. Calling the interface's method will run the lambda\nexpression:",
                    "Create a method which takes a lambda expression as a parameter:",
                    "Try it Yourself »"
                ],
                "lists": [],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/java/java_advanced_sorting.asp",
        "cours": {
            "titre": "JavaAdvanced Sorting (Comparator and Comparable)",
            "description": "",
            "lien": "https://www.w3schools.com/java/java_advanced_sorting.asp",
            "contenus": {
                "paragraphs": [
                    "In theList Sorting Chapter, you learned how to sort lists alphabetically and numerically, but what if the list has objects in it?",
                    "To sort objects you need to specify a rule that decides how objects should be sorted. For example, if you have a list of cars you might want to sort them by year, the rule could be that cars with an earlier year go first.",
                    "TheComparatorandComparableinterfaces allow you to specify what rule is used to sort objects.",
                    "Being able to specify a sorting rule also allows you to change how strings and numbers are sorted.",
                    "An object that implements theComparatorinterface is called a comparator.",
                    "TheComparatorinterface allows you to create a class with acompare()method that compares two objects to decide which one should go first in a list.",
                    "Thecompare()method should return a number which is:",
                    "A class that implements theComparatorinterface might look something like this:",
                    "To use the comparator, pass it as an argument into a sorting method:",
                    "Here is a complete example using a comparator to sort a list of cars by year:",
                    "To make the code shorter, the comparator can be replaced with a lambda expression which has the same arguments and return value as thecompare()method:",
                    "Use a lambda expression as a comparator:",
                    "Comparators can also be used to make special sorting rules for strings and numbers. In this example we use a comparator to list all of the even numbers before the odd ones:",
                    "TheComparableinterface allows an object to specify its own sorting rule with acompareTo()method.",
                    "ThecompareTo()method takes an object as an argument and compares the comparable with the argument to decide which one should go first in a list.",
                    "Like the comparator, thecompareTo()method returns a number which is:",
                    "Many native Java classes implement theComparableinterface, such asStringandInteger.",
                    "This is why strings and numbers do not need a comparator to be sorted.",
                    "An object that implements theComparableinterface might look something like this:",
                    "Here is the same example as before but using theComparableinterface instead of a comparator:",
                    "The most obvious way to sort two numbers naturally is to write something like this:",
                    "But it can actually be done with just a single line:",
                    "This trick can also be used to easily sort things in reverse:",
                    "A comparator is an object with one method that is used to compare two different objects.",
                    "A comparable is an object which can compare itself with other objects.",
                    "It is easier to use theComparableinterface when possible, but theComparatorinterface is more powerful because it allows you to sort any kind of object even if you cannot change its code.❮ PreviousNext ❯★+1Track your progress - it's free!Log inSign Up",
                    "❮ PreviousNext ❯★+1Track your progress - it's free!Log inSign Up"
                ],
                "lists": [
                    [
                        "Negative if the first object should go first in a list.",
                        "Positive if the second object should go first in a list.",
                        "Zero if the order does not matter."
                    ],
                    [
                        "Negative if the comparable should go first in a list.",
                        "Positive if the other object should go first in a list.",
                        "Zero if the order does not matter."
                    ]
                ],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/java/java_files.asp",
        "cours": {
            "titre": "JavaFiles",
            "description": "",
            "lien": "https://www.w3schools.com/java/java_files.asp",
            "contenus": {
                "paragraphs": [
                    "File handling is an important part of any application.",
                    "Java has several methods for creating, reading, updating, and \ndeleting files.",
                    "TheFileclass from thejava.iopackage, allows \nus to work with files.",
                    "To use theFileclass, create an object of \nthe class, and specify the filename or directory name:Exampleimport java.io.File;  // Import the File class\n\nFile myObj = new File(\"filename.txt\"); // Specify the filenameIf you don't know what a package is, read ourJava Packages Tutorial.TheFileclass has many useful methods for creating and getting information \nabout files. \nFor example:MethodTypeDescriptioncanRead()BooleanTests whether the file is readable or notcanWrite()BooleanTests whether the file is writable or notcreateNewFile()BooleanCreates an empty filedelete()BooleanDeletes a fileexists()BooleanTests whether the file existsgetName()StringReturns the name of the filegetAbsolutePath()StringReturns the absolute pathname of the filelength()LongReturns the size of the file in byteslist()String[]Returns an array of the files in the directorymkdir()BooleanCreates a directoryYou will learn how to create, write, read and delete files in the next chapters:Create/Write Files »Read Files »Delete Files »❮ PreviousNext ❯★+1Track your progress - it's free!Log inSign Up",
                    "If you don't know what a package is, read ourJava Packages Tutorial.",
                    "TheFileclass has many useful methods for creating and getting information \nabout files. \nFor example:",
                    "You will learn how to create, write, read and delete files in the next chapters:"
                ],
                "lists": [],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/java/java_files_create.asp",
        "cours": {
            "titre": "JavaCreate and Write To Files",
            "description": "",
            "lien": "https://www.w3schools.com/java/java_files_create.asp",
            "contenus": {
                "paragraphs": [
                    "To create a file in Java, you can use thecreateNewFile()method. This method returns a \nboolean value:trueif the file was successfully created, andfalseif the file \nalready exists. Note that the method is enclosed in atry...catchblock. This is necessary because it throws anIOExceptionif an error occurs (if the \nfile cannot be created for some reason):",
                    "The output will be:",
                    "To create a file in a specific directory (requires permission), specify the path of the file and use double backslashes to escape the \"\\\" character (for Windows). On Mac and Linux you can just write the path, like: /Users/name/filename.txt",
                    "Run Example »",
                    "In the \nfollowing example, we use theFileWriterclass together with itswrite()method \nto write some text to the file we created in the example above. Note that when you are done writing to the file, \nyou should close it \nwith theclose()method:",
                    "The output will be:",
                    "To read the file above, go to theJava Read Fileschapter."
                ],
                "lists": [],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/java/java_files_read.asp",
        "cours": {
            "titre": "JavaRead Files",
            "description": "",
            "lien": "https://www.w3schools.com/java/java_files_read.asp",
            "contenus": {
                "paragraphs": [
                    "In the previous chapter, you learned how to create and write to a file.",
                    "In the \nfollowing example, we use theScannerclass to read the contents of the text file we created in the previous chapter:",
                    "The output will be:",
                    "To get more information about a file, use any of theFilemethods:",
                    "The output will be:",
                    "Note:There are many available classes in the Java API that can be used to read and write files in Java:FileReader, BufferedReader, Files, Scanner, FileInputStream, FileWriter, BufferedWriter, FileOutputStream, etc. Which one to use depends on the Java version you're working with and whether you need to read bytes or characters, and the size of the file/lines etc.",
                    "Tip:To delete a file, read ourJava Delete Fileschapter."
                ],
                "lists": [],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/java/java_files_delete.asp",
        "cours": {
            "titre": "JavaDelete Files",
            "description": "",
            "lien": "https://www.w3schools.com/java/java_files_delete.asp",
            "contenus": {
                "paragraphs": [
                    "To delete a file in Java, use thedelete()method:",
                    "The output will be:",
                    "You can also delete a folder. However, it must be empty:",
                    "The output will be:"
                ],
                "lists": [],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/java/java_howto_add_two_numbers.asp",
        "cours": {
            "titre": "JavaHow To Add Two Numbers",
            "description": "",
            "lien": "https://www.w3schools.com/java/java_howto_add_two_numbers.asp",
            "contenus": {
                "paragraphs": [
                    "Learn how to add two numbers in Java:",
                    "Learn how to add two numbers with user input:"
                ],
                "lists": [],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/java/java_howto_count_words.asp",
        "cours": {
            "titre": "JavaHow To Count Words",
            "description": "",
            "lien": "https://www.w3schools.com/java/java_howto_count_words.asp",
            "contenus": {
                "paragraphs": [
                    "You can easily count the number of words in a string with the following example:",
                    "Java String Tutorial",
                    "Java String Methods"
                ],
                "lists": [],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/java/java_howto_reverse_string.asp",
        "cours": {
            "titre": "JavaHow To Reverse a String",
            "description": "",
            "lien": "https://www.w3schools.com/java/java_howto_reverse_string.asp",
            "contenus": {
                "paragraphs": [
                    "You can easily reverse a string by characters with the following example:",
                    "Java String Tutorial",
                    "Java String Methods"
                ],
                "lists": [],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/java/java_howto_sum_of_array_elements.asp",
        "cours": {
            "titre": "JavaHow To Calculate the Sum of Elements",
            "description": "",
            "lien": "https://www.w3schools.com/java/java_howto_sum_of_array_elements.asp",
            "contenus": {
                "paragraphs": [
                    "Get the sum of array elements:"
                ],
                "lists": [],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/java/java_howto_string_to_array.asp",
        "cours": {
            "titre": "JavaHow To Convert a String to an Array",
            "description": "",
            "lien": "https://www.w3schools.com/java/java_howto_string_to_array.asp",
            "contenus": {
                "paragraphs": [
                    "There are many ways to convert a string to an array. The simplest way is to use thetoCharArray()method:",
                    "Convert a string to achararray:",
                    "You can also loop through the array to print all array elements:",
                    "Java Strings Tutorial",
                    "Java Array Tutorial",
                    "The toCharArray() String Method"
                ],
                "lists": [],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/java/java_howto_sort_an_array.asp",
        "cours": {
            "titre": "JavaHow To Sort an Array",
            "description": "",
            "lien": "https://www.w3schools.com/java/java_howto_sort_an_array.asp",
            "contenus": {
                "paragraphs": [
                    "You can use thesort()method, found injava.util.Arrays, to sort an array:",
                    "Try it Yourself »",
                    "Java Array Tutorial",
                    "Java Arrays Class Reference"
                ],
                "lists": [],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/java/java_howto_calculate_avg_array.asp",
        "cours": {
            "titre": "JavaHow To Find the Average of Array Elements",
            "description": "",
            "lien": "https://www.w3schools.com/java/java_howto_calculate_avg_array.asp",
            "contenus": {
                "paragraphs": [
                    "Create a program that calculates the average of different ages:",
                    "Try it Yourself »",
                    "Java Array Tutorial"
                ],
                "lists": [],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/java/java_howto_find_smallest_array_el.asp",
        "cours": {
            "titre": "JavaHow To Find the Smallest Element in an Array",
            "description": "",
            "lien": "https://www.w3schools.com/java/java_howto_find_smallest_array_el.asp",
            "contenus": {
                "paragraphs": [
                    "Create a program that finds the lowest age among different ages:",
                    "Try it Yourself »",
                    "Java Array Tutorial"
                ],
                "lists": [],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/java/java_howto_loop_through_arraylist.asp",
        "cours": {
            "titre": "JavaHow To Loop Through an ArrayList",
            "description": "",
            "lien": "https://www.w3schools.com/java/java_howto_loop_through_arraylist.asp",
            "contenus": {
                "paragraphs": [
                    "Loop through the elements of anArrayList:",
                    "Try it Yourself »",
                    "Java ArrayList Tutorial",
                    "Java ArrayList Methods"
                ],
                "lists": [],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/java/java_howto_loop_through_hashmap.asp",
        "cours": {
            "titre": "JavaHow To Loop Through a HashMap",
            "description": "",
            "lien": "https://www.w3schools.com/java/java_howto_loop_through_hashmap.asp",
            "contenus": {
                "paragraphs": [
                    "Loop through the items of aHashMapwith afor-eachloop.",
                    "Note:Use thekeySet()method if you only want the keys, and use thevalues()method if you only want the values:",
                    "Try it Yourself »",
                    "Try it Yourself »",
                    "Try it Yourself »",
                    "Java HashMap Tutorial",
                    "Java HashMap Methods"
                ],
                "lists": [],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/java/java_howto_loop_through_enum.asp",
        "cours": {
            "titre": "JavaHow To Loop Through an Enum",
            "description": "",
            "lien": "https://www.w3schools.com/java/java_howto_loop_through_enum.asp",
            "contenus": {
                "paragraphs": [
                    "The enum type has avalues()method, which returns an array of all enum constants. This method is useful when you want to loop through the constants of an enum:",
                    "Java Enums Tutorial"
                ],
                "lists": [],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/java/java_howto_area_of_rectangle.asp",
        "cours": {
            "titre": "JavaHow To Get the Area of a Rectangle",
            "description": "",
            "lien": "https://www.w3schools.com/java/java_howto_area_of_rectangle.asp",
            "contenus": {
                "paragraphs": [
                    "The area of a rectangle can be found by multiplying the length of the \nrectangle by the width:"
                ],
                "lists": [],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/java/java_howto_even_or_odd.asp",
        "cours": {
            "titre": "JavaHow To Find Even or Odd Numbers",
            "description": "",
            "lien": "https://www.w3schools.com/java/java_howto_even_or_odd.asp",
            "contenus": {
                "paragraphs": [
                    "Find out if a number is even or odd:",
                    "Java Numbers Tutorial",
                    "Java Operators Tutorial",
                    "Java Math Tutorial"
                ],
                "lists": [],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/java/java_howto_pos_or_neg.asp",
        "cours": {
            "titre": "JavaHow To Find Positive or Negative Numbers",
            "description": "",
            "lien": "https://www.w3schools.com/java/java_howto_pos_or_neg.asp",
            "contenus": {
                "paragraphs": [
                    "Find out if a number is even or odd:",
                    "Java If..Else Tutorial"
                ],
                "lists": [],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/java/java_howto_find_square_root.asp",
        "cours": {
            "titre": "JavaHow To Find the Square Root of a Number",
            "description": "",
            "lien": "https://www.w3schools.com/java/java_howto_find_square_root.asp",
            "contenus": {
                "paragraphs": [
                    "You can useMath.sqrt()to find the square root of a number:",
                    "Find the square root of 64:",
                    "Java Math Tutorial",
                    "Java Math Reference"
                ],
                "lists": [],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/java/java_howto_random_number.asp",
        "cours": {
            "titre": "JavaHow To Generate Random Numbers",
            "description": "",
            "lien": "https://www.w3schools.com/java/java_howto_random_number.asp",
            "contenus": {
                "paragraphs": [
                    "You can useMath.random()method to generate a random number.Math.random()returns a random number between 0.0 (inclusive), and 1.0 (exclusive):ExampleMath.random();Try it Yourself »To get more control over the random number, for example, if you only want a random number between 0 and 100, you can use the following formula:Exampleint randomNum = (int)(Math.random() * 101); // 0 to 100Try it Yourself »Related PagesJava Math TutorialJava Math ReferenceJava Type Casting❮ PreviousNext ❯★+1Track your progress - it's free!Log inSign Up",
                    "Math.random()returns a random number between 0.0 (inclusive), and 1.0 (exclusive):",
                    "Try it Yourself »",
                    "To get more control over the random number, for example, if you only want a random number between 0 and 100, you can use the following formula:",
                    "Try it Yourself »",
                    "Java Math Tutorial",
                    "Java Math Reference",
                    "Java Type Casting"
                ],
                "lists": [],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/java/java_ref_reference.asp",
        "cours": {
            "titre": "JavaReferenceDocumentation",
            "description": "",
            "lien": "https://www.w3schools.com/java/java_ref_reference.asp",
            "contenus": {
                "paragraphs": [
                    "This section contains a Java reference documentation.",
                    "A list of Java keywords and methods can be found here:"
                ],
                "lists": [],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/java/java_ref_keywords.asp",
        "cours": {
            "titre": "JavaKeywords",
            "description": "",
            "lien": "https://www.w3schools.com/java/java_ref_keywords.asp",
            "contenus": {
                "paragraphs": [
                    "Java has a set of keywords that are reserved words that cannot be used as \nvariables, methods, classes, or any other identifiers:",
                    "Note:true,false, andnullare not keywords, but they are literals and reserved words that cannot be used as identifiers."
                ],
                "lists": [],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/java/java_ref_string.asp",
        "cours": {
            "titre": "JavaString Methods",
            "description": "",
            "lien": "https://www.w3schools.com/java/java_ref_string.asp",
            "contenus": {
                "paragraphs": [
                    "The String class has a set of built-in methods that you can use on strings.",
                    "Java Strings Tutorial"
                ],
                "lists": [],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/java/java_ref_math.asp",
        "cours": {
            "titre": "JavaMath Methods",
            "description": "",
            "lien": "https://www.w3schools.com/java/java_ref_math.asp",
            "contenus": {
                "paragraphs": [
                    "The Java Math class has many methods that allows you to perform mathematical tasks on numbers.",
                    "A list of all Math methods can be found in the table below:",
                    "Note:All Math methods arestatic.",
                    "Java Math Tutorial"
                ],
                "lists": [],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/java/java_ref_output.asp",
        "cours": {
            "titre": "JavaOutput Methods",
            "description": "",
            "lien": "https://www.w3schools.com/java/java_ref_output.asp",
            "contenus": {
                "paragraphs": [
                    "TheSystem.outstream, short for \"output\", is used together with different methods to output values or print text to the console:"
                ],
                "lists": [],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/java/java_ref_arrays.asp",
        "cours": {
            "titre": "JavaArrays Class",
            "description": "",
            "lien": "https://www.w3schools.com/java/java_ref_arrays.asp",
            "contenus": {
                "paragraphs": [
                    "The JavaArraysclass (found injava.util), has methods that allow you to manipulate arrays.",
                    "A list of popular methods of the Arrays Class can be found in the table below:",
                    "Thelengthproperty is a built-in Java property, and does not belong to the Arrays class.",
                    "Java Arrays Tutorial"
                ],
                "lists": [],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/java/java_ref_arraylist.asp",
        "cours": {
            "titre": "JavaArrayList Methods",
            "description": "",
            "lien": "https://www.w3schools.com/java/java_ref_arraylist.asp",
            "contenus": {
                "paragraphs": [
                    "A list of all ArrayList methods can be found in the table below.",
                    "Some methods use the type of the ArrayList's items as a parameter or return value. This type will be referred to asTin the table.",
                    "Java Arrays Tutorial",
                    "Java ArrayList Tutorial"
                ],
                "lists": [],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/java/java_ref_linkedlist.asp",
        "cours": {
            "titre": "JavaLinkedList Methods",
            "description": "",
            "lien": "https://www.w3schools.com/java/java_ref_linkedlist.asp",
            "contenus": {
                "paragraphs": [
                    "A list of all LinkedList methods can be found in the table below.",
                    "Some methods use the type of the LinkedList's items as a parameter or return value. This type will be referred to asTin the table.",
                    "Java Arrays Tutorial",
                    "Java LinkedList Tutorial",
                    "Java ArrayList Tutorial"
                ],
                "lists": [],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/java/java_ref_hashmap.asp",
        "cours": {
            "titre": "JavaHashMap Methods",
            "description": "",
            "lien": "https://www.w3schools.com/java/java_ref_hashmap.asp",
            "contenus": {
                "paragraphs": [
                    "A list of all HashMap methods can be found in the table below.",
                    "Some methods use the type of the HashMap's entries as a parameter or return value. The type of the key will be referred to asKand the type of the value will be referred to asVin the table.",
                    "Java HashMap Tutorial"
                ],
                "lists": [],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/java/java_ref_scanner.asp",
        "cours": {
            "titre": "JavaScanner Methods",
            "description": "",
            "lien": "https://www.w3schools.com/java/java_ref_scanner.asp",
            "contenus": {
                "paragraphs": [
                    "TheScannerclass can be used to obtain data from the keyboard, files and strings.",
                    "A list of usefulScannermethods can be found in the table below."
                ],
                "lists": [],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/java/java_ref_iterators.asp",
        "cours": {
            "titre": "JavaIterator Interface",
            "description": "",
            "lien": "https://www.w3schools.com/java/java_ref_iterators.asp",
            "contenus": {
                "paragraphs": [
                    "TheIteratorinterface provides methods to access and iterate through collections:",
                    "Note:Thenext()method uses the type of the iterator's items as its return value. This type is referred to asTin the table."
                ],
                "lists": [],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/java/java_ref_errors.asp",
        "cours": {
            "titre": "JavaErrors and Exception Types",
            "description": "",
            "lien": "https://www.w3schools.com/java/java_ref_errors.asp",
            "contenus": {
                "paragraphs": [
                    "The table below shows a list of commonErrorandExceptiontypes in Java:"
                ],
                "lists": [],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/java/java_examples.asp",
        "cours": {
            "titre": "JavaExamples",
            "description": "",
            "lien": "https://www.w3schools.com/java/java_examples.asp",
            "contenus": {
                "paragraphs": [],
                "lists": [],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/java/java_compiler.asp",
        "cours": {
            "titre": "JavaOnline Compiler",
            "description": "",
            "lien": "https://www.w3schools.com/java/java_compiler.asp",
            "contenus": {
                "paragraphs": [
                    "With our online Java compiler, you can edit Java code, and view the result in your browser.",
                    "Click on the \"Try it Yourself\" button to see how it works.",
                    "If you want to create your own Java applications, check outW3Schools Spaces.",
                    "W3Schools Spacesis a website-building tool that enables you to create and share your own website, as well as develop and host Java applications.",
                    "You can change the website's look and how it works by editing the code right in your web browser.",
                    "It's easy to use and doesn't require any setup.",
                    "The code editor is packed with features to help you achieve more:",
                    "Practice is key to mastering coding, and the best way to put your Java knowledge into practice is by getting practical with code.",
                    "UseW3Schools Spacesto build, test and deploy code.",
                    "The code editor lets you write and practice different types of computer languages. It includes \nJava, but you can use it for other languages too.",
                    "New languages are added all the time:",
                    "If you don't know Java, we suggest that you read ourJava Tutorialfrom scratch.",
                    "Get an overview of your packages and easily add or delete frameworks and libraries. Then, with just one click, you can make changes to your packages without manual installation.",
                    "",
                    "You can also use the code editor inW3School Spacesto build frontend or full-stack websites from scratch.",
                    "Or you can use the 60+ templates available and save time:",
                    "Create your Spaces account today and explore them all!",
                    "Host and publish your websites in no time withW3School Spaces.",
                    "W3Schools subdomain and SSL certificate are included for free withW3School Spaces. An SSL certificate makes your website safe and secure. It also helps people trust your website and makes it easier to find it online.",
                    "Want a custom domain for your website?",
                    "You can buy a domain or transfer an existing one and connect it to your space.",
                    "Get started in a few clicks withW3School Spaces."
                ],
                "lists": [
                    [
                        "Templates:Start from scratch or use a template",
                        "Cloud-based:no installations required. You only need your browser",
                        "Terminal & Log:debug and troubleshoot your code easily",
                        "File Navigator:switch between files inside the code editor",
                        "And much more!"
                    ]
                ],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/java/java_exercises.asp",
        "cours": {
            "titre": "JavaExercises",
            "description": "",
            "lien": "https://www.w3schools.com/java/java_exercises.asp",
            "contenus": {
                "paragraphs": [
                    "Test your Java skills with exercises from all categories:",
                    "If you haven't already,sign upto become a W3Schooler, and get points for every exercise you complete.",
                    "As a logged-in W3Schools user you will have access to many features like havingyour own web page,track your learning progress,receive personal guided paths, andmore.",
                    "The exercises are a mix of \"multiple choice\" and \"fill in the blanks\" questions. \nThere are between 3 and 9 questions in  each category.\nThe answer can be found in the corresponding tutorial chapter. If you're stuck, \nor answer wrong, you can try again or hit the \"Show Answer\" button to see the correct answer.",
                    "Get certified by completingthecourse"
                ],
                "lists": [],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/java/java_quiz.asp",
        "cours": {
            "titre": "JavaQuiz",
            "description": "",
            "lien": "https://www.w3schools.com/java/java_quiz.asp",
            "contenus": {
                "paragraphs": [
                    "You can test your Java skills with W3Schools' Quiz.",
                    "The test contains 25 questions and there is no time limit.",
                    "The test is not official, it's just a nice way to see how much you know, or don't know, about \nJava.",
                    "You will get 1 point for each correct answer. At the end of the Quiz,\nyour total score will be displayed. Maximum score is 25 points.",
                    "Good luck!",
                    "Start the Java Quiz ❯",
                    "If you don't know Java, we suggest that you read ourJava Tutorialfrom scratch.",
                    "Get certified by completingthecourse"
                ],
                "lists": [],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/java/java_server.asp",
        "cours": {
            "titre": "JavaServer",
            "description": "",
            "lien": "https://www.w3schools.com/java/java_server.asp",
            "contenus": {
                "paragraphs": [
                    "Coding Skills",
                    "AI Tutor",
                    "Projects",
                    "Securely",
                    "By subscribing to a plan you support the W3Schools mission to makelearning available to everyone - no matter their background.",
                    "$0/Forever",
                    "This is for you that are beginning to explore coding and web development",
                    "$14.99/Month",
                    "This is for you that want to learn and reach your goals faster. Build fullstack projects, ad free experience.",
                    "Contact us for information",
                    "W3Schools right to use and Plus for educational institutions or enterprise customers",
                    "You can also buy a domain or connect an existing one.",
                    "Just landed inSpaces",
                    "Learn to code more effectivelyand intelligently with kAI - AI tutor",
                    "Hi! I'm kAI, W3Schools AI Tutor...",
                    "Feel free to ask me any coding-related questions, and I'll do my best to assist you.",
                    "I can help you checking your code for errors, improving your code's structure, explaining coding concepts in a clear and understandable way, and more...",
                    "I can even create complete websites for you based on your input, so what are you waiting for?",
                    "Cloud-based",
                    "Terminal & Log",
                    "How To Libraries",
                    "Database",
                    "File Navigator",
                    "Package Manager",
                    "Analytics",
                    "Environment Manager",
                    "With Basic Spaces, you can build frontend websites. Whereas with Fullstack Spaces, you can build frontend and backend websites.",
                    "Basic Spaces include HTML, CSS, and Javascript. Full Stack Spaces include everything in Basic Spaces plus PHP, Python, React.js, Vue.js, Node.js, Handlebars, and Django.",
                    "Your subscription will be automatically renewed every month.",
                    "Your access to all the benefits for the paid period of time will continue. However, the subscription will not be renewed automatically.",
                    "To subscribe W3Schools accounts for multiple users, you can contact sales@w3schools.com"
                ],
                "lists": [
                    [
                        "Build and host 1 static website",
                        "100 credits/monthAccess various AI features like W3Schools kAI coding tutor and interview preparation.",
                        "No support"
                    ],
                    [
                        "Ad-free experience",
                        "Build and host 15 static websites",
                        "Build and host 1 full stack server",
                        "Choose from 18 frameworks / languages",
                        "Choose from 75+ templates",
                        "50000 credits/monthAccess various AI features like W3Schools kAI coding tutor and interview preparation.",
                        "Priority Support",
                        "Cancel anytime"
                    ],
                    [
                        "Everything in W3Schools Plus",
                        "Certification Exams",
                        "And much more!"
                    ]
                ],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/java/java_syllabus.asp",
        "cours": {
            "titre": "JavaSyllabus",
            "description": "",
            "lien": "https://www.w3schools.com/java/java_syllabus.asp",
            "contenus": {
                "paragraphs": [
                    "TheW3Schools Java Tutorialis comprehensive and beginner-friendly.",
                    "It will give you a fundamental knowledge of Java.",
                    "It is designed for beginners and requires no prior experience with programming.",
                    "The content has been carefully made to be bite-sized, simple, and easy to understand.",
                    "The content has been proven by millions of users over the years. It is updated and improved frequently.",
                    "The syllabus outline and its sequence are structured so you can learn Java step by step, from the introduction to creating your first application with Java.",
                    "Get Started With Java »",
                    "Note:Are you a teacher teaching Java?W3Schools Academyis a toolbox of features that can help you teach. It offers classroom features such as pre-built study plans, classroom administration and much more. Read more aboutAcademy here.",
                    "Get Started",
                    "In this tutorial we offer different activities for you to learn Java for free:",
                    "You can also create a free account to track your progress.",
                    "As a signed-in user, you get access to features such as:",
                    "Sign Up - It's free",
                    "Get Started",
                    "Java, like any other coding language, is best learned by working hands-on with code.",
                    "Easily try code with our \"Try it Yourself\" editor.",
                    "Here, you can edit Java code and view the result.",
                    "Try it Yourself »",
                    "If you want to explore more and host your project, we have a feature calledSpacesthat allows you to build, test and deploy Java code and other backend languages.",
                    "Here you get a secure sandbox environment called Spaces, where you can practice coding and test projects in real-time.",
                    "Spaces allow you to test, build, and deploy code. This includes a W3Schools subdomain, hosting, and secure SSL certificates.",
                    "Spaces require no installation and run directly in the browser.",
                    "Features include:",
                    "Create a Spaces Account",
                    "W3Schools offers an end-of-pathway certification program.",
                    "Here you can take exams to get certified.",
                    "The Java exam is a test that summarizes the W3Schools Java syllabus.",
                    "After passing the exam you get the \"Certified Java Developer\" Certification.",
                    "There are two different types of certifications:",
                    "The non-adaptive is pass or no pass.",
                    "The adaptive certification is adaptive and graded; students will get a grade from intermediate, advanced to professional.",
                    "Buy Certificate »",
                    "Are you interested in learning how you can useW3Schools Academyto Teach \nJava?",
                    "Join our upcoming webinar for a guided demo ofW3Schools Academy. You'll see how it works, and discover how it can make teaching programming easier and more engaging.",
                    "Join our FREE Webinar »"
                ],
                "lists": [
                    [
                        "Understand Java and set up a development environment.",
                        "Learn the foundations of Java such as Java syntax, variables, data types, and operators.",
                        "Use control structures (If, for, while loops).",
                        "Understand and apply object-oriented programming (OOP) concepts: classes, objects, and inheritance.",
                        "Create and use methods for modular programming.",
                        "Handle exceptions and write error-handling code.",
                        "Work with Java collections like ArrayList and HashMap.",
                        "Write and run Java programs."
                    ],
                    [
                        "Computer Science:Java is used to teach programming concepts, algorithms, and software development.",
                        "Mathematics:Java can be used for making algorithms and solving math problems.",
                        "Information Technology (IT):Java is relevant for learning about software development, database management, and IT systems.",
                        "Engineering:Java is used in projects involving software engineering and building applications.",
                        "Physics:Java can be used to create simulations.",
                        "Robotics and Electronics:Java is often used in programming microcontrollers and robotics projects.",
                        "Statistics:Java can be used to analyze data and to do statistical calculations."
                    ],
                    [
                        "Lessons",
                        "Exercises",
                        "Quizzes"
                    ],
                    [
                        "Learning paths",
                        "Sandbox and lab environments",
                        "Achievements",
                        "And much more!"
                    ],
                    [
                        "Java HOME",
                        "Java Introduction",
                        "Java Get Started",
                        "Java Syntax",
                        "Java Output",
                        "Java Comments",
                        "Java Variables",
                        "Java Data Types",
                        "Java Type Casting",
                        "Java Operators",
                        "Java Strings",
                        "Java Math",
                        "Java Booleans",
                        "Java If...Else",
                        "Java Switch",
                        "Java While Loop",
                        "Java For Loop",
                        "Java Break and Continue",
                        "Java Arrays",
                        "Java Methods",
                        "Java Method Parameters",
                        "Java Method Overloading",
                        "Java Scope",
                        "Java Recursion",
                        "Java OOP (Object-Oriented Programming)",
                        "Java Classes/Objects",
                        "Java Class Attributes",
                        "Java Class Metods",
                        "Java Constructors",
                        "Java Modifiers",
                        "Java Encapsulation",
                        "Java Packages",
                        "Java Inheritance",
                        "Java Polymorphism",
                        "Java Inner Classes",
                        "Java Abstraction",
                        "Java Interface",
                        "Java Enums",
                        "Java User Input",
                        "Java Date",
                        "Java ArrayList",
                        "Java LinkedList",
                        "Java Link Sorting",
                        "Java HashMap",
                        "Java HashSet",
                        "Java Iterator",
                        "Java Wrapper Classes",
                        "Java Exceptions",
                        "Java Throw",
                        "Java Regular Expressions",
                        "Java Threads",
                        "Java Lambda",
                        "Java Advanced Sorting",
                        "Java File Handling",
                        "Java Create Files",
                        "Java Write to Files",
                        "Java Read Files",
                        "Java Delete Files"
                    ],
                    [
                        "Collaboration",
                        "File navigator",
                        "Terminal & log",
                        "Package manager",
                        "Database",
                        "Environment manager",
                        "Analytics"
                    ],
                    [
                        "Non-adaptive",
                        "Adaptive"
                    ]
                ],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/java/java_study_plan.asp",
        "cours": {
            "titre": "JavaStudy Plan",
            "description": "",
            "lien": "https://www.w3schools.com/java/java_study_plan.asp",
            "contenus": {
                "paragraphs": [
                    "The Java study plan helps you teach your students Java step-by-step.",
                    "Creating a study plan for Java is easy.",
                    "You can use a pre-built study plan or customize it.",
                    "Students have different skill levels. The study plans can be customized to ensure that everyone is challenged.",
                    "Save time with pre-built teacher materials and study plans. Easily organize your class with a timeline from the introduction of Java to the final exam.",
                    "This study plan is a feature of W3Schools Academy.",
                    "W3Schools Academy is a platform that has everything you need to teach coding, all in one place.",
                    "It offers you as a teacher a toolbox of features that helps you succeed with teaching in your classroom.",
                    "You need to have an active subscription to access the study plan feature. There are two different subscription tiers:",
                    "Learn More »",
                    "Academy also offer other features such as:",
                    "Get a free demo »",
                    "W3Schools has everything you need to teach Java.",
                    "The Java training materials is available for you to include and use in your study plan:",
                    "With the Java Syllabus, your students will start with the basics, like understanding variables, data types, and simple object-oriented programming concepts, and move to more advanced topics, like working with classes, inheritance, and handling exceptions. Each chapter has examples, try-it-yourself sections, exercises, and quizzes to make learning easy, interactive, and fun.",
                    "Read more about Java Syllabus.",
                    "The study plan features are made to help teachers and students. They make learning easy, flexible, and fun. These features work for different types of classes, learning styles and student level.",
                    "Learn More »",
                    "You choose the timeline and paceof your study plans.",
                    "Schools have different preferences.",
                    "Some would like more intensive pace, e.g. 5 weeks, others 12 or more weeks.",
                    "It is completely up to you.",
                    "For example, this is how a 5-week Java study plan could look like:",
                    "Image of Sample Java study plan:",
                    "Start withJava Study Planstoday.",
                    "Get Started »",
                    "Are you interested in learning how you can useW3Schools Academyto Teach Java programming?",
                    "Join our upcoming webinar for a guided demo ofW3Schools Academy. You'll see how it works, and discover how it can make teaching programming easier and more engaging.",
                    "Join our FREE Webinar »"
                ],
                "lists": [
                    [
                        "Essentials ($1.99 / month per student)",
                        "Full Access ($5.99 / month per student)",
                        "Calculate your price and orderhere."
                    ],
                    [
                        "Managing your classroom",
                        "Tracking of student progress and reports",
                        "Labs, assignments, and code challenges (prebuilt challenges or create your own ones)",
                        "Auto-grading",
                        "Teaching materials",
                        "Certification exams"
                    ],
                    [
                        "W3Schools Java Tutorial",
                        "Java Exercises",
                        "Java Quiz",
                        "Java Challenges (Coding challenges)",
                        "Java Certification Exam (End of Pathway Exam)"
                    ],
                    [
                        "Learning PathsYou can add ready-made learning paths.The learning paths are by default ordered by our recommended order.You can change the order.You can add custom activities with text, links, or multi-media files.Drag and drop or click to make changes to the path.",
                        "You can add ready-made learning paths.",
                        "The learning paths are by default ordered by our recommended order.",
                        "You can change the order.",
                        "You can add custom activities with text, links, or multi-media files.",
                        "Drag and drop or click to make changes to the path.",
                        "Interactive ContentTutorialsTry-its (test code snippets)ExercisesQuizChallengesLabs",
                        "Tutorials",
                        "Try-its (test code snippets)",
                        "Exercises",
                        "Quiz",
                        "Challenges",
                        "Labs",
                        "Timeline and PaceYou can set a timeline of your study plan (e.g., 4-week, 8-week, 12-week, 24-week plans).You can decide the learning pace for your class.Different study plans can be assigned to different students in the same class.The flexibility can help to make sure that everyone is challenged.",
                        "You can set a timeline of your study plan (e.g., 4-week, 8-week, 12-week, 24-week plans).",
                        "You can decide the learning pace for your class.",
                        "Different study plans can be assigned to different students in the same class.",
                        "The flexibility can help to make sure that everyone is challenged.",
                        "Track Student ProgressThere are tools to track student progress.The analytic tools include: chapter progress, exercises results, quiz results, exam results, and much more.The challenges can be auto-graded or manually graded. The results are available to you as a teacher.",
                        "There are tools to track student progress.",
                        "The analytic tools include: chapter progress, exercises results, quiz results, exam results, and much more.",
                        "The challenges can be auto-graded or manually graded. The results are available to you as a teacher.",
                        "End of Pathway ExamThe Java study plan aligns with the Java Certification Exam.The exam can be taken at the end of the study plan, at your selected date.The exam summarizes the Java Tutorial.You get reports of the students' results.",
                        "The Java study plan aligns with the Java Certification Exam.",
                        "The exam can be taken at the end of the study plan, at your selected date.",
                        "The exam summarizes the Java Tutorial.",
                        "You get reports of the students' results.",
                        "AccessibilityStudy plans and learning materials are accessible on desktops, tablets, and smartphones.This ensures students can learn anytime, anywhere.",
                        "Study plans and learning materials are accessible on desktops, tablets, and smartphones.",
                        "This ensures students can learn anytime, anywhere."
                    ],
                    [
                        "You can add ready-made learning paths.",
                        "The learning paths are by default ordered by our recommended order.",
                        "You can change the order.",
                        "You can add custom activities with text, links, or multi-media files.",
                        "Drag and drop or click to make changes to the path."
                    ],
                    [
                        "Tutorials",
                        "Try-its (test code snippets)",
                        "Exercises",
                        "Quiz",
                        "Challenges",
                        "Labs"
                    ],
                    [
                        "You can set a timeline of your study plan (e.g., 4-week, 8-week, 12-week, 24-week plans).",
                        "You can decide the learning pace for your class.",
                        "Different study plans can be assigned to different students in the same class.",
                        "The flexibility can help to make sure that everyone is challenged."
                    ],
                    [
                        "There are tools to track student progress.",
                        "The analytic tools include: chapter progress, exercises results, quiz results, exam results, and much more.",
                        "The challenges can be auto-graded or manually graded. The results are available to you as a teacher."
                    ],
                    [
                        "The Java study plan aligns with the Java Certification Exam.",
                        "The exam can be taken at the end of the study plan, at your selected date.",
                        "The exam summarizes the Java Tutorial.",
                        "You get reports of the students' results."
                    ],
                    [
                        "Study plans and learning materials are accessible on desktops, tablets, and smartphones.",
                        "This ensures students can learn anytime, anywhere."
                    ],
                    [
                        "Week 1: Introduction, Output",
                        "Week 2: Variables, Data Types, Strings",
                        "Week 3: Opearators & Math, Conditionals, Loops",
                        "Week 4: Arrays, Methods, Classes",
                        "Week 5: File Handling, Java Certification Exam"
                    ]
                ],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://www.w3schools.com/java/java_exam.asp",
        "cours": {
            "titre": "W3SchoolsJava Certificate",
            "description": "How Does It Work?Study for free at W3Schools.comStudy at your own speedTest your skills with W3Schools online quizzesApply for your certificate by paying an exam feeTake your exam online, at any time, and from any location",
            "lien": "https://www.w3schools.com/java/java_exam.asp",
            "contenus": {
                "paragraphs": [
                    "W3Schools offers an Online Certification Program.",
                    "The perfect solution for busy professionals who need to balance work, family, and career building.",
                    "More than 50 000 certificates already issued!",
                    "Get Your Certificate »",
                    "W3Schools offers an Online Certification Program.",
                    "The perfect solution for busy professionals who need to balance work, family, and career building.",
                    "More than 50 000 certificates already issued!",
                    "Get Your Certificate »",
                    "Any student or professional within the digital industry.",
                    "Certifications are valuable assets to gain trust and demonstrate knowledge to your clients, current or future employers on a ever increasing competitive market.",
                    "W3Schools has over two decades of experience with teaching coding online.",
                    "Our certificates are recognized and valued by companies looking to employ skilled developers.",
                    "Show the world your coding skills by getting a certification.",
                    "The prices is a small fraction compared to the price of traditional education.",
                    "Document and validate your competence by getting certified!",
                    "Fee:95 USD",
                    "Achievable certification levels:Intermediate (40%)Advanced (75%)Professional (90%)",
                    "Number of questions:Adaptive,60on average",
                    "Requirement to pass:Minimum 40% - Intermediate level",
                    "Time limit:60 minutes",
                    "Number of attempts to pass:3",
                    "Exam deadline:None",
                    "Certification Expiration:None",
                    "Format:Online, multiple choice",
                    "Register now »",
                    "Getting a certificate proves your commitment to upgrading your skills.",
                    "The certificate can be added as credentials to your CV, Resume, LinkedIn profile, and so on.",
                    "It gives you the credibility needed for more responsibilities, larger projects, and a higher salary.",
                    "Knowledge is power, especially in the current job market.",
                    "Documentation of your skills enables you to advance your career or helps you to start a new one.",
                    "Example certificate:",
                    "Each certificate gets a unique link that can be shared with others.",
                    "Validate your certification with the link or QR code.",
                    "Check how it looks like in thisExample.",
                    "Share your certificate on Linkedin the Certifications section in just one click!",
                    "Getting a certificate proves your commitment to upgrade your skills,\ngives you the credibility needed for more responsibilities, larger projects, and a higher salary.",
                    "Get Your Certificate »",
                    "Are you an educator, manager or business owner looking for courses or certifications?",
                    "We are working with schools, companies and organizations from all over the world.",
                    "Get courses and/or certifications for your team here."
                ],
                "lists": [
                    [
                        "Study for free at W3Schools.com",
                        "Study at your own speed",
                        "Test your skills with W3Schools online quizzes",
                        "Apply for your certificate by paying an exam fee",
                        "Take your exam online, at any time, and from any location"
                    ]
                ],
                "examples": []
            },
            "categories": "",
            "niveau": "",
            "durée": ""
        }
    },
    {
        "url": "https://campus.w3schools.com/products/java-certificate?utm_source=w3schools&utm_medium=referral&utm_campaign=java_exam&utm_content=get_your_certificate",
        "cours": {}
    }
]