# Generated by Django 4.2.24 on 2025-09-13 10:57

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="ServiceMonitoring",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                (
                    "service_type",
                    models.CharField(
                        choices=[
                            ("django", "Django Application"),
                            ("flask_api", "Flask API"),
                            ("elasticsearch", "Elasticsearch"),
                            ("postgres", "PostgreSQL"),
                            ("redis", "Redis"),
                            ("airflow", "Apache Airflow"),
                            ("spark_master", "Spark Master"),
                            ("spark_worker", "Spark Worker"),
                            ("pgadmin", "PgAdmin"),
                            ("consumer", "File Consumer"),
                        ],
                        max_length=20,
                    ),
                ),
                ("url", models.URLField(help_text="URL principale du service")),
                (
                    "health_check_url",
                    models.URLField(help_text="URL pour vérifier la santé du service"),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("healthy", "Healthy"),
                            ("degraded", "Degraded"),
                            ("unhealthy", "Unhealthy"),
                            ("unknown", "Unknown"),
                        ],
                        default="unknown",
                        max_length=20,
                    ),
                ),
                ("last_check", models.DateTimeField(blank=True, null=True)),
                (
                    "response_time_ms",
                    models.IntegerField(
                        blank=True,
                        help_text="Temps de réponse en millisecondes",
                        null=True,
                    ),
                ),
                (
                    "error_message",
                    models.TextField(blank=True, help_text="Dernier message d'erreur"),
                ),
                (
                    "uptime_percentage",
                    models.FloatField(
                        default=0.0, help_text="Pourcentage de disponibilité sur 24h"
                    ),
                ),
                (
                    "is_critical",
                    models.BooleanField(
                        default=True, help_text="Service critique pour le système"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Service Monitoring",
                "verbose_name_plural": "Services Monitoring",
                "ordering": ["service_type", "name"],
            },
        ),
        migrations.CreateModel(
            name="SystemAlert",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("message", models.TextField()),
                (
                    "severity",
                    models.CharField(
                        choices=[
                            ("info", "Info"),
                            ("warning", "Warning"),
                            ("error", "Error"),
                            ("critical", "Critical"),
                        ],
                        max_length=20,
                    ),
                ),
                ("is_resolved", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("resolved_at", models.DateTimeField(blank=True, null=True)),
                (
                    "service",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="admin_dashboard.servicemonitoring",
                    ),
                ),
            ],
            options={
                "verbose_name": "System Alert",
                "verbose_name_plural": "System Alerts",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="ServiceHealthHistory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("healthy", "Healthy"),
                            ("degraded", "Degraded"),
                            ("unhealthy", "Unhealthy"),
                            ("unknown", "Unknown"),
                        ],
                        max_length=20,
                    ),
                ),
                ("response_time_ms", models.IntegerField(blank=True, null=True)),
                ("error_message", models.TextField(blank=True)),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                (
                    "service",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="health_history",
                        to="admin_dashboard.servicemonitoring",
                    ),
                ),
            ],
            options={
                "verbose_name": "Service Health History",
                "verbose_name_plural": "Services Health History",
                "ordering": ["-timestamp"],
            },
        ),
    ]
